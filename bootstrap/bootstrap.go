// Code generated by go-bindata.
// sources:
// bootstrap/README.md
// bootstrap/amazon_k8s_centos_7_master.sh
// bootstrap/amazon_k8s_centos_7_node.sh
// bootstrap/amazon_k8s_ubuntu_16.04_master.sh
// bootstrap/amazon_k8s_ubuntu_16.04_node.sh
// bootstrap/bootstrap_init.sh
// bootstrap/digitalocean_k8s_centos_7_master.sh
// bootstrap/digitalocean_k8s_centos_7_node.sh
// bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh
// bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh
// bootstrap/google_compute_k8s_ubuntu_16.04_master.sh
// bootstrap/google_compute_k8s_ubuntu_16.04_node.sh
// bootstrap/inject.go
// bootstrap/vpn/meshbirdMaster.sh
// bootstrap/vpn/meshbirdNode.sh
// bootstrap/vpn/openvpnMaster-centos.sh
// bootstrap/vpn/openvpnMaster.sh
// bootstrap/vpn/openvpnNode-centos.sh
// bootstrap/vpn/openvpnNode.sh
// DO NOT EDIT!

package bootstrap

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bootstrapReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xb1\x6e\xdc\x30\x10\x44\x7b\x7e\xc5\x00\x57\xa4\x31\x94\x4f\x08\x90\x22\xc0\x15\x49\x65\x38\xad\x28\x71\x64\xae\x8f\xe2\x0a\xe4\xd2\x82\x10\xe4\xdf\x03\xea\x1c\x23\x81\xeb\xdd\xd9\x79\x3b\x73\xc1\x57\x55\xab\x56\xfc\xe6\xdc\x63\x64\x25\x7c\x21\x2c\x12\xd3\xdf\x01\xea\x5c\x64\xb3\x0a\x8b\xde\x50\xa3\x6c\xd8\xc5\xe2\xb9\x14\xb8\xf8\x96\x0c\xe3\xad\x4d\x32\x6b\xc9\x23\xb6\xa2\x8b\x24\xd6\xc1\xb9\x6f\x64\xc2\x52\x48\x98\xc2\x87\x80\x43\x5b\x81\xee\xf9\x01\x5a\xb0\x6a\x90\xe5\xe8\x67\xba\xab\xc1\xe7\x03\x26\x2b\x87\x93\xe4\xdd\xb5\xf3\x70\x59\x38\x9b\xbc\x32\x1d\xd8\x3b\xc5\x4e\xb4\xae\xaa\x18\x5b\x65\x41\xf0\xe6\xc7\xee\x22\x59\x0c\x1e\x4f\xdf\x9d\xbb\x5c\x2e\xb8\x22\x93\xa1\x0f\x8c\xeb\x96\xbc\x11\xda\x0c\x9a\x09\x5d\xde\xac\x3f\x3c\xea\xdc\x0f\xed\xa8\x08\x9a\x3f\xd9\x80\x9f\x45\x8c\x98\x7c\x8d\x48\x72\x23\x7c\xff\x71\xf8\xcf\x60\xd5\xc2\x13\x02\x92\xe1\x3f\x9c\xbc\x43\xd7\xa8\x2d\x05\x5c\x11\xf4\x8b\x73\xd7\xe5\xf4\x28\xf4\x29\x1d\x98\x7d\x86\xe6\x74\xe0\x99\x06\x31\x2c\x45\xd7\x7f\x53\xf5\x39\x20\xeb\x1e\xd9\xd3\x48\x95\x0f\xa7\xb8\xab\x7a\x0e\xbd\x8a\xf1\xc9\xa7\xc6\xfa\xeb\xf7\x88\x6a\xa5\xcd\xd6\xbf\x0e\x5c\x24\x13\x73\xab\xa6\x2b\x6e\x3c\x3e\xbf\xf6\x2d\x6c\x5e\xca\x5b\xa1\xbb\xa4\x84\x89\x90\xfc\xc2\xd9\x18\x20\xd9\xf4\xde\xd4\x1d\x7e\x70\x8f\x51\xea\xfb\x9e\xc7\xac\x81\x98\xa3\xcf\xcf\x7c\x38\xc1\xa4\x76\x11\x73\xb8\x47\x3d\x11\x2f\xad\xda\x79\x7e\xf8\x13\x00\x00\xff\xff\x8c\x9a\x9e\x97\x62\x02\x00\x00")

func bootstrapReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapReadmeMd,
		"bootstrap/README.md",
	)
}

func bootstrapReadmeMd() (*asset, error) {
	bytes, err := bootstrapReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/README.md", size: 610, mode: os.FileMode(493), modTime: time.Unix(1502556412, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapAmazon_k8s_centos_7_masterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x6f\x6f\x1b\x37\x0f\x7f\x7f\x9f\x82\x68\x02\xb8\x79\x50\x9d\x9a\x3c\x45\x37\x04\xf5\x80\xb5\x75\x01\x2f\x5d\x12\x24\x69\x37\x60\x7f\x0a\x9d\x44\xdf\x29\xa7\x93\x54\x89\x67\xe7\x90\xe4\xbb\x0f\x92\xcf\x6e\x3c\xb4\x7b\xb1\x0e\xa8\xdf\x5c\x48\x91\x3f\x92\x3f\x8a\x54\xf6\x80\x7d\xa3\x5f\xb1\x07\xbf\x20\x88\x80\x80\x37\xde\x68\xa9\xc9\x0c\x60\x1d\x41\x1f\xb5\xad\x41\x00\x61\xe7\x8d\xa0\x24\x18\x61\xeb\x5e\xd4\x08\xe4\x40\xdb\x6b\x94\x04\xd4\x20\x2c\x85\xe9\x31\x82\x88\x49\x8f\x56\xba\x3e\x64\xa3\x06\xa1\x8f\x18\x92\xd6\xe8\x4e\x67\x63\x1d\x8a\xbd\xa4\x05\xb7\xd8\x41\x76\xb5\x96\xa0\x6d\x32\x89\x08\x0b\x6d\x30\x96\xf0\x72\x00\x85\x51\xd7\x16\x84\x31\x63\x44\x54\x9b\x78\xb1\x71\xbd\x51\x50\x21\x88\xca\xe4\x9c\x2a\x84\x88\x04\x82\x20\xf4\x96\x74\x87\x4f\x8a\x3d\x10\x56\xe5\x54\x62\x83\xc6\x40\x94\x41\x7b\x82\x80\xc2\xc0\xca\x85\xb6\x84\xf9\x02\x06\xd7\x83\x45\x54\x20\x9d\x55\x9a\xb4\xb3\xc2\xac\x53\x7a\x02\xab\xa0\x09\x41\x53\x4a\xae\x12\xb1\x01\x17\xa0\x13\x2d\x82\xb0\x8e\x1a\x0c\x3b\xb8\x65\xf1\x0d\x1b\x59\xec\xc1\x6b\x1d\x45\x65\x12\xa1\x97\xb3\xb7\xda\xf6\x37\xa0\x63\x6e\x66\x40\xe9\xba\x0e\xad\x42\x95\x09\x59\x69\x63\x12\x5d\x0b\x7d\x83\x0a\x8c\x20\x0c\x65\x11\x7b\xe5\x20\xa2\x02\xa6\x61\x12\xf9\x9f\x97\xb3\xb7\xf3\xd3\x77\xbf\x4e\xcb\xff\xf1\xcd\x9f\x2a\x07\x40\xc5\xeb\x09\x70\x24\xc9\xe3\x10\xa5\xb3\x0b\x5d\xf3\x88\x26\x45\xdc\xa0\x10\xda\x85\x0b\x12\xe1\x69\xb1\x56\x05\xdf\x01\x63\xba\xf3\x2e\x10\x34\x44\x3e\x1e\x73\xee\x85\x6c\x45\x8d\xb1\x94\xc6\xf5\xaa\xac\x9d\xab\x0d\x96\xd2\x75\x7c\xe8\x3b\xae\x9c\x4c\x5f\xd6\xe2\x50\xd6\xbe\xfe\x2a\x9c\xe0\x3b\x36\x5a\x6d\xf1\xc6\x5c\x1b\x60\x12\x26\x52\x10\xbc\x78\x31\x3b\x7b\x03\x3f\xac\x4b\x1b\xfa\xae\x0c\xe8\x5d\x2c\x15\x6f\xfb\x0a\x83\x45\xc2\x98\x55\xc5\x6f\x9f\x14\x7f\x14\x56\x74\x38\x3d\xd9\x2a\x8a\x4a\x44\xec\x83\x99\xa6\xe4\x8e\x79\xc6\x79\xe0\xaf\x1d\xcf\xa8\x0f\x30\x19\x9a\xef\xd8\xcd\xf7\xcf\x3f\x3c\x7f\x56\xa0\xcd\x04\x4f\x0f\x8b\xda\xd7\xb2\x41\xd9\x4e\x0f\x8b\xe4\xf0\xe1\x81\x5c\xfb\xba\xc5\x61\xfa\xef\x58\x84\xf5\xef\xeb\xa8\x9b\x9d\xbd\x99\x8c\xfc\x0d\x7d\x97\x27\x42\x0a\xd9\x20\xb0\xe1\x93\x56\xdb\x48\x69\x72\xd9\x00\xbf\xaf\xc3\x2a\x27\x5b\x0c\x1b\x29\xba\x44\xfa\x28\x60\x45\xa9\xf2\xb8\x91\x13\x3d\x06\xe9\xa1\x28\x54\x37\x2d\xd7\xd3\x5f\x6a\xc2\xee\x67\xe1\xcb\xf9\xe9\x4f\xb3\x57\x57\xb3\xd7\x27\xef\x5e\xce\x2e\x4e\x67\x57\xb3\xcb\xf7\xb3\x8b\xcb\xf9\xd9\xe9\xc6\x31\x97\xc5\x7a\xd2\x66\x0b\x8d\x1e\x0d\x0b\x68\x50\x44\x4c\x63\x73\xfd\x31\x8f\x7f\x04\x4d\x11\xdc\xca\x42\xf4\x28\xb5\x30\x3b\x45\x88\x74\x0c\x0a\x3d\x5a\x15\xc1\xd9\x5d\x94\xcf\xd5\x7c\xfd\x71\x73\xc3\x86\x48\xd8\x49\x32\xb0\xee\xee\x48\xc3\x17\x0e\xc7\xc2\xcb\x88\x61\xa9\x25\xfe\xdd\x2a\x92\x08\xb4\x41\x28\xce\xdf\xbd\x7c\x3b\x7f\x35\x3f\x9f\xee\x3f\x46\x79\xd4\x21\x09\x25\x48\x00\x63\xbe\xaf\x8c\x96\x4c\xfb\xe5\x33\xb8\x03\xd9\x13\x30\x05\x8f\xe0\x11\xb0\x05\x1c\x1d\x14\xe7\x17\xf3\xf7\x3f\x5e\xcd\xb2\xa3\xf6\x20\x94\x4a\x9b\xcc\xad\x40\xe1\x12\x90\x9a\xa7\x70\x07\x62\xd5\xc2\x84\x6b\x8b\x04\x1c\x6e\x7d\xd0\x96\x60\xff\xe8\x7e\xb2\xc5\x7b\xc4\x13\xdc\xe1\x41\x71\x75\x76\x32\x3b\x9d\xee\x3f\x4e\xed\xcc\xb3\xd3\xf6\x95\x96\x2e\x58\x2e\x4d\x1f\xd3\x72\xb9\x8e\xce\xc2\x5d\x62\x9a\x05\x98\x7c\xa9\x89\x19\x67\x72\x50\x9c\x9f\x5d\x5c\xfd\x07\x70\x09\x06\xee\x80\x9c\xed\xbb\x0a\xc3\xe4\x20\x35\xfb\x02\x3f\xf6\x3a\xa0\x82\x6a\xd8\x5c\xaa\x2d\xc5\x89\x5f\xb6\x02\x8b\x54\x56\x41\xab\x1a\xc7\x0f\xb3\x0b\x26\x85\x31\x4c\xfb\xf5\x25\x9d\x1e\xee\xfa\xf8\xa2\x18\xb1\x20\x60\x44\xda\x4a\xda\x6a\x02\xc6\x84\xd7\xa9\x9d\x18\x58\xa5\xad\x62\x79\x77\xed\xdf\xa6\xfc\xee\x81\x31\x72\x2d\x5a\xd8\xbf\xcd\xe5\xdf\xc3\x8e\xbd\x50\x4b\x0c\xa4\x23\xb2\xd4\x23\x8c\x31\xf9\x8d\x4d\xbf\xdf\xb1\x94\x18\x88\xe1\x0d\x05\xc1\xa2\xb0\xbb\x76\xfb\xb7\xdb\x86\xdf\x27\x12\xae\x1a\x61\xdb\x08\x27\x68\x22\x0e\x70\x7c\x90\xf3\x4d\x95\x08\xef\xcd\x7a\x5a\xd9\x02\xc6\x05\xa6\x9c\x8c\xa5\x0f\x2e\x3d\xbf\x52\x18\x2d\x5d\xe9\x42\xcd\x97\x47\xe5\xff\x79\x8d\x94\x1e\x70\x96\x6f\x25\x3e\x5c\x94\x7c\x9c\x04\x91\xde\x53\xde\xb8\xb8\x39\x16\xaa\xe3\x87\xe5\x73\x3e\x42\x0d\xa2\x33\xeb\x80\x2c\x27\x91\x5f\x93\x6d\xdb\x37\x60\x42\x75\xda\x96\xe9\x30\xbf\x73\xb8\x10\xbd\x21\x90\x68\xc9\xc5\xfc\x5f\x46\xd1\xb5\x4a\x07\x60\x1e\x78\xe3\x3a\xe4\xeb\x23\x9e\x37\x6f\x21\xfd\x3f\x00\x7e\xc6\x81\xaf\xb3\x28\x64\x93\xb6\x01\xbb\x18\x03\x1d\x8f\xf1\x3e\x13\xa1\xf8\x2b\x00\x00\xff\xff\x59\x5f\x5c\x49\xc2\x09\x00\x00")

func bootstrapAmazon_k8s_centos_7_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapAmazon_k8s_centos_7_masterSh,
		"bootstrap/amazon_k8s_centos_7_master.sh",
	)
}

func bootstrapAmazon_k8s_centos_7_masterSh() (*asset, error) {
	bytes, err := bootstrapAmazon_k8s_centos_7_masterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/amazon_k8s_centos_7_master.sh", size: 2498, mode: os.FileMode(493), modTime: time.Unix(1506715375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapAmazon_k8s_centos_7_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xef\x8b\x1b\x37\x10\xfd\xae\xbf\x62\xc0\x07\x6e\x4a\xb4\xdb\x83\x92\x96\x10\x17\x9a\xde\x06\xae\x97\x9c\xe1\xec\xb4\x85\xfe\x08\x5a\x69\xbc\x2b\xaf\x56\xd2\x69\xa4\xfa\x96\x34\xff\x7b\xd1\xae\xf7\xe2\x2b\xcd\x87\x36\x81\xf8\xcb\x7a\x9e\x46\x4f\x6f\xde\x8c\xb4\x00\xfe\x99\x7e\x6c\x01\x3f\x23\x88\x80\x80\x77\xde\x68\xa9\xa3\x19\xc0\xba\x08\x89\xb4\x6d\x40\x40\xc4\xde\x1b\x11\x73\x60\x84\x6d\x92\x68\x10\xa2\x03\x6d\xf7\x28\x23\xc4\x16\xe1\x4f\x61\x12\x12\x08\xca\x38\x5a\xe9\x52\x18\x93\x5a\x84\x44\x18\x32\x6a\x74\xaf\xc7\x64\x1d\xd8\x22\xa3\xe0\x76\x0f\x98\x5d\xa3\x25\x68\x9b\x53\x08\x61\xa7\x0d\x52\x01\xcf\x07\x50\x48\xba\xb1\x20\x8c\x39\x9e\x88\x6a\x3e\x8f\x5a\x97\x8c\x82\x1a\x41\xd4\x66\xd4\x54\x23\x10\x46\x10\x11\x42\xb2\x51\xf7\xf8\x98\x2d\x40\x58\x35\x4a\xa1\x16\x8d\x01\x92\x41\xfb\x08\x01\x85\x81\x83\x0b\x5d\x01\x97\x3b\x18\x5c\x02\x8b\xa8\x40\x3a\xab\x74\xd4\xce\x0a\x33\x49\x7a\x0c\x87\xa0\x23\x82\x8e\x59\x5c\x2d\xa8\x05\x17\xa0\x17\x1d\x82\xb0\x2e\xb6\x18\x1e\xf0\x16\xec\x33\x36\x92\xb1\x05\x5c\x68\x12\xb5\xc9\x8e\x6e\xaa\x97\xda\xa6\x3b\xd0\x34\x76\x33\xa0\x74\x7d\x8f\x56\xa1\x1a\x1d\x39\x68\x63\xb2\x5f\x3b\x7d\x87\x0a\x8c\x88\x18\x0a\x46\x49\x39\x20\x54\xc0\x35\x2c\xa9\xfc\x63\x53\xbd\xbc\xbc\x7e\xfd\xcb\xaa\xf8\xb2\x9c\xff\xaa\xf1\x00\x54\x65\xb3\x84\x12\xa3\x2c\x69\x20\xe9\xec\x4e\x37\x25\xa1\xc9\x27\xce\x2c\x11\xed\xce\x05\x89\xf0\x15\x9b\xa0\xe0\x7b\xe0\x5c\xf7\xde\x85\x08\x6d\x8c\x9e\x9e\x96\xa5\x17\xb2\x13\x0d\x52\x21\x8d\x4b\xaa\x68\x9c\x6b\x0c\x16\xd2\xf5\xe5\x90\xfa\x52\x39\x99\xbf\xbc\xc3\xa1\x68\x7c\xf3\x51\x3c\xc1\xf7\xfc\x98\x75\xcf\x77\xd4\xda\x02\x97\xb0\x94\x22\xc2\xb3\x67\xd5\xfa\x05\x7c\x37\x95\x36\xa4\xbe\x08\xe8\x1d\x15\xaa\xec\x52\x8d\xc1\x62\x44\x1a\x21\xf6\xeb\x7b\xe0\x77\x66\x45\x8f\xab\xab\x7b\x80\xd5\x82\x30\x05\xb3\xca\xe2\x9e\x96\x23\xcf\xc9\x7e\xed\xca\x91\xf5\x84\x93\xa3\xf9\x86\xdf\x7d\xfb\xe4\xcd\x93\xaf\x19\xda\xd1\xe0\xd5\x39\x6b\x7c\x23\x5b\x94\xdd\xea\x9c\xe5\x0d\x6f\x4e\xe2\xc6\x37\x1d\x0e\xab\xff\xe7\x22\x4c\xbf\x8f\xb3\xae\x5a\xbf\x58\xe6\x89\x3b\x99\xb3\x79\x36\xf2\x55\xb9\x58\x17\xb0\x6d\x35\xfd\xa7\xf9\x9b\xda\x31\xa4\x7e\xbc\x61\x52\xc8\x16\x81\x0f\xef\x51\x6d\x29\xe6\x97\x80\x0f\xf0\xdb\x54\x85\x72\xb2\xc3\x30\x47\xe4\x72\x0f\x8f\x01\xd6\x31\xab\xa1\x39\xce\x6e\x1b\x8c\xa7\xa1\x50\xfd\xaa\x98\x5e\x93\x42\x47\xec\x5f\x09\x5f\x5c\x5e\xff\x58\xfd\xb0\xad\x2e\xae\x5e\x3f\xaf\x6e\xae\xab\x6d\xb5\xf9\xa9\xba\xd9\x5c\xae\xaf\xef\x79\x3d\x1a\x1e\xd0\xa0\x20\xcc\x06\xec\x6f\xc7\xb7\x83\x40\x47\x02\x77\xb0\x40\x1e\xa5\x16\xe6\x81\x62\x91\x97\x41\xa1\x47\xab\x08\x9c\x7d\xc8\xf2\x6f\x05\xee\x6f\xe7\xe9\x1c\x28\x62\x2f\xa3\x81\x69\x32\x8e\x35\x7f\x60\xf1\x58\xe5\x3f\x57\x29\x8a\x10\xe7\x9d\x6c\x01\x37\x78\x9b\x74\x40\x05\xf5\x30\x3b\xc1\xf2\x4d\x8e\x06\xf8\x01\x2c\xc6\xa2\x0e\x5a\x35\x78\xfc\x70\xbb\xe3\x52\x18\xc3\xb5\x9f\x4c\x5d\x9d\xdf\xa7\x7b\xc6\xb6\xeb\xab\xea\x7a\x75\xf6\x45\x76\x7f\xbc\x39\x5d\xaa\xb5\x74\xc1\x96\xd2\x24\xca\xad\xdd\x93\xb3\xf0\x57\xf6\x8a\x07\x58\x7e\xc8\xf3\x91\x67\xf9\x88\xbd\xfa\x7e\xb3\xad\x6e\x3e\x01\xe1\x44\xb4\x7c\x74\xb4\x92\x57\x73\xb1\x10\x90\x66\x97\x4e\xd0\xbd\xd3\x16\x38\x8f\xae\x43\x0b\x67\x6f\x47\x3d\xef\xe0\xec\xed\xc4\xf3\x8e\xfd\x1d\x00\x00\xff\xff\x79\xca\x6f\x48\xa7\x07\x00\x00")

func bootstrapAmazon_k8s_centos_7_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapAmazon_k8s_centos_7_nodeSh,
		"bootstrap/amazon_k8s_centos_7_node.sh",
	)
}

func bootstrapAmazon_k8s_centos_7_nodeSh() (*asset, error) {
	bytes, err := bootstrapAmazon_k8s_centos_7_nodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/amazon_k8s_centos_7_node.sh", size: 1959, mode: os.FileMode(493), modTime: time.Unix(1506715375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapAmazon_k8s_ubuntu_1604_masterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xc1\x4e\x24\x37\x10\xbd\xfb\x2b\x9e\x00\x89\x45\x5a\x77\x2b\x24\xca\x01\x89\x48\x61\x33\x87\x09\x09\x20\x76\x76\x73\xc9\xc5\x6d\xd7\x74\x9b\x76\xdb\xbd\x76\x19\x18\x01\xff\x1e\xb9\xa7\x87\x80\xc4\x46\x39\xac\xb4\x73\xe9\xa9\xf2\xab\x57\x4f\x7e\x55\xde\x87\xfc\x4e\x3f\xb1\x8f\xbf\x08\x2a\x12\xe8\x7e\x74\x56\x5b\x76\x1b\xf8\xc0\xc8\xc9\xfa\x16\x0a\x4c\xc3\xe8\x14\x97\xc0\x29\xdf\x66\xd5\x12\x38\xc0\xfa\x1b\xd2\x0c\xee\x08\xb7\xca\x65\x4a\x50\xa9\xe4\xc9\xeb\x90\xe3\x04\xea\x08\x39\x51\x2c\x59\x67\x07\x3b\x81\x6d\x14\xfb\x25\x8b\xb0\x7e\xc5\x1c\x5a\xab\x61\x7d\x81\x24\xc2\xda\x3a\x4a\x15\xce\x36\x30\x94\x6c\xeb\xa1\x9c\x9b\x3b\x92\xd9\xf5\x4b\x5d\xc8\xce\xa0\x21\xa8\xc6\x4d\x9a\x1a\x42\x22\x86\x62\xc4\xec\xd9\x0e\xf4\x5e\xec\x43\x79\x33\x49\x49\x1d\x39\x87\xa4\xa3\x1d\x19\x91\x94\xc3\x5d\x88\x7d\x85\xe5\x1a\x9b\x90\xe1\x89\x0c\x74\xf0\xc6\xb2\x0d\x5e\xb9\xad\xa4\xf7\xb8\x8b\x96\x09\x96\x8b\xb8\x46\xa5\x0e\x21\x62\x50\x3d\x41\xf9\xc0\x1d\xc5\x57\xbc\x95\xf8\x8e\x46\x0a\x9d\xa3\x83\x4c\xe8\x98\xc7\x74\x52\xd7\xa3\xd2\xbd\x6a\x29\x55\xda\x85\x6c\xaa\x36\x84\xd6\x51\xa5\xc3\x50\xab\x91\x6b\x13\x74\xf9\xca\x9e\x36\x55\x3b\xb6\x78\x44\xca\x26\x60\x4e\x41\x19\x03\x29\x38\x64\xdd\xa1\x26\x9e\xb0\x75\x0a\x39\x6a\x4a\x95\xb3\x89\x2b\x53\xf7\xb9\xa1\xe8\x89\xe7\x8c\x48\x1d\xa4\xc6\x21\xe9\x2e\x60\xcf\x50\x33\x29\x39\xa9\x4b\x69\xf5\x02\x6b\x43\x8d\x7f\x43\x79\x4f\xde\x2a\x87\x41\x59\xbf\x87\x5f\xfe\x6f\xb3\x43\x21\x8a\xd4\x96\x18\x79\x34\x8a\x09\x72\xf3\x9c\xb1\x3e\x71\x19\x19\xb9\xc1\xdf\x02\x00\x52\xd0\x8a\xe7\xff\xd4\x70\x19\x98\x34\x87\x26\xe8\x9e\x62\x65\xc3\x1c\x17\x0e\x8e\xca\xa7\x31\x44\x96\xd3\x5d\xce\x27\x45\x81\x23\x7e\x11\x29\x33\x9c\x56\xdb\x71\xac\x2c\xd3\xf0\xa7\x1a\xab\xe5\xc5\xef\x8b\x0f\xab\xc5\x6f\xe7\x9f\xce\x16\xd7\x17\x8b\xd5\xe2\xe3\xe7\xc5\xf5\xc7\xe5\xe5\xc5\x5c\x37\x99\x21\x33\x5b\xb7\xe3\xbd\xf9\x22\x84\x48\x9b\xc4\x34\x68\x76\x20\x3f\xcd\xf3\x56\xd7\x8b\x7c\x62\x15\x79\x97\x16\x57\x9f\xce\xfe\x58\x7e\x58\x5e\x9d\x1e\xbc\x23\x7d\x3c\x10\x2b\xa3\x58\x41\xca\x31\x37\xce\x6a\x69\xc7\xdb\x9f\xf0\x08\x9d\x19\xd2\x60\x0f\x7b\x90\x6b\x1c\x1f\x89\xab\xeb\xe5\xe7\x5f\x57\x8b\x37\x0a\x5d\xd0\xca\x7d\xb5\x6e\x75\x79\xbe\xb8\x38\x3d\x78\x57\xee\x71\xb2\xa8\xcf\x8d\xd5\x21\xfa\x5a\xbb\x9c\x98\x62\x75\x93\x82\xc7\x23\x6e\xbe\x40\x46\x1c\x7e\xed\x5a\x26\x9e\xc3\x23\x71\x75\x79\xbd\xfa\x06\x74\x85\x06\x8f\xe0\xe0\xf3\xd0\x50\x3c\x3c\x12\x62\x36\x06\x91\x12\xf1\x73\x64\xbd\x65\x48\xa9\x46\x9b\x28\xde\x52\x94\x8d\xf5\x46\x16\x8f\x71\xf0\x50\x58\x9e\x20\x25\x87\x9e\x3c\x0e\x1e\x26\x91\x4f\x78\x85\x57\xe6\x96\x22\xdb\x44\x52\x19\x13\x29\xa5\x52\x37\x9b\xf0\xf4\x0a\xa9\x29\xb2\xa4\x7b\x8e\x4a\x26\xe5\x5f\xe3\x0e\x1e\x9e\x0d\x78\x12\x62\x1f\xab\x4e\xf9\x3e\xe1\x9c\x5c\xa2\x0d\x4e\x8e\x26\xbd\xc5\x6d\x35\x8e\x6e\x3b\xbd\x72\xbd\xdb\x23\x13\x74\xaa\xc6\x18\xca\x3b\xa8\x95\xb3\x3a\x54\x21\xb6\xf5\xed\x71\xf5\x63\xdd\x12\x97\x97\x54\x4e\x53\x42\x2f\xd7\xa5\x9e\xb7\x41\x95\x87\xad\xee\x42\xda\x1d\x2b\x33\xd4\x3f\x54\x3f\xd7\x33\xd5\x46\x0d\x6e\xdb\x50\x4e\x22\x82\x5f\xdb\xf6\xd9\x9c\x1d\x99\x32\x83\xf5\x55\x39\x14\x62\xe8\x8d\x8d\x90\x23\xea\x2e\x0c\x54\xe7\x26\x7b\xce\xf5\xb4\xea\x42\x8f\xff\x51\xfa\x46\x41\xbd\xed\x27\x74\x17\xee\x3c\xe4\x35\xb6\x87\x27\xdb\xcf\x5b\x1d\xfe\x09\x00\x00\xff\xff\xbb\x93\x22\xc3\x34\x07\x00\x00")

func bootstrapAmazon_k8s_ubuntu_1604_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapAmazon_k8s_ubuntu_1604_masterSh,
		"bootstrap/amazon_k8s_ubuntu_16.04_master.sh",
	)
}

func bootstrapAmazon_k8s_ubuntu_1604_masterSh() (*asset, error) {
	bytes, err := bootstrapAmazon_k8s_ubuntu_1604_masterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/amazon_k8s_ubuntu_16.04_master.sh", size: 1844, mode: os.FileMode(493), modTime: time.Unix(1506715375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapAmazon_k8s_ubuntu_1604_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x52\x41\x4f\xf4\x36\x10\xbd\xfb\x57\x3c\xb1\x48\x5b\x24\x92\xdc\x91\xa8\x54\xda\x1c\x28\x62\x91\x60\xdb\x5e\x7a\x71\xec\x21\xf1\xc6\xb1\x83\x67\x5c\x58\x01\xff\xbd\x4a\x36\xf0\xc1\xe1\x93\xbe\xc3\x27\x91\x4b\xf2\x5e\xde\xbc\x79\x1e\xcf\x0a\xc5\x17\x3d\x6a\x85\x7f\x08\x3a\x11\xe8\x69\xf4\xce\x38\xf1\x7b\x84\x28\xc8\xec\x42\x0b\x0d\xa1\x61\xf4\x5a\x26\xe0\x75\x68\xb3\x6e\x09\x12\xe1\xc2\x8e\x8c\x40\x3a\xc2\x7f\xda\x67\x62\x68\x9e\x78\x0a\x26\xe6\x34\x8b\x3a\x42\x66\x4a\x13\xeb\xdd\xe0\x66\xb1\x4b\x6a\x35\xb1\x88\xf7\x9f\x9c\x63\xeb\x0c\x5c\x98\x24\x4c\xb8\x77\x9e\xb8\xc4\xc5\x1e\x96\xd8\xb5\x01\xda\xfb\xa5\x23\xd9\xb7\x7e\xdc\xc5\xec\x2d\x1a\x82\x6e\xfc\x9c\xa9\x21\x30\x09\xb4\x20\xe5\x20\x6e\xa0\x53\xb5\x82\x0e\x76\x8e\xc2\x1d\x79\x0f\x36\xc9\x8d\x82\x44\xda\xe3\x31\xa6\xbe\xc4\xe5\x3d\xf6\x31\x23\x10\x59\x98\x18\xac\x13\x17\x83\xf6\x87\x48\xa7\x78\x4c\x4e\x08\x4e\xa6\x70\x8d\xe6\x0e\x31\x61\xd0\x3d\x41\x87\x28\x1d\xa5\x4f\xbe\xa5\xfa\xc2\x8b\x54\x26\x27\x8f\x82\xd1\x89\x8c\x7c\x56\x55\xa3\x36\xbd\x6e\x89\x4b\xe3\x63\xb6\x65\x1b\x63\xeb\xa9\x34\x71\xa8\xf4\x28\x95\x8d\x66\x7a\x17\x3d\xed\xcb\x76\x6c\xf1\x02\xce\x36\x62\xa1\xa0\xad\x45\xa1\x24\x66\xd3\xa1\x22\x99\xb5\x15\xc7\x9c\x0c\x71\xe9\x1d\x4b\x69\xab\x3e\x37\x94\x02\xc9\xc2\x28\xee\x50\x18\xac\xc9\x74\x11\x47\x96\x9a\x39\xc9\x59\x35\x95\x96\x1f\xb4\x2e\x56\xf8\x06\x8b\x27\x0a\x4e\x7b\x0c\xda\x85\x23\xfc\xfa\xa3\xcd\xd6\x4a\x4d\x51\x5b\x12\xe4\xd1\x6a\x21\x14\xfb\x77\xc6\x05\x96\x69\x65\x8a\x3d\xfe\x55\x00\xc0\xd1\x68\x59\xbe\xa9\x91\x69\x61\x78\x81\x36\x9a\x9e\x52\xe9\xe2\x82\x27\x0f\x49\x3a\xf0\x18\x93\x14\xf3\x2c\x97\x3f\x53\x02\x4f\xf2\x01\x69\x3b\x9c\x97\x87\x75\x2c\x9d\xd0\x70\xad\xc7\xf2\x72\xf3\x67\xfd\xfb\xb6\xfe\xe3\xea\xaf\x8b\xfa\x76\x53\x6f\xeb\xbb\xbf\xeb\xdb\xbb\xcb\x9b\xcd\x52\xb7\x7b\x50\x8a\xf7\x2c\x34\x18\xf1\xa0\x30\x2f\xef\x21\xc4\x07\x9e\x45\x27\x79\xa3\x95\xda\xde\x5c\xd5\x9b\xf3\xe3\x5f\xa6\x53\xcc\x03\xea\x73\xe3\x4c\x4c\xa1\x32\x3e\xb3\x50\x2a\x77\x1c\x03\x5e\xb0\x7b\x40\x91\xb0\xfe\x5e\xa8\xd9\x67\x7d\xa2\xae\x7f\xbb\xdb\xd6\xb7\x3f\xc1\xf0\x60\xb4\x3e\x51\x6a\x99\x07\x12\x31\xc9\x3b\xda\x45\x17\x50\x14\x12\x7b\x0a\x38\x7e\x9e\xfb\xbf\xe2\xf8\xf9\x50\xf7\xfa\x7f\x00\x00\x00\xff\xff\xcc\xa3\x46\x7b\xf8\x04\x00\x00")

func bootstrapAmazon_k8s_ubuntu_1604_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapAmazon_k8s_ubuntu_1604_nodeSh,
		"bootstrap/amazon_k8s_ubuntu_16.04_node.sh",
	)
}

func bootstrapAmazon_k8s_ubuntu_1604_nodeSh() (*asset, error) {
	bytes, err := bootstrapAmazon_k8s_ubuntu_1604_nodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/amazon_k8s_ubuntu_16.04_node.sh", size: 1272, mode: os.FileMode(493), modTime: time.Unix(1506715375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapBootstrap_initSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x4e\xc4\x30\x0c\x45\xf7\x39\xc5\x67\xb2\xa5\xea\x69\x38\x40\x9a\xfc\x49\x83\x8a\x5d\xd9\x6e\xd1\x6c\x38\x3b\xea\x68\x4e\x00\x5e\xda\x7e\x7a\xd2\xcb\x6f\xf3\xe1\x36\x2f\x43\x66\xca\x89\xa5\xf8\x9a\x52\x9e\xfe\x3c\x29\xe3\xc3\xd9\xa0\xb2\x3d\x10\x0a\x67\xc0\x57\x2e\x45\x3a\x8a\x34\x68\xac\x34\x50\xce\x61\x2a\x5f\x94\x78\x20\xd6\x21\xdd\x53\x7e\xde\x87\xa3\xb4\xc6\x76\xb1\xb1\x12\x0b\xfb\x10\x19\xd2\xa1\xf7\x17\xbc\xa8\x86\x87\x95\x1d\x5e\x6d\xec\xe1\xef\x29\x63\x48\xdd\x8e\x76\xfd\x5d\x54\xa7\xd0\x4a\xb0\xe1\xf6\x6d\x23\xf8\x5c\xd6\xed\xf0\xa0\xa1\x38\x3e\x5d\xe5\x06\x15\xa6\x7c\x89\xaa\xb1\x04\x51\xe0\x43\xfa\x46\x1c\x4e\x9b\x5a\x89\xf2\x32\xe0\xae\x86\xba\xe9\xd1\xb0\x9b\x9e\xa3\xd1\xfc\x5f\x91\xae\x2a\x13\x53\x6d\xf8\x49\xbf\x01\x00\x00\xff\xff\x21\xee\xd3\xad\x82\x01\x00\x00")

func bootstrapBootstrap_initShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapBootstrap_initSh,
		"bootstrap/bootstrap_init.sh",
	)
}

func bootstrapBootstrap_initSh() (*asset, error) {
	bytes, err := bootstrapBootstrap_initShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/bootstrap_init.sh", size: 386, mode: os.FileMode(493), modTime: time.Unix(1505848458, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_centos_7_masterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\xdd\x6e\xdc\x36\x13\xbd\xe7\x53\x0c\x62\x03\xfb\x19\x08\xa5\xcf\x69\x91\x16\x41\xb6\x40\x93\x6c\x00\x37\xa9\x6d\x38\x4e\x7a\xd1\x16\x01\x97\x9c\x95\xc6\xa2\x48\x86\x1c\x7a\xbd\xb0\xdd\x67\x2f\x28\x69\xb7\x5e\xf4\xe7\xa2\x29\x10\xdd\x08\x33\x9c\x39\x3c\x9c\x33\x43\x1e\x80\xfc\x42\x9f\x38\x80\x9f\x10\x54\x44\xc0\x9b\x60\x49\x13\xdb\x0d\x38\xcf\x90\x13\xb9\x06\x14\x30\xf6\xc1\x2a\x2e\x86\x55\xae\xc9\xaa\x41\x60\x0f\xe4\xae\x50\x33\x70\x8b\x70\xad\x6c\xc6\x04\x2a\x15\x3f\x3a\xed\x73\x1c\x82\x5a\x84\x9c\x30\x16\xaf\xa5\x9e\x86\x60\x8a\xe2\xa0\x78\xc1\xaf\xf6\x90\x7d\x43\x1a\xc8\x95\x90\x84\xb0\x22\x8b\xa9\x82\x17\x1b\x30\x98\xa8\x71\xa0\xac\x9d\x76\x44\xb3\xdd\x2f\xb5\x3e\x5b\x03\x4b\x04\xb5\xb4\x03\xa7\x25\x42\x42\x06\xc5\x10\xb3\x63\xea\xf1\xb1\x38\x00\xe5\xcc\x40\x25\xb5\x68\x2d\x24\x1d\x29\x30\x44\x54\x16\xd6\x3e\x76\x15\x9c\xac\x60\xe3\x33\x38\x44\x03\xda\x3b\x43\x4c\xde\x29\x3b\x52\x7a\x0c\xeb\x48\x8c\x40\x5c\xc8\x2d\x55\x6a\xc1\x47\xe8\x55\x87\xa0\x9c\xe7\x16\xe3\x1e\x6e\x25\xbe\xa0\x90\x22\x65\xe3\x21\x86\x1e\xa4\xa4\x3e\xf8\xc8\xd0\x32\x87\xf4\xac\xae\x83\xd2\x9d\x6a\x30\x55\xda\xfa\x6c\xaa\xc6\xfb\xc6\x62\xa5\x7d\x5f\x6f\x72\x5f\x1b\xaf\xcb\x5f\x76\xb8\xa9\x9a\xd0\x7c\x16\x4e\x0c\xbd\x9c\xa2\x76\x78\x23\x60\x6a\x41\x6a\x98\x69\xc5\xf0\xfc\xf9\xe2\xec\x35\x7c\x07\x35\xf2\xb0\x73\x15\x31\xf8\x54\x99\xba\xcb\x4b\x8c\x0e\x19\xd3\xe0\x12\x3f\xff\xe1\xf8\x55\x38\xd5\xe3\xfc\xcd\xce\x21\x96\x2a\x61\x8e\x76\x5e\xc8\x3d\xab\x07\x9c\x07\xf9\xe4\xeb\x01\xf5\x01\xa6\x44\xfb\x8d\xbc\xf9\xf6\xe9\xc7\xa7\x5f\x0b\x74\xa5\x69\xcc\xfc\x58\x34\xa1\xd1\x2d\xea\x6e\x7e\x2c\x4a\xc2\xc7\x07\x76\x13\x9a\x0e\x37\xf3\x7f\x57\x45\x18\xbf\xcf\x2b\xdd\xe2\xec\xf5\x4c\x88\x03\x78\xb7\x78\x4b\x2e\xdf\x00\x25\x30\x94\x06\xea\xb0\x2c\xd3\xb1\x52\xd9\x0e\xbd\xf9\xea\xac\x82\xcb\x96\x52\x09\x29\xe3\x1b\x51\xfb\xbe\x47\x67\xd0\x0c\x23\xb0\x26\x6b\xcb\x80\xac\xe8\x06\x0d\x58\xc5\x18\xab\x49\x99\x4d\xee\x87\x96\xd6\x4a\xb7\x08\x72\x33\xe9\xb5\x5d\x22\x97\xb8\xcc\x9f\xdc\xc0\x2f\xe3\xa9\x8c\xd7\x1d\xc6\xad\x95\x7c\xd1\x74\x32\x70\xc9\x85\x5d\xda\xda\xa5\xfa\x16\xf9\xa1\xa9\x4c\x3f\xaf\xc6\x19\xae\x88\xb1\xff\x51\x85\xea\xe4\xf4\x87\xc5\xcb\xcb\xc5\xab\x37\xef\x5f\x2c\x2e\x4e\x17\x97\x8b\x77\x1f\x16\x17\xef\x4e\xce\x4e\xb7\x89\x43\xd5\x64\x66\xb2\x3b\x68\x0c\x68\x65\x44\x8b\x2a\x61\xa9\xd1\xd5\xa7\x61\x88\x13\x10\x27\xf0\x6b\x07\x29\xa0\x26\x65\xf7\x0e\xa1\xca\x32\x18\x0c\xe8\x4c\x02\xef\xf6\x51\xfe\xea\xcc\x57\x9f\x84\x48\x9b\xc4\xd8\x6b\xb6\x30\xf6\xcd\x54\x81\x3f\xfb\xa7\xe3\x56\x09\xe3\x35\x69\x7c\x10\x90\x58\x45\xde\xe6\x89\xf3\xf7\x2f\xde\x9e\xbc\x3c\x39\x9f\x1f\xfe\x4f\xe7\x68\x81\x56\xda\xbb\x15\x35\x55\x8f\x47\xe2\xfc\xe2\xe4\xc3\xf7\x97\x8b\x61\x95\x02\x28\x63\xca\x2d\xe3\xd7\x60\xf0\x1a\x38\xbb\xff\xc3\x1d\xa8\x75\x07\xb3\x9a\x1c\x32\xd4\x70\x1b\x22\x39\x86\xc3\x27\xf7\x33\xb8\x03\x9d\x19\xa4\x79\x54\x3f\x02\xb9\x3a\x3e\x12\xa8\x5b\x0f\x87\x3b\xcc\x32\x76\xdc\x87\xba\xa2\x20\xc4\xe5\xd9\x9b\xc5\x69\xe1\xa0\x78\x1c\xc6\x2e\x2f\x49\xfb\xe8\x6a\x6d\x73\x2a\x2d\x72\x95\xbc\x83\xbb\x52\x5b\x19\x61\xf6\x77\xb2\x0d\x38\xb3\x23\x71\x7e\x76\x71\xf9\x1f\xc0\x15\x18\xb8\x03\xf6\x2e\xf7\x4b\x8c\xb3\xa3\x22\xef\x05\x7e\xca\x14\xc7\xbe\x9f\xda\xa8\x94\xb7\xd4\x56\xae\xc1\x21\x57\xcb\x48\xa6\xc1\xe9\x27\xdd\x4a\x6a\x65\xad\xa4\x30\x76\xe4\xfc\x78\x17\x1e\x84\x98\x10\x20\x62\x42\xde\x59\xe4\x88\x41\x4a\x15\xa8\x08\x88\x51\x2e\xc9\x19\x39\x5c\x81\x87\xb7\x85\xd5\x3d\x48\xc9\xbe\x43\x07\x87\xb7\xc3\xa1\xef\x61\x2f\x5e\x99\x6b\x8c\x4c\x09\x65\x51\x0d\x53\x2a\x79\x93\xd6\xf7\x7b\x91\x1a\x23\x4b\xbc\xe1\xa8\x64\x52\x6e\x3f\xee\xf0\x76\x27\xd7\xfd\x48\xb5\xd0\x56\x21\xd8\x71\x04\xe5\x0a\xa6\x4b\xcf\x78\x9d\xaa\x10\x7d\x79\x19\xb5\xb2\xa4\x7d\xe5\x63\x53\x5f\x3f\xa9\xbe\xaa\x1b\xe4\xf2\xb6\xca\xa1\xf3\xf0\xe1\xe5\x5a\x4f\xed\xad\xca\x53\x57\xb7\x3e\x6d\x97\x95\xe9\xeb\xe3\xea\x69\x3d\x41\x6d\x54\x6f\xc7\x0d\xe5\x40\x62\x68\xd1\x9d\xb2\x5b\x30\x65\x7a\x72\x55\x59\x1c\x64\xf2\x9e\x45\xdf\x19\x8a\x20\x03\xfc\x56\x0f\x77\xb2\xd0\xe1\x1f\xd2\xb6\x51\xf5\xb8\x81\xf8\x3d\x00\x00\xff\xff\xbd\x1e\x2f\x8b\x0d\x09\x00\x00")

func bootstrapDigitalocean_k8s_centos_7_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_centos_7_masterSh,
		"bootstrap/digitalocean_k8s_centos_7_master.sh",
	)
}

func bootstrapDigitalocean_k8s_centos_7_masterSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_centos_7_masterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_centos_7_master.sh", size: 2317, mode: os.FileMode(493), modTime: time.Unix(1506715375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_centos_7_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x53\xdf\x8b\xdc\x36\x10\x7e\xd7\x5f\x31\xb0\x07\xdb\x40\x64\x73\x50\xd2\x12\xb2\x85\xa6\x71\xe0\x7a\xcd\x2d\xdc\x6d\xdb\x87\xb6\x04\x59\x9a\xb5\xb5\x96\x25\x9d\x46\xea\x9e\x49\xf3\xbf\x17\xf9\xc7\x75\xb7\x34\x2f\x4d\xe0\xfc\x62\xe6\xd3\xe8\xd3\x37\xdf\xcc\xac\x80\x3f\xd1\xc7\x56\xf0\x2b\x82\x08\x08\xf8\xe0\x8d\x96\x3a\x9a\x01\xac\x8b\x90\x48\xdb\x06\x04\x44\xec\xbd\x11\x31\x07\x46\xd8\x26\x89\x06\x21\x3a\xd0\xf6\x80\x32\x42\x6c\x11\xfe\x14\x26\x21\x81\xa0\x8c\xa3\x95\x2e\x85\x31\xa9\x45\x48\x84\x21\xa3\x46\xf7\x7a\x4c\xd6\x81\xad\x32\x0a\x6e\x7f\xc6\xec\x1a\x2d\x41\xdb\x9c\x42\x08\x7b\x6d\x90\x0a\x78\x3d\x80\x42\xd2\x8d\x05\x61\xcc\xfc\x22\xaa\xe5\x3d\x6a\x5d\x32\x0a\x6a\x04\x51\x9b\x51\x53\x8d\x40\x18\x41\x44\x08\xc9\x46\xdd\xe3\x73\xb6\x02\x61\xd5\x28\x85\x5a\x34\x06\x48\x06\xed\x23\x04\x14\x06\x8e\x2e\x74\x05\x5c\xed\x61\x70\x09\x2c\xa2\x02\xe9\xac\xd2\x51\x3b\x2b\xcc\x24\xe9\x39\x1c\x83\x8e\x08\x3a\x66\x71\xb5\xa0\x16\x5c\x80\x5e\x74\x08\xc2\xba\xd8\x62\x38\xe3\x2d\xd8\x13\x36\x92\x31\x4a\xca\x41\xf0\x3d\x70\xae\x7b\xef\x42\x84\x36\x46\x4f\x2f\xcb\xd2\x0b\xd9\x89\x06\xa9\x90\xc6\x25\x55\x34\xce\x35\x06\x0b\xe9\xfa\x72\x48\x7d\xa9\x9c\xcc\x7f\xde\xe1\x50\x34\xbe\xf9\x2c\x9e\xe0\x7b\x3e\x67\x3d\xf2\x4d\x84\xd4\x02\x97\xb0\x96\x22\xc2\xab\x57\xd5\xf6\x2d\x7c\x07\x25\xc6\xf1\xe5\x22\xa0\x77\x54\xa8\xb2\x4b\x35\x06\x8b\x11\x69\x84\xd8\x6f\xff\x00\x7f\x30\x2b\x7a\xdc\x5c\x3f\x02\xac\x16\x84\x29\x98\x4d\x16\xf7\xb2\x1c\x79\x4e\xee\x6b\x57\x8e\xac\x27\x9c\x1c\xcd\x37\xfc\xe1\xdb\x17\xef\x5f\x7c\xcd\xd0\xe6\xa9\x51\x9b\x4b\xd6\xf8\x46\xb6\x28\xbb\xcd\x25\xcb\x17\xde\x9f\xc4\x8d\x6f\x3a\x1c\x36\xff\xcf\x45\x98\xbe\xcf\xb3\xae\xda\xbe\x5d\x33\xb6\x82\xbb\xea\x27\x6d\xd3\x03\x68\x02\xa5\x69\x94\x9e\x27\xf2\xcd\xb6\x80\x5d\xab\x29\xe3\x79\x69\x03\x4a\xd7\xf7\x68\x15\xaa\x71\xf0\x8f\xda\x98\xbc\x16\x7b\xfd\x80\x0a\x8c\x88\x18\x8a\xb9\x1d\x43\xea\xc7\x41\x96\x42\xb6\x08\x7c\x98\x9b\xb4\x1c\x69\x4b\x31\x6f\x1d\x1f\xe0\xf7\xa9\x14\xe5\x64\x87\x61\x89\xc8\xe5\x46\xce\x01\xd6\x31\x4b\xa2\x25\xce\x96\x1b\x8c\xa7\xa1\x50\xfd\xa6\x98\x36\xb7\xd0\x11\xfb\x77\xc2\x17\x57\x37\x3f\x56\x3f\xec\xaa\x37\xd7\x3f\xbf\xae\x6e\x6f\xaa\x5d\x75\xf7\x4b\x75\x7b\x77\xb5\xbd\x79\xe4\xf5\x68\x78\x40\x83\x82\x30\xbb\x70\xb8\x1f\xf7\x94\x40\x47\x02\x77\xb4\x40\x1e\xa5\x16\xe6\x4c\xb1\xc8\xc7\xa0\xd0\xa3\x55\x04\xce\x9e\xb3\xfc\x57\x81\x87\xfb\x65\x44\x07\x8a\xd8\xcb\x68\x60\x1a\x8f\xb9\xe6\x4f\x1c\xce\x55\xfe\xfb\x94\xa2\x08\x71\xb9\xc9\x56\x70\x8b\xf7\x49\x07\x54\x50\x0f\x8b\x13\x8c\x06\xca\xa9\xfc\x08\x16\x63\x51\x07\xad\x1a\x9c\x7f\xdc\xee\xb9\x14\xc6\x70\xed\x27\x53\x37\x97\x8f\xe9\x9e\xb1\xdd\xf6\xba\xba\xd9\x5c\x7c\x95\xdd\x1f\xd7\xa7\x4b\xb5\x96\x2e\xd8\x52\x9a\x44\xb9\xbf\x07\x72\x16\xfe\xca\x5e\xf1\x00\xeb\x4f\x79\x3e\xf2\xac\x9f\xb1\x77\xdf\xdf\xed\xaa\xdb\x2f\x40\x38\x11\xad\x9f\xcd\x56\xf2\x6a\x29\x16\x02\xd2\xe2\xd2\x09\x7a\x70\xda\x02\xe7\xd1\x75\x68\xe1\xe2\xc3\xa8\xe7\x23\x5c\x7c\x98\x78\x3e\xb2\xbf\x03\x00\x00\xff\xff\x95\x07\x23\x07\x13\x07\x00\x00")

func bootstrapDigitalocean_k8s_centos_7_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_centos_7_nodeSh,
		"bootstrap/digitalocean_k8s_centos_7_node.sh",
	)
}

func bootstrapDigitalocean_k8s_centos_7_nodeSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_centos_7_nodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_centos_7_node.sh", size: 1811, mode: os.FileMode(493), modTime: time.Unix(1506715375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_ubuntu_1604_masterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xc1\x6e\x1b\x37\x14\xbc\xf3\x2b\x06\xb6\x00\xd5\x40\x48\x36\x29\xd0\x43\x80\x14\xa8\x53\x1d\xd4\xb4\xb6\xe1\x38\xe9\xa5\x17\x8a\x7c\x5a\xd1\xe2\x92\x1b\xf2\xd1\xb6\x60\xbb\xdf\x5e\x70\xb5\x72\xed\x43\x8b\x1e\x02\x44\x17\xed\x7b\x1c\xce\x1b\x70\x86\x3c\x86\xfc\x46\x3f\x71\x8c\x3f\x08\x26\x13\xe8\x6e\x08\xde\x7a\x0e\x3b\xc4\xc4\xa8\xc5\xc7\x0e\x06\x4c\xfd\x10\x0c\xb7\x22\x98\xd8\x55\xd3\x11\x38\xc1\xc7\x6b\xb2\x0c\xde\x10\x6e\x4c\xa8\x54\x60\x4a\xeb\x53\xb4\xa9\xe6\x11\xb4\x21\xd4\x42\xb9\x75\x83\xef\xfd\x08\xf6\x59\x1c\xb7\x2e\xd2\xfa\x05\x73\xea\xbc\x85\x8f\x0d\x52\x08\x6b\x1f\xa8\x28\x9c\xee\xe0\xa8\xf8\x2e\xc2\x84\x30\x4d\x24\x77\x98\x57\x36\xa9\x06\x87\x15\xc1\xac\xc2\xa8\x69\x45\x28\xc4\x30\x8c\x5c\x23\xfb\x9e\x5e\x89\x63\x98\xe8\x46\x29\x65\x43\x21\xa0\xd8\xec\x07\x46\x26\x13\x70\x9b\xf2\x56\x61\xb9\xc6\x2e\x55\x44\x22\x07\x9b\xa2\xf3\xec\x53\x34\x61\x2f\xe9\x15\x6e\xb3\x67\x82\xe7\x26\x6e\x65\xca\x06\x29\xa3\x37\x5b\x82\x89\x89\x37\x94\x5f\xf0\x2a\xf1\x0d\x8d\x14\xb6\xe6\x00\x59\xb0\x61\x1e\xca\x5b\xad\x07\x63\xb7\xa6\xa3\xa2\x6c\x48\xd5\xa9\x2e\xa5\x2e\x90\xb2\xa9\xd7\x66\x60\xed\x92\x6d\xff\x72\x4b\x3b\xd5\x0d\x1d\x1e\x50\xaa\x4b\x98\x5a\x30\xce\x41\x0a\x4e\xd5\x6e\xa0\x89\x47\xac\x2e\xa9\x66\x4b\x45\x05\x5f\x58\x39\xbd\xad\x2b\xca\x91\x78\xea\x88\xb2\x81\xb4\x98\x93\xdd\x24\x1c\x39\x5a\x8d\x4a\xde\xea\xb6\x55\x3d\xc3\xfa\xa4\xf1\x4f\x29\xef\x28\x7a\x13\xd0\x1b\x1f\x8f\xf0\xd3\xff\x1d\x36\x17\xa2\x49\xed\x88\x51\x07\x67\x98\x20\x77\x4f\x1d\x1f\x0b\xb7\xc8\xc8\x1d\xfe\x14\x00\x50\x92\x35\x3c\x7d\xd3\x8a\x5b\x60\xca\x54\xba\x64\xb7\x94\x95\x4f\x53\xdd\x38\x38\x9b\x58\x86\x94\x59\x8e\x67\x39\xad\x34\x05\x81\xf8\x59\x65\x5c\xff\x4e\xed\xe3\xa8\x3c\x53\xff\xbb\x19\xd4\xf2\xec\xd7\xc5\xfb\xab\xc5\x2f\x1f\x3e\x9d\x2e\x2e\xcf\x16\x57\x8b\x8f\x9f\x17\x97\x1f\x97\xe7\x67\xd3\xbe\xd1\x0c\x59\xd9\x87\x03\xef\xf5\x17\x21\x44\xd9\x15\xa6\xde\x72\x00\xc5\x31\xcf\x7b\x5d\xcf\xfa\x85\x4d\xe6\x43\x5b\x5c\x5c\x2e\x3f\xff\x7c\xb5\x58\x5e\xbc\x9b\x7d\xe7\x87\x66\x57\x8b\x62\xba\x85\xa3\x1b\x70\x8d\xdf\xe3\x01\xe6\x76\x8b\xb9\xf6\x91\x18\x1a\xf7\x43\xf6\x91\x31\x7b\xf3\x38\xc7\x03\x6c\x65\x48\x77\xa4\x8f\x20\xd7\xaf\x4f\xc4\x68\xd9\xec\x89\xb3\xd9\xc0\xfd\xa0\x95\x1f\xc4\xc5\xa7\xd3\xdf\x96\xef\xc7\x39\x63\xc0\xfc\xda\xa6\xb8\xf6\x9d\xea\xe9\x44\x88\xab\xf3\x0f\x8b\xb3\xb6\x64\x78\xef\xdc\xb6\xae\xbc\x4d\x39\x6a\x1b\x6a\x61\xca\xea\xba\xa4\x88\x07\x5c\x7f\x81\xcc\x98\xff\xdb\x69\x8d\x3c\xf3\x13\x71\x71\x7e\x79\xf5\x15\xe8\x1a\x0d\x1e\xc0\x29\xd6\x7e\x45\x79\x7e\x22\xc4\xe4\x17\x32\x15\xe2\xa7\xca\x47\xcf\x90\xd2\x0c\xbe\x50\xbe\xa1\x2c\x57\x3e\x3a\xd9\xac\xc7\xec\xbe\xb1\x3c\x42\x4a\x4e\x5b\x8a\x98\xdd\x8f\x22\x1f\xf1\x02\x6f\xdc\x0d\x65\xf6\x85\x64\xb3\x80\x4a\x69\xfb\xa6\x23\x7b\x7c\x81\xb4\x94\x59\xd2\x1d\x67\x23\x8b\x89\x2f\x71\xb3\xfb\xa7\xb3\x7f\x14\x7b\xad\xcd\x72\x33\x0c\x61\x1f\x61\xb9\x3e\x5c\x26\x97\x6c\x51\x43\x4e\xed\x31\xb4\x26\x78\x9b\x54\xca\x9d\xbe\x79\xa3\x7e\xd0\x1d\x71\x7b\x4e\xe5\x18\x15\x7a\x7e\x67\xf4\x74\x25\x4c\x7b\xdd\xf4\x26\x95\xc3\xb2\x71\xbd\x7e\xad\x7e\xd4\x13\xd5\xce\xf4\x61\x3f\x50\x8e\x22\x46\xab\x9f\xac\x38\x90\x19\xd7\xfb\xa8\xda\xa2\x10\xc7\xb8\x4c\x89\x45\xbf\x75\x3e\x43\x0e\xf8\x4b\x8f\x77\x5d\xd8\xe1\x3f\xb6\x1d\x50\x7a\x3f\x40\x88\xbf\x03\x00\x00\xff\xff\x73\xce\x79\xa0\x01\x07\x00\x00")

func bootstrapDigitalocean_k8s_ubuntu_1604_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_ubuntu_1604_masterSh,
		"bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh",
	)
}

func bootstrapDigitalocean_k8s_ubuntu_1604_masterSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_ubuntu_1604_masterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh", size: 1793, mode: os.FileMode(493), modTime: time.Unix(1506715375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x52\xc1\x4e\xe4\x46\x10\xbd\xfb\x2b\x9e\x18\xa4\x09\x12\x6e\xdf\x91\x88\x14\x12\x1f\x08\x62\x90\x60\x92\x5c\x72\x69\x77\x17\x76\x8f\xdb\xdd\xa6\xab\x3a\x30\x02\xfe\x3d\xb2\xc7\x68\x61\x57\x2b\xed\x61\x25\x7c\xb1\xeb\x55\xbd\x57\xaf\xca\xb5\x42\xf9\x49\x4f\xb1\xc2\x3f\x04\x9d\x08\xf4\x34\x7a\x67\x9c\xf8\x3d\x42\x14\x64\x76\xa1\x85\x86\xd0\x30\x7a\x2d\x53\xe0\x75\x68\xb3\x6e\x09\x12\xe1\xc2\x8e\x8c\x40\x3a\xc2\x7f\xda\x67\x62\x68\x9e\x70\x0a\x26\xe6\x34\x17\x75\x84\xcc\x94\x26\xd4\xbb\xc1\xcd\xc5\x2e\x15\xab\x09\x45\xbc\xff\xa0\x1c\x5b\x67\xe0\xc2\x54\xc2\x84\x7b\xe7\x89\x15\x2e\xf6\xb0\xc4\xae\x0d\xd0\xde\x2f\x1d\xc9\xbe\xf5\xe3\x2e\x66\x6f\xd1\x10\x74\xe3\x67\x4f\x0d\x81\x49\xa0\x05\x29\x07\x71\x03\x9d\x16\x2b\xe8\x60\x67\x2b\xdc\x91\xf7\x60\x93\xdc\x28\x48\xa4\x3d\x1e\x63\xea\x15\x2e\xef\xb1\x8f\x19\x81\xc8\xc2\xc4\x60\x9d\xb8\x18\xb4\x3f\x58\x3a\xc5\x63\x72\x42\x70\x32\x99\x6b\x34\x77\x88\x09\x83\xee\x09\x3a\x44\xe9\x28\x7d\xd0\x55\xc5\x27\xfe\xc8\x82\xb3\x8d\x30\x39\x79\x94\x8c\x4e\x64\xe4\xb3\xaa\x1a\xb5\xe9\x75\x4b\xac\x8c\x8f\xd9\xaa\x36\xc6\xd6\x93\x32\x71\xa8\xf4\x28\x95\x8d\x66\x7a\x97\x3d\xed\x55\x3b\xb6\x78\xc1\x2c\xb2\x40\xd0\xd6\xa2\x3c\xe8\x4a\xcc\xa6\x43\x45\x32\x13\x2a\x8e\x39\x19\x62\xe5\x1d\x8b\xb2\x55\x9f\x1b\x4a\x81\x64\x41\x0e\x14\xee\x50\x1a\xac\xc9\x74\x11\x47\x96\x9a\xd9\xd3\x59\x35\xf1\xd5\x3b\x82\x8b\x15\xbe\x84\xe5\x13\x05\xa7\x3d\x06\xed\xc2\x11\x7e\xfd\xd1\x8e\xeb\x65\xfc\xc9\x79\x4b\x82\x3c\x5a\x2d\x84\x72\xff\x11\x76\x81\x65\xba\xa5\x72\x8f\x7f\x0b\x00\xe0\x68\xb4\x2c\xdf\xd4\xc8\x74\x49\xbc\x84\x36\x9a\x9e\x92\x72\x71\x89\x27\x0d\x49\x3a\xf0\x18\x93\x94\xf3\x7e\x97\xcc\xe4\xc5\x93\xbc\x8b\xb4\x1d\xce\xd5\xe1\x4e\x95\x13\x1a\xae\xf5\xa8\x2e\x37\x7f\xd6\xbf\x6f\xeb\x3f\xae\xfe\xba\xa8\x6f\x37\xf5\xb6\xbe\xfb\xbb\xbe\xbd\xbb\xbc\xd9\x2c\xbc\xdd\xc3\x32\x03\xef\x59\x68\x30\xe2\x41\x61\x3e\xed\x83\x93\xaf\x93\x2c\x3a\xc9\x5b\xae\xd8\xde\x5c\xd5\x9b\xf3\xe3\x5f\xa6\x71\xe6\x9d\xf5\xb9\x71\x26\xa6\x50\x19\x9f\x59\x28\xa9\x1d\xc7\x80\x17\xec\x1e\x50\x26\xac\xbf\xe7\x6e\xd6\x59\x9f\x14\xd7\xbf\xdd\x6d\xeb\xdb\x9f\x20\x78\x10\x5a\x9f\x2c\xc3\x95\xf5\xdb\x82\x90\x88\x49\xbe\x41\x77\xd1\x05\x94\xa5\xc4\x9e\x02\x8e\x9f\x67\x3f\xaf\x38\x7e\x3e\xe8\xbc\x16\xff\x07\x00\x00\xff\xff\x5d\xba\xeb\x7a\x2b\x05\x00\x00")

func bootstrapDigitalocean_k8s_ubuntu_1604_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh,
		"bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh",
	)
}

func bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_ubuntu_1604_nodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh", size: 1323, mode: os.FileMode(493), modTime: time.Unix(1506715375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x4d\x6f\x1c\x37\x0c\xbd\xeb\x57\xb0\xbb\x06\x72\x89\x46\x4d\x8b\xf6\x60\xc0\x05\xea\x74\xdb\x6e\xd3\xd8\xc6\x66\x93\x5e\x7a\x08\x47\xe2\xce\xa8\xab\x91\x06\x12\xb5\xf6\xc2\x75\x7f\x7b\x21\xcd\xf8\x0b\x08\x8a\xde\xec\xcb\x98\xd4\x23\xf9\xc4\x47\x6a\x97\x5f\xa9\x9c\xa2\x6a\xad\x57\xe4\x0f\xd0\x62\xea\x45\x22\x06\x49\x42\x1b\xf8\x47\x88\x25\xc8\x17\xfa\x13\x4b\xd8\xf6\x94\x08\x0e\xe8\x32\x25\xc0\x48\x60\xfd\x5f\xa4\x99\x0c\x58\xcf\x01\xb8\x27\x48\x3a\xda\x91\x1b\xf8\x83\x2a\x80\x6e\x46\x67\xb5\x65\x77\x04\x1f\x18\x72\xb2\xbe\x03\x04\xa6\x61\x74\xc8\xc5\x70\xe8\xbb\x8c\x1d\x01\x87\x39\x5d\xcd\x33\x15\x11\x4b\xc0\x54\x4e\xc8\xeb\x90\x63\x85\xf5\x04\x39\x51\x2c\x5e\x67\x07\x5b\xe1\x36\x16\x1f\x84\xdd\xb3\xcc\xa1\xb3\x1a\xac\x2f\x80\x44\xb0\xb3\x8e\x52\x03\xe7\x47\x30\x94\x6c\xe7\x01\x9d\x7b\xbc\xc0\x7c\xa9\xd4\x87\xec\x8c\x58\x42\x4b\x80\xad\xab\xac\x5a\x82\x22\x01\x32\xc4\xec\xd9\x0e\xf4\x1a\xd0\x9b\xe9\xb6\x3d\x39\x37\xdf\x19\x22\xa1\x83\xeb\x10\xf7\x0d\xac\x77\x70\x0c\x19\x3c\x91\x01\x1d\xbc\xb1\x6c\x83\x47\x37\x51\x7a\x0d\xd7\xd1\x32\x81\xe5\x42\xae\x4a\xbc\x84\x10\x61\xc0\x3d\x01\xfa\xc0\x3d\xc5\x67\x99\x1b\xb1\x14\x4b\xb1\xbd\x7c\xb7\xba\x38\x5b\xac\x2f\x7e\x5b\xbd\xdd\xae\x7e\xaa\xe6\x42\x5c\x5d\x6e\xb6\x8f\xce\x62\x2d\x2a\xfa\x05\xe7\x44\xe8\x1c\x1d\xc8\x04\x3d\xf3\x98\x4e\x95\x1a\x51\xef\xb1\xa3\xd4\x68\x17\xb2\x69\xba\x10\x3a\x47\x8d\x0e\x83\xc2\x91\x95\x09\xba\x7c\xe5\x9e\x8e\x4d\x37\x76\xf0\x37\xa4\x6c\x02\xcc\x2e\x40\x63\x40\x0a\x0e\x59\xf7\xa0\x88\x2b\x56\xa5\x90\xa3\xa6\xd4\x38\x9b\xb8\x31\x6a\x9f\x5b\x8a\x9e\x78\xf6\x88\xd4\x83\xd4\xf0\x8a\x74\x1f\x60\x61\xa8\xad\x4c\x4e\x55\x09\x6d\x9e\x60\x6d\x50\xf0\x68\xca\x1b\xf2\x16\x1d\x0c\x68\xfd\x02\x7e\xf8\xbf\xc5\x5e\x09\x51\xa8\x76\xc4\x90\x47\x83\x4c\x20\x8f\x0f\x1e\xeb\x13\x97\x31\x93\x47\xf8\x53\x00\x00\xa4\xa0\x91\xe7\xff\xa9\xe5\x32\x62\x69\x36\x4d\xd0\x7b\x8a\x8d\x0d\xb3\x5d\x72\x70\x44\x9f\xc6\x10\x59\xd6\x5e\xce\x27\x85\x81\x23\x7e\x62\xa1\x19\xce\x9a\x69\x84\x1b\xcb\x34\xbc\xc7\xb1\xb9\x9f\x89\x77\x1f\xcf\x57\x9b\x8b\xd5\x76\xf5\xe1\xd3\x6a\xf3\x61\x7d\x79\x31\xc7\x55\x31\x64\x66\xeb\x92\x10\x22\x1d\x13\xd3\xa0\xd9\x01\xf9\x3a\xf8\x13\x9d\x27\xfe\xc4\x18\xf9\xde\x2d\xae\x36\xeb\x4f\x3f\x6e\x57\xeb\xab\xb3\xcf\x93\xdc\x32\x12\xc7\x23\x7c\x07\x32\xed\x7e\x85\xc5\x7b\x62\x34\xc8\x28\x7f\x76\x78\x08\xf1\x14\x7e\xa9\xaa\x2f\x60\x31\x6b\x31\xcc\x00\xa5\xc3\x30\x66\xa6\xfb\x00\x75\x78\xa3\x6a\xdb\xbc\x26\xe5\x89\xcb\x42\x49\xeb\x99\xe2\x0e\x35\x25\xf5\xb5\xb2\xe3\xe2\xb3\xa8\xda\x9e\x3c\xb0\x28\x7a\xf1\x30\xaa\xc6\x8e\xe2\xea\xe3\xf9\xef\xeb\xb7\x2f\xc1\x0c\xb5\xa6\x94\xa4\x0e\x7e\x67\xbb\xe2\xa0\x1b\xa6\xe8\xd1\xc9\xca\x59\xcc\x52\x41\xa4\x44\xfc\x60\x59\x6f\x19\xa4\xc4\xd1\x26\x8a\x07\x8a\xb2\xb5\xde\xc8\xa2\x3a\x9c\xdc\x96\x8d\xbe\x03\x29\x39\xec\xc9\xc3\xc9\x6d\x5d\xfb\x3b\x78\x86\x47\x73\xa0\xc8\x36\x91\x44\x63\x22\xa5\x54\xe2\xe6\x26\xdc\x3d\x43\x6a\x8a\x2c\xe9\x86\x23\xca\x84\xfe\x39\xee\xe4\xf6\xa1\x9b\x77\x62\xe2\x5a\x64\xc7\x71\x74\xd3\xf4\xca\xdd\xfd\x1e\x99\xa0\x53\x33\xc6\x50\xde\x4e\x8d\xce\xea\xd0\x84\xd8\xa9\xc3\x37\xcd\xb7\xaa\x23\x2e\xaf\xaf\xac\xe3\x42\x4f\xd7\x45\xcd\xdb\x80\xe5\x31\x54\x7d\x48\xf7\xc7\x68\x06\xf5\xa6\xf9\x5e\xcd\xa9\x8e\x38\xb8\xa9\xa0\xac\x24\x6a\x37\xa7\x75\x7c\x92\x0c\xcd\x60\x7d\x53\x0e\xcb\x8f\xe2\x26\x04\x16\xc3\xde\xd8\x08\x72\x04\xd5\x87\x81\x54\x6e\xb3\xe7\xac\xea\xc6\x0b\x3d\xfe\x47\x86\x2f\x04\xa8\xa9\xac\xd0\x7d\xb8\xf6\x20\x37\x30\x1d\x9e\x4e\x9f\x2f\x55\xf8\x37\x00\x00\xff\xff\x07\x44\x0d\xb6\xbb\x07\x00\x00")

func bootstrapGoogle_compute_k8s_ubuntu_1604_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh,
		"bootstrap/google_compute_k8s_ubuntu_16.04_master.sh",
	)
}

func bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh() (*asset, error) {
	bytes, err := bootstrapGoogle_compute_k8s_ubuntu_1604_masterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/google_compute_k8s_ubuntu_16.04_master.sh", size: 1979, mode: os.FileMode(493), modTime: time.Unix(1506715375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x53\x4d\x4f\xe4\x38\x10\xbd\xe7\x57\xbc\xed\x20\x71\x21\xce\x1d\x89\x95\x96\xdd\x1c\x58\x44\x23\x41\xef\xce\x65\x2e\x8e\x5d\x24\xa6\x1d\x3b\x72\x95\x81\x16\xc3\xfc\xf6\x51\x3e\x10\x30\x73\x99\x1b\x7d\xe9\xbc\x57\x55\xcf\xaf\xe2\x97\xf2\x8f\x3a\x73\xaa\x5b\x17\x6a\x0a\x0f\x68\x35\xf7\x05\x93\xa0\xa2\xc2\x58\x7c\x2f\x8a\x12\xd5\x27\xfd\x8a\x12\xbb\x9e\x98\xf0\xa0\x7d\x26\x86\x4e\x04\x17\xee\xc9\x08\x59\xb8\x20\x11\xd2\x13\xd8\x24\x37\x8a\xc2\x17\x9a\x1b\xe8\x69\xf4\xce\x38\xf1\x07\x84\x28\xc8\xec\x42\x07\x0d\xa1\x61\xf4\x5a\x26\xe0\x75\xe8\xb2\xee\x08\x12\x57\xb9\x59\x67\x39\xa4\x28\xa1\x79\xaa\x50\x30\x31\xa7\xb9\xad\x27\x64\xa6\x34\xb1\xde\x0d\x6e\x6e\x77\x69\xe2\x10\xef\x3e\x28\xc7\xce\x19\xb8\x30\x35\x30\xe1\xce\x79\x62\x85\xf3\x03\x2c\xb1\xeb\x02\xb4\xf7\x6f\x0b\xac\x4b\x71\x1f\xb3\xb7\x45\x89\x96\xa0\x5b\x3f\xbb\x6a\x09\xd3\x15\x68\x41\xca\x41\xdc\x40\x27\xd0\xc1\x2e\xdb\xf6\xe4\xfd\xba\x33\x12\x69\x8f\xc7\x98\xf6\x0a\x17\x77\x38\xc4\x8c\x40\x64\x61\x62\xb0\x4e\x5c\x0c\xda\x2f\x96\x4e\xf0\x98\x9c\x10\x9c\x4c\xe6\xe6\x2b\x2e\x11\x13\x06\xbd\x27\xe8\x10\xa5\xa7\xf4\x41\x59\x15\x65\x51\x16\xbb\xeb\xcb\x66\x7b\xb6\xb9\xd8\xfe\xdb\xfc\xbd\x6b\xfe\x99\xe1\xa6\xb8\xfa\xeb\x76\xd7\xdc\xbc\xd1\x0b\xde\x7c\x66\x4e\x0a\xce\x36\xc2\xe4\xe4\x51\x31\x7a\x91\x91\x4f\xeb\x7a\xd4\x66\xaf\x3b\x62\x65\x7c\xcc\x56\x75\x31\x76\x9e\x94\x89\x43\xad\x47\xa9\x6d\x34\xd3\x7f\xb5\xa7\x83\xea\xc6\x0e\xdf\x30\x8b\xac\x14\xb4\xb5\xa8\x16\x5d\x89\xd9\xf4\xa8\x49\xe6\x81\x9a\x63\x4e\x86\x58\x79\xc7\xa2\x6c\xbd\xcf\x2d\xa5\x40\xb2\x32\xcb\x08\xf7\xa8\x0c\x8e\xc9\xf4\x11\x1b\x4b\xed\xec\xe9\xb4\x9e\xe6\xd5\xbb\x01\x17\x6b\xbc\xc1\xea\x89\x82\xd3\x1e\x83\x76\x61\x83\x3f\x7f\xf7\xc4\xe3\x75\xfd\xc9\x79\x47\x82\x3c\x5a\x2d\x84\xea\xf0\x91\x76\x81\x65\xca\x5f\x75\xc0\xd7\x02\x00\x38\x1a\x2d\xeb\x33\xb5\x32\x65\x8f\x57\x68\xa3\xd9\x53\x52\x2e\xae\x78\xd2\x90\xa4\x03\x8f\x31\x49\x35\xbf\xdf\xb5\x32\x79\xf1\x24\xef\x90\xb6\xc3\x99\x5a\xb2\xad\x9c\xd0\x70\xa5\x47\xf5\x1a\x95\xcb\xff\xce\x9b\x9b\x6d\xb3\x6b\x6e\xff\x6f\x6e\x6e\x2f\xae\xb7\xab\x75\x3e\xb0\xd0\x60\xc4\x83\xc2\xfc\x0d\x2c\x06\x7e\x2e\xb2\xe8\x24\xaf\xb5\xa5\x58\x35\xaf\x87\x22\x11\x93\xfc\xc2\xde\x47\x17\x50\x55\x12\xf7\x14\x70\xf4\x3c\x67\xf8\x05\x47\xcf\x4b\x6a\x5f\x8a\x1f\x01\x00\x00\xff\xff\x0b\xf4\x02\x6b\xff\x04\x00\x00")

func bootstrapGoogle_compute_k8s_ubuntu_1604_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh,
		"bootstrap/google_compute_k8s_ubuntu_16.04_node.sh",
	)
}

func bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh() (*asset, error) {
	bytes, err := bootstrapGoogle_compute_k8s_ubuntu_1604_nodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/google_compute_k8s_ubuntu_16.04_node.sh", size: 1279, mode: os.FileMode(493), modTime: time.Unix(1506715375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapInjectGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xd1\x6a\xdb\x30\x18\x85\xaf\xa3\xa7\x38\xe4\x2a\x01\xcf\x6e\x7b\x33\xe8\xd8\x85\xd7\x76\xcc\xb4\x24\x10\xa7\x2b\xa5\xf4\x42\x96\xff\xd8\x5a\x1d\x49\x93\x7e\xd7\x0d\xa5\x0f\xb4\xd7\xd8\x93\x0d\x25\xce\x58\x99\x6f\x0c\xfa\xcf\xf9\x74\xce\xaf\x2c\xc3\x85\x75\x3b\xaf\x9b\x96\xf1\xfb\x17\xce\x4e\x4e\x3f\x62\xdd\x12\xae\xfb\x4a\x2b\xeb\x0d\xf2\x9e\x5b\xeb\x83\xc8\x32\x91\x65\xb8\xd1\x8a\x4c\xa0\x1a\xbd\xa9\xc9\x83\x5b\x42\xee\xa4\x6a\xe9\x38\x49\xf0\x9d\x7c\xd0\xd6\xe0\x2c\x3d\xc1\x2c\x0a\xa6\xe3\x68\x3a\xff\x14\x11\x3b\xdb\x63\x2b\x77\x30\x96\xd1\x07\x02\xb7\x3a\x60\xa3\x3b\x02\xbd\x28\x72\x0c\x6d\xa0\xec\xd6\x75\x5a\x1a\x45\x18\x34\xb7\xfb\x7b\x46\x4a\x1a\x19\xf7\x23\xc3\x56\x2c\xb5\x81\x84\xb2\x6e\x07\xbb\xf9\x57\x08\xc9\x63\xe8\xf8\xb5\xcc\xee\x3c\xcb\x86\x61\x48\xe5\x3e\x70\x6a\x7d\x93\x75\x07\x69\xc8\x6e\x8a\x8b\xab\x45\x79\xf5\xe1\x2c\x3d\x19\x4d\xb7\xa6\xa3\x10\xe0\xe9\x67\xaf\x3d\xd5\xa8\x76\x90\xce\x75\x5a\xc9\xaa\x23\x74\x72\x80\xf5\x90\x8d\x27\xaa\xc1\x36\x86\x1e\xbc\x66\x6d\x9a\x04\xc1\x6e\x78\x90\x9e\x22\xa6\xd6\x81\xbd\xae\x7a\x7e\xb7\xb3\x63\x44\x1d\xde\x09\xac\x81\x34\x98\xe6\x25\x8a\x72\x8a\x2f\x79\x59\x94\x49\x84\xdc\x15\xeb\x6f\xcb\xdb\x35\xee\xf2\xd5\x2a\x5f\xac\x8b\xab\x12\xcb\x15\x2e\x96\x8b\xcb\x62\x5d\x2c\x17\x25\x96\x5f\x91\x2f\xee\x71\x5d\x2c\x2e\x13\x90\xe6\x96\x3c\xe8\xc5\xf9\xd8\xc0\x7a\xe8\xb8\x4d\xaa\xf7\xab\x2b\x89\xde\x45\xd8\xd8\x43\xa4\xe0\x48\xe9\x8d\x56\xe8\xa4\x69\x7a\xd9\x10\x1a\xfb\x4c\xde\x68\xd3\xc0\x91\xdf\xea\x10\x5f\x35\x40\x9a\x3a\x62\x3a\xbd\xd5\x2c\x79\x7f\xf4\x5f\xaf\x54\x08\x27\xd5\x53\x84\x54\xd6\x72\x60\x2f\x9d\x10\x7a\xeb\xac\x67\x4c\x63\x5f\xd3\x84\xa9\x10\x9b\xde\x28\x14\xe6\x07\x29\x9e\xd5\x92\x25\x1e\x1e\xab\x1d\x53\x82\x67\xd9\xf5\x14\xb0\x95\xee\xe1\xa0\x7e\x3c\xfc\xe6\x98\x1d\x25\xe4\xbd\xf5\x73\xbc\x8a\x49\x60\x7f\x19\xcd\xe7\x9f\x71\x50\xed\x59\x73\x31\x89\xd5\x9e\x12\x3c\xc7\x89\x97\xa6\xa1\x23\xf7\x55\x4c\xfe\xba\x8e\xa6\x90\xae\xc8\x75\x52\xd1\x6c\x9c\x24\x7b\x6f\x82\xd3\xb9\x98\xbc\x89\x89\x27\xee\xbd\x19\x13\x1e\x35\xf3\x04\x46\x77\xe2\x4d\xfc\x09\x00\x00\xff\xff\xbc\x34\x80\x62\x48\x03\x00\x00")

func bootstrapInjectGoBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapInjectGo,
		"bootstrap/inject.go",
	)
}

func bootstrapInjectGo() (*asset, error) {
	bytes, err := bootstrapInjectGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/inject.go", size: 840, mode: os.FileMode(493), modTime: time.Unix(1502556412, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnMeshbirdmasterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x3d\x4b\xc4\x40\x10\xc6\xf1\x7e\x3e\xc5\xe3\xdd\x71\x68\x91\x4c\x65\x23\x68\x21\x1e\x28\x12\x11\x05\xc1\x4a\x92\xcd\xe8\xae\x6e\x76\xc3\xce\xc4\x17\x08\x7e\x76\x11\x14\x63\x39\xfc\x99\x1f\xcf\x7a\x8f\x27\x2d\xdc\x85\xc4\x92\x5e\xd1\xb5\xea\x49\xc5\x50\x09\xb9\x1e\x9f\x44\x6b\xdc\x5d\x5f\xa1\x11\xf5\xe4\xa6\x12\xe1\xcd\xc6\x23\xe6\x41\xd4\x77\xa1\xf4\xb5\xcb\x03\x87\xa4\xd6\xc6\x58\xab\xc7\x0c\xf5\xf4\x1b\x91\xe4\x0d\xdb\x13\xb0\x0d\x23\xc7\xfc\xf4\x22\x1f\xd4\xec\x6e\xcf\x4f\x2f\x6e\xce\x1e\x2e\x77\xf7\xc7\x9b\x7d\xd7\xda\x32\x63\x86\x9b\x0c\x55\x8f\x15\x56\xa8\x1e\x71\x78\x40\xe2\x7c\xc6\x66\xf9\x87\x1f\xb2\xfe\x06\xe5\x7d\xcc\xc5\xf0\xdf\x5d\x5e\x7f\x73\x9e\x73\x48\xd8\xd2\x57\x00\x00\x00\xff\xff\xda\xd3\x92\x18\xf4\x00\x00\x00")

func bootstrapVpnMeshbirdmasterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnMeshbirdmasterSh,
		"bootstrap/vpn/meshbirdMaster.sh",
	)
}

func bootstrapVpnMeshbirdmasterSh() (*asset, error) {
	bytes, err := bootstrapVpnMeshbirdmasterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/vpn/meshbirdMaster.sh", size: 244, mode: os.FileMode(493), modTime: time.Unix(1502556264, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnMeshbirdnodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\x41\x6f\xd4\x30\x10\x85\xef\xfe\x15\x8f\x06\x71\x6a\x93\x3b\x12\x97\xd2\x95\x58\xaa\x56\x08\x2a\x50\x4f\xc8\x71\x66\xe3\x69\x9d\x71\xe4\x19\xb7\x5d\x09\xf1\xdb\x51\xb2\x8b\x60\x7f\x41\x73\x9b\x97\xe7\xe7\xf7\x69\xdc\xbc\xe9\xaa\x96\xae\x67\xe9\x48\x9e\xd0\x7b\x8d\x4e\xc9\x70\x41\x2e\x0c\xf8\xed\x5c\x83\x8b\x57\xfa\x5c\x83\xbb\x48\x4a\x78\xf2\xa9\x92\xc2\x17\x02\xcb\x03\x05\xa3\x01\x2c\x96\x61\x91\xa0\xa1\xf0\x6c\x2d\x7e\xd0\x6a\xa0\x97\x39\x71\x60\x4b\x7b\x48\x36\x54\x65\x19\xe1\x61\x34\xcd\xc9\xdb\x32\x24\x2f\x63\xf5\x23\xc1\xf2\x31\x6e\xcd\x39\x5c\xe2\x1a\x78\x5d\xfe\x90\x84\x5c\xcb\x6a\x8b\x84\xaa\x54\x16\x35\xf1\xc4\xab\x9d\xcb\xa2\x21\xef\x4e\x92\xf3\xc8\x01\x2c\x8b\x41\x09\x3b\x4e\xa4\x2d\x2e\xf7\x18\x48\x79\x14\xf8\x94\xfe\x01\x1c\xa1\x34\xe6\x9a\x06\xd7\xa0\x27\xf8\x3e\xad\xad\x7a\xc2\xb2\x02\x6f\x28\x55\x8c\x27\x3a\x87\x97\xe1\x40\x1b\x29\xa5\x23\x33\x0a\xf9\x84\xe7\x5c\x1e\x5b\x6c\x77\xd8\xe7\x0a\x21\x1a\x10\xb2\x0c\x6c\x9c\xc5\xa7\x43\xa5\x73\x3c\x17\x36\x02\xdb\x52\x6e\x5d\x71\x83\x5c\x30\xf9\x47\x82\x97\x6c\x91\xca\x49\x72\xeb\x1a\xd7\xb8\x9b\xcd\xb7\x4f\x97\xdb\xaf\x57\x3f\xaf\x37\xf7\x1f\xce\xb6\xb7\x9f\x37\x1f\xef\x36\x57\x8b\x7a\xbd\xb9\x3f\x7b\xcd\x87\xe1\x1a\x7c\xff\x72\x8b\x1b\xd2\xe8\x42\x2d\x09\xd1\x6c\x7e\xdf\x75\x13\x69\xec\xb9\x0c\x6d\xc8\x53\xc7\xa2\xe6\x53\x6a\x35\xe2\x17\x34\x3a\x7a\x99\x73\x31\x9c\x50\xbd\xfd\x7f\x72\x7f\x8f\xe3\x21\xb3\xe0\x9d\xfb\x13\x00\x00\xff\xff\x85\xc7\x28\xe5\x1c\x03\x00\x00")

func bootstrapVpnMeshbirdnodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnMeshbirdnodeSh,
		"bootstrap/vpn/meshbirdNode.sh",
	)
}

func bootstrapVpnMeshbirdnodeSh() (*asset, error) {
	bytes, err := bootstrapVpnMeshbirdnodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/vpn/meshbirdNode.sh", size: 796, mode: os.FileMode(493), modTime: time.Unix(1502556412, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnOpenvpnmasterCentosSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5f\x6f\xe3\x36\x12\x7f\xd7\xa7\x18\xc8\x01\xba\x6b\x54\x62\x9c\x4b\x7b\xed\x36\x0e\xea\x75\xdd\x9c\xb1\xdd\xd8\x48\xec\x3d\x2c\x60\x20\xa0\xa9\xb1\xc5\x5a\x22\x05\x92\x72\x22\x2c\xf6\x3e\xfb\x81\x94\xe4\xb5\x6c\x27\xb1\xdb\x87\xfa\xc5\xd2\xfc\xf9\xcd\x8f\xe4\xcc\x70\xd4\x82\xe0\x1f\xfa\x79\x2d\xf8\x2f\x02\x55\x08\xf8\x94\x25\x9c\x71\x93\x14\x20\xa4\x81\x5c\x73\xb1\x04\x0a\x06\xd3\x2c\xa1\xc6\xbe\x24\x54\x2c\x73\xba\x44\x30\x12\xb8\xf8\x13\x99\x01\x13\x23\xac\x69\x92\xa3\x06\xaa\xad\x1c\x05\x93\xb9\x72\x46\x31\x42\xae\x51\x59\x69\xc2\x53\xee\x8c\xb9\xf2\x5a\x56\x0a\x72\xd1\x40\x96\x4b\xce\x80\x0b\x6b\xa2\x11\x16\x3c\x41\x1d\xc2\xfb\x02\x22\xd4\x7c\x29\x80\x26\x49\x15\x11\xa3\x3a\x9e\x8e\x65\x9e\x44\x30\x47\xa0\xf3\xc4\x71\x9a\x23\x68\x34\x40\x0d\xa8\x5c\x18\x9e\xe2\xf7\x5e\x0b\xa8\x88\x1c\x15\x1d\x63\x92\x80\x66\x8a\x67\x06\x14\xd2\x04\x1e\xa5\x5a\x85\x30\x5c\x40\x21\x73\x10\x88\x11\x30\x29\x22\x6e\xb8\x14\x34\x29\x29\x7d\x0f\x8f\x8a\x1b\x04\x6e\x2c\xb9\x39\xd5\x31\x48\x05\x29\x5d\x21\x50\x21\x4d\x8c\xaa\x81\x1b\x7a\xff\xe0\x41\x8e\xc6\x83\xdb\x4f\xe3\xdb\x87\x0f\x83\xcf\xfd\xd1\xf4\x76\x72\xf7\xb9\xeb\x4f\xef\xfd\x6d\xf9\xf8\x6e\xf4\x69\x78\xdb\x1f\x74\xfd\x7e\xaf\xa1\xe8\x0f\x27\x9f\xbb\xfe\x3d\x15\xbf\x2b\x2a\x18\xd7\x4c\x36\xd4\xa3\xbb\x9b\xae\xff\x21\x9f\x73\x26\x95\x68\x68\x06\x1f\x7b\xc3\x3f\xba\xbe\x92\xd2\xfc\x9a\x48\x46\x93\x58\x6a\xd3\xf4\x9d\x3e\xe3\x7a\xdb\xfb\x38\xe8\xfa\x1a\xd5\x1a\x95\xef\x79\xe3\xbb\xe1\xa7\xde\x64\xf0\x30\x1c\x77\xcf\xde\xb0\x5c\x25\x10\x1b\x93\xbd\x23\xa4\xf3\xe3\xcf\xe1\xc5\x0f\x97\x61\xf5\x4f\x52\x34\x34\xa2\x86\x92\x75\x87\x70\x61\x50\x2d\x28\x43\x4d\x32\xc5\xd7\xd4\x20\x39\x27\x3c\x5b\x5f\x12\x1a\x45\x0a\xb5\x7e\xeb\x79\x2d\x18\x65\x28\x3e\x8d\x6f\xbd\x22\x4f\x81\x0b\x6d\x6c\x36\x61\x86\x49\xa0\x30\x41\xaa\x11\x82\xa2\xa1\x93\x19\x8a\x75\x26\x00\xa9\x2e\x02\xa5\xa9\xd5\x7b\xe9\x2a\xe2\x0a\xfe\x47\x2a\x65\xc0\xa8\xc7\x32\x08\xd4\x02\x48\xae\x15\xd1\x31\x55\x48\x6a\x0f\x72\x11\x9e\x93\x76\xc3\x9a\x78\x9e\xc6\x08\x02\x0e\x01\x82\xaf\x09\x3e\x65\x52\x19\xf8\x30\xf8\xfc\x50\x1d\x57\xd8\x3e\x20\xec\xce\xfc\xb3\x2f\xfb\x47\xfb\x75\xe6\x13\xbf\x89\xbf\xa6\x4a\x3f\x1b\xa2\x3e\xf9\x66\x8c\x4d\x3e\xec\x04\xa9\xe5\xa7\x46\xb1\x69\xb4\xb3\x0a\x9b\x58\xbb\x4b\x18\x4e\x4e\xe6\x3f\xba\xbb\x69\x02\xdb\x94\xdc\xc1\x1d\xdd\xdd\x9c\x0a\xeb\xd2\xb7\x09\x5c\x66\xf4\x0e\xb4\x13\x9e\xcc\x79\xba\x43\x79\xba\xc7\x78\x7a\x2a\xa6\x2d\x9a\x26\xaa\x2b\xa3\x1d\x5c\x2b\x7b\x0e\xd9\x6b\xb5\xe0\x06\x05\x2a\x6a\x6c\xbb\xb4\xd5\x07\x0c\x95\xe1\x0b\xce\xa8\x41\xed\xb1\xa8\x99\xe5\x5a\xe6\x8a\xd9\x2e\xaf\xb4\x17\x12\x96\x20\x15\x01\x4d\x12\x2f\x24\xf3\x9c\x27\x51\xc0\x28\x04\xc1\x9c\x1a\x16\x6f\x44\x2b\x2c\x82\x0a\xba\x52\xc1\x3e\xbf\x8d\x75\x14\x7b\x75\xc5\x05\xc1\x12\xc5\x0a\x0b\x08\x02\x8d\x4c\xa1\x81\x15\x16\x9a\x18\x1a\xae\xb0\x68\x52\x67\x09\x47\x61\x9a\xd4\xb7\xe2\x6f\x02\x97\x76\x3b\xeb\xae\x3a\x82\x6d\xf8\x0b\xbe\xcc\x15\xb5\x4d\xdf\xd6\x73\x63\xbf\x5c\x6c\x46\x43\xa6\xcc\x61\x85\x8d\xb3\xaf\xd8\x5f\xaa\x43\x98\x79\x00\x70\x9c\xf9\x61\x5c\xf3\x5c\xc0\x28\xbe\x38\xbf\xfc\x29\xcc\x30\x05\x82\x86\xd5\x7a\xbb\x9e\xad\xde\x14\xc9\x8d\x26\xb8\x08\x2f\xc3\x7f\x11\x4d\xd3\x2c\xc1\xea\x2f\x28\xf7\x22\x70\x77\x2f\x29\x4f\x2f\xb4\xb2\x06\xe6\xc1\xc5\x49\xb1\xb0\xdb\xdb\x82\x5e\xf4\x67\xae\x0d\x4c\xfe\xb8\xdf\xd9\xd9\x46\x3a\xcf\x7e\x31\x89\x0e\x68\x6e\x62\xa8\x96\x74\x1e\xb6\xc9\x9e\x8c\xf8\xc7\x45\xde\xc2\x3e\x00\x42\x6d\x06\x05\x11\x57\xc8\x2c\x13\x38\x3f\x12\xd5\xad\x67\x20\xdc\x68\xd1\x1b\xdc\x07\x9d\x8b\x9f\x82\xfe\xfb\x3e\xb0\x98\x67\xb8\x5b\xa0\xb3\x5f\x18\xcf\xec\x30\xb0\x65\x19\xb6\xc9\xbe\xf0\xaf\xac\xe9\x00\x0a\x05\xb7\xc8\xfb\xff\xf4\x2e\x7e\xf8\xf1\x94\x05\xdd\xa3\x29\x67\x32\x3b\x15\x2d\x95\xcc\xb3\xdd\x85\x38\xad\x90\x73\x19\x15\x61\x9b\x6c\xbd\xfd\x05\xea\x16\xcf\x05\x01\x21\xdd\x7f\xd8\x26\x8d\xf7\x63\x31\x1d\xf7\xc9\xe8\xb7\xd1\x9b\xa7\x34\x8f\x14\xe7\x6f\xdf\xc1\x82\x8b\x08\x1e\x69\x61\x07\xbf\x65\x5d\xd7\x02\x1f\x5d\x47\x80\x85\x54\x80\x6b\x54\x45\x55\xff\xdb\xc7\x19\xe5\x76\xd0\x75\x3d\x64\xbb\x79\xec\x10\xdf\x58\x05\x4c\x84\x6d\xb2\xfd\x7a\x02\xed\x3a\xe6\x70\x6c\x29\x3d\x52\x15\x71\xb1\xdc\x09\xd5\x12\x68\x42\x3b\xb4\x84\x3c\x7b\xa8\xac\xc2\x36\x39\x20\xed\x76\xea\xd0\xba\xd0\xcc\x24\xd5\x8e\xbb\x67\x08\x32\xcf\x3e\x1a\x4c\xed\x9b\x36\x54\x99\x7a\x92\xf9\xf5\x40\xf7\xfd\x66\x8a\x25\xc5\x17\x6c\x0f\x36\xde\x46\x81\xbb\xfd\xed\x2b\xb4\x06\x76\xda\x2e\x0b\x4e\xaa\x02\xb4\x51\x39\x33\xb9\x42\x97\x73\x1a\x99\x7d\xe4\xa6\x9a\xa7\x02\xdb\x72\x4b\xc4\xaa\x01\x69\xe2\x3a\x90\xc7\xe2\x54\x46\xf0\xef\xf3\xf3\xe7\x0c\x5c\xc8\x6f\xac\x9c\x0e\x16\x4a\xa6\x80\x4f\xae\xa3\xe9\xbf\xd3\x00\xcb\x90\x65\x03\xdc\x23\x30\xa7\x1a\x1b\x6d\x2f\x02\x85\xa9\x34\xee\x9c\xab\xc9\xb3\x79\xc8\x95\x3a\xad\xef\xc5\xa0\x03\x9d\xce\xcf\x97\xb5\xfc\xec\xcb\xb7\xf1\xf7\x6b\xa9\xf1\x5f\x0d\x6b\x8b\xb9\xac\xcd\x77\x55\x3d\xd9\x5a\x50\xb9\xd8\x0c\xbc\x27\xd4\xf6\x0b\xc1\x4e\xac\xe8\xd7\x68\x7f\xb4\x5f\x4f\xdc\x54\x1f\x99\x08\x11\x2e\x68\x9e\x34\x6e\xf2\x66\x48\x46\xa1\xbc\x84\xc9\xac\xf5\xed\xf9\x78\xca\xae\x21\xd4\xe7\x59\xa2\xec\x48\x8e\xc7\xb2\x97\x4a\xe5\xb8\xc2\x82\xcc\x5a\x3b\x82\xd7\x97\xdf\xaf\xea\x06\x5f\xb9\x4a\x9e\x9e\xbb\x40\x8e\xa3\x7a\xc4\xb5\x71\x44\x5a\xd7\x1f\xc3\x1a\x8d\xfd\x4e\xd7\x1e\xb2\x58\x82\xdf\xbc\x52\x3b\x3e\x5c\x5f\xbf\x84\x56\x3a\x95\x9f\xc8\x81\xeb\x00\xdc\x14\x70\xf1\x9a\x5b\xa3\xeb\xd8\x41\xc7\xb3\xf3\xee\x6f\xc3\xbb\xee\xde\x08\xe4\x8d\xa6\x93\xf1\x74\xe2\x94\xc4\xa4\x99\xf7\xbe\x77\x3f\x78\xe8\x8f\x6e\x7f\x1f\xde\x74\x5f\x0a\xc1\xa8\x81\xb3\x2f\x5b\xd6\x5f\xab\x39\xed\xea\x8d\x63\x1d\x20\x7c\x77\xc5\xe8\xf5\x77\x6f\x2b\xf9\xd9\x97\x8a\xc4\xd7\x7a\x32\xdc\xb7\x27\x8c\x5e\xcf\xc4\x95\xcd\xb2\xc3\x8e\xe5\x48\xfa\xac\xb7\xf5\x9b\x89\xab\x15\x16\x2f\xba\xdb\xd4\x3b\xe0\x6e\xdd\x66\xe2\xaa\x1e\x85\x0e\x42\x54\xe3\xd1\x01\xef\x7d\xb7\x6b\x3b\xbb\x6f\xb6\x77\x8b\xbd\xdb\x40\xcf\xfb\x7f\x00\x00\x00\xff\xff\x30\x80\x23\x1b\xbc\x12\x00\x00")

func bootstrapVpnOpenvpnmasterCentosShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnOpenvpnmasterCentosSh,
		"bootstrap/vpn/openvpnMaster-centos.sh",
	)
}

func bootstrapVpnOpenvpnmasterCentosSh() (*asset, error) {
	bytes, err := bootstrapVpnOpenvpnmasterCentosShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/vpn/openvpnMaster-centos.sh", size: 4796, mode: os.FileMode(493), modTime: time.Unix(1506271769, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnOpenvpnmasterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x51\x6f\xe3\x36\x12\x7e\xd7\xaf\x18\xc8\x01\xba\x1b\x54\x62\x1c\xa4\xbd\x76\x1b\x07\xf5\xba\x6e\xce\xd8\x6e\x6c\x24\x76\x0e\x01\x0c\x04\x34\x35\xb6\x58\xcb\xa4\x40\x52\x4e\xd4\x5c\xee\xb7\x1f\x48\x49\x8e\x65\x3b\x89\xbd\x7d\x68\x5e\x1c\x0d\x67\xbe\xf9\x86\x9c\x19\x0e\x1b\x10\xfc\x43\x7f\x5e\x03\xfe\x83\x40\x15\x02\x3e\xa6\x09\x67\xdc\x24\x39\x08\x69\x20\xd3\x5c\xcc\x80\x82\xc1\x45\x9a\x50\x63\x3f\x12\x2a\x66\x19\x9d\x21\x18\x09\x5c\xfc\x89\xcc\x80\x89\x11\x96\x34\xc9\x50\x03\xd5\x56\x8e\x82\xc9\x4c\x39\xa5\x18\x21\xd3\xa8\xac\x34\xe1\x0b\xee\x94\xb9\xf2\x1a\x56\x0a\x72\x5a\x43\x96\x33\xce\x80\x0b\xab\xa2\x11\xa6\x3c\x41\x1d\xc2\xe7\x1c\x22\xd4\x7c\x26\x80\x26\x49\xe9\x11\xa3\xca\x9f\x8e\x65\x96\x44\x30\x41\xa0\x93\xc4\x71\x9a\x20\x68\x34\x40\x0d\xa8\x4c\x18\xbe\xc0\xef\xbd\x06\x50\x11\x39\x2a\x3a\xc6\x24\x01\xcd\x14\x4f\x0d\x28\xa4\x09\x3c\x48\x35\x0f\xa1\x37\x85\x5c\x66\x20\x10\x23\x60\x52\x44\xdc\x70\x29\x68\x52\x50\xfa\x1e\x1e\x14\x37\x08\xdc\x58\x72\x13\xaa\x63\x90\x0a\x16\x74\x8e\x40\x85\x34\x31\xaa\x1a\x6e\xe8\xfd\x83\x07\xd9\x1f\x74\xaf\x6e\x07\x57\xf7\x5f\xba\x77\x9d\xfe\xe8\x6a\x78\x7d\xd7\xf2\x47\x37\xfe\xba\x7c\x70\xdd\xbf\xed\x5d\x75\xba\x2d\xbf\xd3\xae\x2d\x74\x7a\xc3\xbb\x96\x7f\x43\xc5\xef\x8a\x0a\xc6\x35\x93\xb5\xe5\xfe\xf5\x65\xcb\xff\x92\x4d\x38\x93\x4a\xd4\x56\xba\x5f\xdb\xbd\x3f\x5a\xbe\x92\xd2\xfc\x9a\x48\x46\x93\x58\x6a\x53\xb7\x1d\xbd\x62\x7a\xd5\xfe\xda\x6d\xf9\x1a\xd5\x12\x95\xef\x79\x83\xeb\xde\x6d\x7b\xd8\xbd\xef\x0d\x5a\x47\x1f\x58\xa6\x12\x88\x8d\x49\x3f\x11\xd2\xfc\xf1\xe7\xf0\xf4\x87\xb3\xb0\xfc\x25\x0b\x34\x34\xa2\x86\x92\x65\x93\x70\x61\x50\x4d\x29\x43\x4d\x52\xc5\x97\xd4\x20\x39\x21\x3c\x5d\x9e\x11\x1a\x45\x0a\xb5\xfe\xe8\x79\x0d\xe8\xa7\x28\x6e\x07\x57\x9e\x47\x53\x13\xcc\xd0\x40\x96\x46\xd4\xe0\xea\x93\x0b\x6d\x6c\x86\x05\x39\xc8\x14\xc5\x32\x15\x80\x54\xe7\x81\xd2\xd4\xf3\xec\x61\x07\x8c\x46\x5c\xc1\xff\x48\xb9\x1c\x30\xea\x79\x1a\x23\x08\x38\x04\x08\xbe\x26\xf8\x98\x4a\x65\xe0\x4b\xf7\xee\xbe\xdc\xfc\xf0\x78\x87\xb0\x35\xf6\x8f\x9e\xb6\x0f\xea\x79\xec\x13\xbf\x06\x4f\x96\x54\xe9\x57\x5d\x54\xe7\x58\xf7\xb1\x3a\xdd\x0d\x27\x95\xfc\x50\x2f\x36\x29\x36\xa2\xb0\x69\xb2\x19\x42\x6f\x78\x30\xff\xfe\xf5\x65\x1d\xd8\x26\xd8\x06\x6e\xff\xfa\xf2\x50\x58\x97\x8c\x75\xe0\x22\x3f\x37\xa0\x9d\xf0\x60\xce\xa3\x0d\xca\xa3\x2d\xc6\xa3\x43\x31\x6d\x09\xd4\x51\x5d\x51\x6c\xe0\x5a\xd9\x6b\xc8\x5e\xa3\x01\x97\x28\x50\x51\x63\x9b\x9f\xad\x25\x60\xa8\x0c\x9f\x72\x46\x0d\x6a\x8f\x45\xf5\xb4\xd5\x32\x53\xcc\xf6\x6c\xa5\xbd\x90\xb0\x04\xa9\x08\x68\x92\x78\x21\x99\x64\x3c\x89\x02\x46\x21\x08\x26\xd4\xb0\x78\x25\x9a\x63\x1e\x94\xd0\xe5\x12\x6c\xf3\x5b\x69\x47\xb1\x57\x15\x51\x10\xcc\x50\xcc\x31\x87\x20\xd0\xc8\x14\x1a\x98\x63\xae\x89\xa1\xe1\x1c\xf3\x3a\x75\x96\x70\x14\xa6\x4e\x7d\xcd\xff\xca\x71\xa1\xb7\x11\x77\x59\xdf\xb6\x7d\x4f\xf9\x2c\x53\xd4\xb6\x70\x8f\xa5\xf5\xfd\x72\xbe\x19\x0d\x99\x32\xbb\x17\xac\x9f\xed\x85\xed\x50\x1d\xc2\xd8\x03\x80\xfd\xd4\x77\xe3\x9a\xd7\x1c\x46\xf1\xe9\xc9\xd9\x4f\x61\x8a\x0b\x20\x68\x58\xb5\xee\xcd\x32\xf1\x17\x4f\x21\x60\x40\x32\xad\x88\x8e\xa9\x42\x12\xc9\x95\x02\xc1\x47\xba\x48\x13\xd4\x44\xbb\xdf\xa0\xd8\x8e\xc0\x5d\xa6\xa4\x38\xc0\xd0\xca\xc2\xd9\x5f\xf0\x5f\x30\x88\x35\xfc\x9d\x81\x4a\x31\xb5\x5b\xdd\x80\x76\xf4\x67\xa6\x0d\x0c\xff\xb8\xd9\xd8\xe5\x5a\x6a\x8f\x7f\x31\x89\x0e\x68\x66\x62\x28\xc3\x3b\x09\x8f\xc9\x96\x8c\xf8\xfb\x79\x5e\xc3\xde\x01\x42\x6d\x36\x05\x11\x57\xc8\x2c\x13\x38\xd9\x13\xd5\xc5\xd3\x15\x6e\x68\x68\x77\x6f\x82\xe6\xe9\x4f\x41\xe7\x73\x07\x58\xcc\x53\xdc\x2c\xd6\xf1\x2f\x8c\xa7\xf6\x9a\x5f\xd3\x0c\x8f\xc9\xb6\xf0\x5b\x62\xda\x81\x42\xc1\x05\x79\xf3\xef\xf6\xe9\x0f\x3f\x1e\x12\xd0\x8d\xbd\xd6\xec\xb4\x65\xe7\x9d\x99\x92\x59\xba\x19\x88\x5b\x15\x72\x22\xa3\x3c\x3c\x26\x6b\x5f\xdf\x40\xdd\xe2\x39\x27\x20\xa4\xfb\x0d\x8f\x49\xed\x7b\x5f\x4c\xc7\x7d\xd8\xff\xad\xff\xe1\x71\x91\x45\x8a\xf3\x8f\x9f\x60\xca\x45\x04\x0f\x34\xb7\x23\xdd\xac\xaa\x71\x81\x0f\xae\x3b\xc0\x54\x2a\xc0\x25\xaa\xbc\xec\x05\xeb\xc7\x19\x65\x76\x84\x75\xfd\x64\xbd\x91\x6c\x10\x5f\x69\x05\x4c\x84\xc7\x64\xfd\xf3\x00\xda\x95\xcf\xde\xc0\x52\x7a\xa0\x2a\xe2\x62\xb6\xe1\xaa\x21\xd0\x84\x76\x1c\x09\x79\x7a\x5f\x6a\x85\xc7\x64\x87\xb4\xd5\xac\x5c\xeb\x5c\x33\x93\x94\x6e\x74\xae\x0d\x2e\x98\x49\x40\x1b\xaa\x4c\x35\x9e\xfc\xba\xa3\xff\xbe\xa8\x62\x41\xec\x0d\xdd\x9d\xad\xb7\x56\xd6\x6e\x57\x3b\x0a\xad\x82\x9d\x9e\x8b\x32\x93\x2a\x07\x6d\x54\xc6\x4c\xa6\xd0\x65\x9a\x46\x66\xff\xe5\xc6\x5b\xcc\xed\x88\x14\xd8\xa6\x5b\x20\x96\xfd\x47\x13\xd7\x80\x3c\x16\x2f\x64\x04\xff\x3a\x39\x79\x4d\xc1\xb9\x7c\x61\xe5\xd6\x60\xaa\xe4\x02\xaa\xc6\x66\x5b\xfa\xb7\xf4\xbe\xc2\x9d\xdb\xd2\x6d\xe7\x13\xaa\xb1\xd6\xe8\x22\x50\xb8\x90\xc6\x9d\x6c\x39\x45\xd6\x8f\xb5\x5c\x5e\x54\xb7\x62\xd0\x84\x66\xf3\xe7\xb3\x4a\x7e\xf4\xf4\x32\xca\x3e\x17\x2b\xfe\xbb\x6e\x6d\xf9\x16\xd5\xf8\xa9\xac\x20\x9b\xfd\x2a\x13\xab\xe1\xf5\x80\x6a\x7e\xc3\xd9\x81\x35\xfc\x1e\xed\xaf\xf6\x25\xc4\x4d\xf9\x60\x44\x88\x70\x4a\xb3\xa4\x76\x8f\xd7\x5d\x32\x0a\xc5\x15\x4c\xc6\x8d\x97\xff\xf7\xa7\xec\x5a\x40\x75\x9e\x05\xca\x86\x64\x7f\x2c\x7b\x8d\x94\x86\x73\xcc\xc9\xb8\xb1\x21\x78\x3f\xfc\x4e\x59\x33\xf8\xce\xe5\xf1\xf8\xda\x95\xb1\x1f\xd5\x3d\x2e\x8a\x3d\xd2\xba\x7a\xd8\x6a\x34\xf6\xcd\xad\x3d\x64\xb1\x04\xbf\x7e\x89\x36\x7d\xb8\xb8\x78\x0b\xad\x30\x2a\x9e\xbb\x81\xab\x7e\x6e\x72\x38\xdd\xcf\x2c\x4b\xeb\xed\xb5\x78\x87\x05\x0a\xb5\x4c\x96\xce\x6a\x3f\x9c\x48\x3e\x88\xbf\x8b\x54\xeb\x81\x76\xf0\xf2\xec\xfc\xfd\x5b\xef\xba\xb5\x35\x92\x79\xfd\xd1\x70\x30\x1a\xba\x45\x62\x16\xa9\xf7\xb9\x7d\xd3\xbd\xef\xf4\xaf\x7e\xef\x5d\xb6\xde\x72\xc1\xa8\x81\xa3\xa7\x35\xed\xe7\x72\x6e\x3c\xff\xe0\x02\x09\x10\xbe\x3b\x67\xf4\xe2\xbb\x8f\xa5\xfc\xe8\xa9\x24\xf1\x5c\x4d\xaa\xdb\xfa\x84\xd1\x8b\xb1\x38\xb7\x79\xbf\xdb\xb0\x18\x91\x5f\xb5\xb6\x76\x63\x71\x3e\xc7\xfc\x4d\x73\x5b\x0c\x3b\xcc\xad\xd9\x58\x9c\x57\xe3\xd8\x4e\x88\x72\x44\xdb\x61\xbd\x6d\x76\x61\xdf\x12\xab\xed\x5d\x63\xef\x36\xf0\xff\x01\x00\x00\xff\xff\xc8\xf5\x61\xe2\x18\x13\x00\x00")

func bootstrapVpnOpenvpnmasterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnOpenvpnmasterSh,
		"bootstrap/vpn/openvpnMaster.sh",
	)
}

func bootstrapVpnOpenvpnmasterSh() (*asset, error) {
	bytes, err := bootstrapVpnOpenvpnmasterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/vpn/openvpnMaster.sh", size: 4888, mode: os.FileMode(493), modTime: time.Unix(1506271769, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnOpenvpnnodeCentosSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xe1\x6a\x13\x41\x14\x85\xff\xcf\x53\x1c\x48\xa1\x16\x9a\x1d\x2b\x55\x50\x50\xd4\x1a\x21\x82\x69\x90\x52\x7f\x96\x9b\xd9\x9b\xec\x6d\x67\x67\xd6\x99\x3b\xa9\x8b\xfa\xee\xb2\x9b\x14\x9a\xbe\x40\xf7\xcf\x32\xe7\x9e\x39\xf7\x83\x33\x13\x4c\x9f\xe9\x33\x13\xfc\x64\x50\x62\xf0\xef\xce\x8b\x13\xf5\x3d\x42\x54\x94\x2c\x61\x03\x82\x72\xdb\x79\xd2\xe1\xe0\x29\x6c\x0a\x6d\x18\x1a\x21\xe1\x96\x9d\x42\x1b\xc6\x96\x7c\xe1\x0c\xca\x83\xce\xc1\xc5\x92\x46\x53\xc3\x28\x99\xd3\xa0\x7a\x69\x65\x34\x4b\x32\x93\x41\x45\x5c\x1f\x24\xc7\x8d\x38\x48\x18\x2c\x99\xb1\x16\xcf\xb9\xc2\xe7\x1e\x35\x67\xd9\x04\x90\xf7\xfb\x8d\x5c\x3f\xec\xcb\x4d\x2c\xbe\xc6\x8a\x41\x2b\x3f\x32\xad\x18\x99\x15\xa4\x48\x25\xa8\xb4\x7c\x6a\x26\xa0\x50\x8f\x28\xb9\x61\xef\x91\x5d\x92\x4e\x91\x98\x3c\xee\x63\xba\xab\x30\x5f\xa3\x8f\x05\x81\xb9\x86\x8b\xa1\x16\x95\x18\xc8\xef\x90\x4e\x71\x9f\x44\x19\xa2\x03\xdc\x8a\x72\x83\x98\xd0\xd2\x1d\x83\x42\xd4\x86\xd3\x41\x6e\x65\x9e\xb1\x48\xb3\xfc\x31\xbf\xfe\x74\x35\xbb\x99\x2f\xdf\x1f\xbd\x70\x25\x79\x34\xaa\xdd\x3b\x6b\xcf\xde\xbc\xad\x5e\xbd\x3e\xaf\xf6\x7f\xdb\xb2\x52\x4d\x4a\x76\x7b\x66\x25\x28\xa7\x35\x39\xce\xb6\x4b\xb2\x25\x65\xfb\xd2\x4a\xb7\x3d\xb7\x54\xd7\x89\x73\x3e\x31\x66\x82\xcb\x8e\xc3\xf5\x72\x61\xfa\xd2\x42\x42\xd6\xa1\x0f\xee\xd8\x4f\x13\x7b\xa6\xcc\x98\xf6\x07\xb3\xd8\x71\xd8\x76\xe1\xa9\x7c\xfb\x6b\x50\xcc\xe5\x72\xb6\xb8\x5e\x2e\x6e\x2e\x2e\x17\x5f\x07\x54\x52\x58\x56\x67\xef\xca\x4a\x5c\x4c\xc1\x3a\x5f\xb2\x72\xaa\x6e\x73\x0c\xf8\x3b\x5e\x4b\x38\xae\x76\xc5\x57\xa2\xdc\x7e\xa7\xae\x9a\x2f\xbe\xcd\x2e\xae\x66\x5f\x86\x98\xe3\x13\x63\xd8\x35\x11\x53\xc6\xd1\x9f\xc7\x0b\xfe\xe1\xc3\x2e\x7d\xcf\x64\x9d\x17\x0e\x9a\x2b\x17\xc3\xda\x98\xdc\x67\xe5\xd6\xa9\x47\x56\x4a\xfa\x40\xfe\x71\xef\x7a\x34\xe7\x30\xbe\xb3\xa7\x06\x63\xcc\xff\x00\x00\x00\xff\xff\x6b\x29\x60\x15\xbe\x03\x00\x00")

func bootstrapVpnOpenvpnnodeCentosShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnOpenvpnnodeCentosSh,
		"bootstrap/vpn/openvpnNode-centos.sh",
	)
}

func bootstrapVpnOpenvpnnodeCentosSh() (*asset, error) {
	bytes, err := bootstrapVpnOpenvpnnodeCentosShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/vpn/openvpnNode-centos.sh", size: 958, mode: os.FileMode(493), modTime: time.Unix(1506271769, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnOpenvpnnodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xe1\x6b\x13\x41\x10\xc5\xbf\xef\x5f\xf1\x20\x85\x5a\x68\x6e\xad\x54\x41\x41\x51\x6b\x84\x08\xa6\x41\x4a\xfd\x58\x26\x7b\x93\xdc\xa4\x7b\xbb\xdb\xdd\xd9\xd4\xa0\xfe\xef\x72\x69\x2a\xad\xf8\xbd\xf7\xe5\x98\x99\xc7\x7b\x3f\x78\x3b\xc2\xf8\x89\x3e\x33\xc2\x77\x06\x65\x06\xff\x48\x5e\x9c\xa8\xdf\x22\x44\x45\x2d\x12\x56\x20\x28\xf7\xc9\x93\x0e\x83\xa7\xb0\xaa\xb4\x62\x68\x84\x84\x35\x3b\x85\x76\x8c\x0d\xf9\xca\x05\x54\x86\x3d\x07\x17\x6b\xde\x89\x3a\x46\x2d\x9c\x87\xad\x97\x5e\x76\x62\xc9\x66\x34\x6c\x11\x97\x8f\x9c\xe3\x4a\x1c\x24\x0c\x92\xc2\x58\x8a\xe7\xd2\xe0\xe3\x16\x2d\x17\x59\x05\x90\xf7\xfb\x44\x6e\xef\xf3\x4a\x17\xab\x6f\xb1\x60\xd0\xc2\xef\x98\x16\x8c\xc2\x0a\x52\xe4\x1a\x54\x7a\x3e\x36\x23\x50\x68\x77\x28\xa5\x63\xef\x51\x5c\x96\xa4\xc8\x4c\x1e\xb7\x31\x5f\x37\x98\x2e\xb1\x8d\x15\x81\xb9\x85\x8b\xa1\x15\x95\x18\xc8\xdf\x21\x1d\xe3\x36\x8b\x32\x44\x07\xb8\x05\x95\x0e\x31\xa3\xa7\x6b\x06\x85\xa8\x1d\xe7\x47\xbe\x8d\x79\xc2\x22\xcd\xfc\xdb\xf4\xf2\xc3\xc5\xe4\x6a\x3a\x7f\x7b\xf0\xcc\xd5\xec\xd1\xa9\xa6\x37\xd6\x9e\xbc\x7a\xdd\xbc\x78\x79\xda\xec\xff\xb6\x67\xa5\x96\x94\xec\xe6\xc4\x4a\x50\xce\x4b\x72\x5c\x6c\xca\xb2\x21\x65\xfb\xdc\x4a\xda\x9c\x5a\x6a\xdb\xcc\xa5\x1c\x19\x33\xc2\x79\xe2\x70\x39\x9f\x19\x43\x49\xc7\x2b\x56\xd4\xd4\x92\xf2\xdf\x51\x42\xd1\xa1\xa3\xf1\x16\x31\x71\xd8\xa4\xf0\xbf\xd3\xfa\xc6\x98\xf3\xf9\x64\x76\x39\x9f\x5d\x9d\x9d\xcf\x3e\x0f\x98\xa4\xb0\xac\xce\x5e\xd7\x85\xb8\x98\x83\x75\xbe\x16\xe5\xdc\xac\x4b\x0c\xf8\x85\xf5\x0d\xc6\x19\x87\xcd\x5d\xe9\x8d\x28\xf7\x5f\x29\x35\xd3\xd9\x97\xc9\xd9\xc5\xe4\xd3\x60\x73\x78\x64\x0c\xbb\x2e\x62\xcc\x38\xf8\xf9\x30\xe0\x37\xde\xdd\xb9\xef\xa1\xac\xf3\xc2\x41\x4b\xe3\x62\x58\x1a\x53\xb6\x45\xb9\x77\xea\x51\x94\xb2\xde\xa3\xbf\xdf\xab\x1e\xdc\x39\xec\xde\xd8\xbf\x82\x3f\x01\x00\x00\xff\xff\x54\xe0\x32\x8e\xb7\x03\x00\x00")

func bootstrapVpnOpenvpnnodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnOpenvpnnodeSh,
		"bootstrap/vpn/openvpnNode.sh",
	)
}

func bootstrapVpnOpenvpnnodeSh() (*asset, error) {
	bytes, err := bootstrapVpnOpenvpnnodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/vpn/openvpnNode.sh", size: 951, mode: os.FileMode(493), modTime: time.Unix(1506271769, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"bootstrap/README.md":                                 bootstrapReadmeMd,
	"bootstrap/amazon_k8s_centos_7_master.sh":             bootstrapAmazon_k8s_centos_7_masterSh,
	"bootstrap/amazon_k8s_centos_7_node.sh":               bootstrapAmazon_k8s_centos_7_nodeSh,
	"bootstrap/amazon_k8s_ubuntu_16.04_master.sh":         bootstrapAmazon_k8s_ubuntu_1604_masterSh,
	"bootstrap/amazon_k8s_ubuntu_16.04_node.sh":           bootstrapAmazon_k8s_ubuntu_1604_nodeSh,
	"bootstrap/bootstrap_init.sh":                         bootstrapBootstrap_initSh,
	"bootstrap/digitalocean_k8s_centos_7_master.sh":       bootstrapDigitalocean_k8s_centos_7_masterSh,
	"bootstrap/digitalocean_k8s_centos_7_node.sh":         bootstrapDigitalocean_k8s_centos_7_nodeSh,
	"bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh":   bootstrapDigitalocean_k8s_ubuntu_1604_masterSh,
	"bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh":     bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh,
	"bootstrap/google_compute_k8s_ubuntu_16.04_master.sh": bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh,
	"bootstrap/google_compute_k8s_ubuntu_16.04_node.sh":   bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh,
	"bootstrap/inject.go":                                 bootstrapInjectGo,
	"bootstrap/vpn/meshbirdMaster.sh":                     bootstrapVpnMeshbirdmasterSh,
	"bootstrap/vpn/meshbirdNode.sh":                       bootstrapVpnMeshbirdnodeSh,
	"bootstrap/vpn/openvpnMaster-centos.sh":               bootstrapVpnOpenvpnmasterCentosSh,
	"bootstrap/vpn/openvpnMaster.sh":                      bootstrapVpnOpenvpnmasterSh,
	"bootstrap/vpn/openvpnNode-centos.sh":                 bootstrapVpnOpenvpnnodeCentosSh,
	"bootstrap/vpn/openvpnNode.sh":                        bootstrapVpnOpenvpnnodeSh,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"bootstrap": &bintree{nil, map[string]*bintree{
		"README.md":                                 &bintree{bootstrapReadmeMd, map[string]*bintree{}},
		"amazon_k8s_centos_7_master.sh":             &bintree{bootstrapAmazon_k8s_centos_7_masterSh, map[string]*bintree{}},
		"amazon_k8s_centos_7_node.sh":               &bintree{bootstrapAmazon_k8s_centos_7_nodeSh, map[string]*bintree{}},
		"amazon_k8s_ubuntu_16.04_master.sh":         &bintree{bootstrapAmazon_k8s_ubuntu_1604_masterSh, map[string]*bintree{}},
		"amazon_k8s_ubuntu_16.04_node.sh":           &bintree{bootstrapAmazon_k8s_ubuntu_1604_nodeSh, map[string]*bintree{}},
		"bootstrap_init.sh":                         &bintree{bootstrapBootstrap_initSh, map[string]*bintree{}},
		"digitalocean_k8s_centos_7_master.sh":       &bintree{bootstrapDigitalocean_k8s_centos_7_masterSh, map[string]*bintree{}},
		"digitalocean_k8s_centos_7_node.sh":         &bintree{bootstrapDigitalocean_k8s_centos_7_nodeSh, map[string]*bintree{}},
		"digitalocean_k8s_ubuntu_16.04_master.sh":   &bintree{bootstrapDigitalocean_k8s_ubuntu_1604_masterSh, map[string]*bintree{}},
		"digitalocean_k8s_ubuntu_16.04_node.sh":     &bintree{bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh, map[string]*bintree{}},
		"google_compute_k8s_ubuntu_16.04_master.sh": &bintree{bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh, map[string]*bintree{}},
		"google_compute_k8s_ubuntu_16.04_node.sh":   &bintree{bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh, map[string]*bintree{}},
		"inject.go":                                 &bintree{bootstrapInjectGo, map[string]*bintree{}},
		"vpn": &bintree{nil, map[string]*bintree{
			"meshbirdMaster.sh":       &bintree{bootstrapVpnMeshbirdmasterSh, map[string]*bintree{}},
			"meshbirdNode.sh":         &bintree{bootstrapVpnMeshbirdnodeSh, map[string]*bintree{}},
			"openvpnMaster-centos.sh": &bintree{bootstrapVpnOpenvpnmasterCentosSh, map[string]*bintree{}},
			"openvpnMaster.sh":        &bintree{bootstrapVpnOpenvpnmasterSh, map[string]*bintree{}},
			"openvpnNode-centos.sh":   &bintree{bootstrapVpnOpenvpnnodeCentosSh, map[string]*bintree{}},
			"openvpnNode.sh":          &bintree{bootstrapVpnOpenvpnnodeSh, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
