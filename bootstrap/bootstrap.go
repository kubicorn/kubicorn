// Code generated by go-bindata.
// sources:
// bootstrap/README.md
// bootstrap/amazon_k8s_centos_7_master.sh
// bootstrap/amazon_k8s_centos_7_node.sh
// bootstrap/amazon_k8s_ubuntu_16.04_master.sh
// bootstrap/amazon_k8s_ubuntu_16.04_node.sh
// bootstrap/bootstrap_init.sh
// bootstrap/digitalocean_k8s_centos_7_master.sh
// bootstrap/digitalocean_k8s_centos_7_node.sh
// bootstrap/digitalocean_k8s_coreos_master.sh
// bootstrap/digitalocean_k8s_coreos_node.sh
// bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh
// bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh
// bootstrap/google_compute_k8s_ubuntu_16.04_master.sh
// bootstrap/google_compute_k8s_ubuntu_16.04_node.sh
// bootstrap/inject.go
// bootstrap/vpn/meshbirdMaster.sh
// bootstrap/vpn/meshbirdNode.sh
// bootstrap/vpn/openvpnMaster-centos.sh
// bootstrap/vpn/openvpnMaster.sh
// bootstrap/vpn/openvpnNode-centos.sh
// bootstrap/vpn/openvpnNode.sh
// DO NOT EDIT!

package bootstrap

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bootstrapReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xb1\x6e\xdc\x30\x10\x44\x7b\x7e\xc5\x00\x57\xa4\x31\x94\x4f\x08\x90\x22\xc0\x15\x49\x65\x38\xad\x28\x71\x64\xae\x8f\xe2\x0a\xe4\xd2\x82\x10\xe4\xdf\x03\xea\x1c\x23\x81\xeb\xdd\xd9\x79\x3b\x73\xc1\x57\x55\xab\x56\xfc\xe6\xdc\x63\x64\x25\x7c\x21\x2c\x12\xd3\xdf\x01\xea\x5c\x64\xb3\x0a\x8b\xde\x50\xa3\x6c\xd8\xc5\xe2\xb9\x14\xb8\xf8\x96\x0c\xe3\xad\x4d\x32\x6b\xc9\x23\xb6\xa2\x8b\x24\xd6\xc1\xb9\x6f\x64\xc2\x52\x48\x98\xc2\x87\x80\x43\x5b\x81\xee\xf9\x01\x5a\xb0\x6a\x90\xe5\xe8\x67\xba\xab\xc1\xe7\x03\x26\x2b\x87\x93\xe4\xdd\xb5\xf3\x70\x59\x38\x9b\xbc\x32\x1d\xd8\x3b\xc5\x4e\xb4\xae\xaa\x18\x5b\x65\x41\xf0\xe6\xc7\xee\x22\x59\x0c\x1e\x4f\xdf\x9d\xbb\x5c\x2e\xb8\x22\x93\xa1\x0f\x8c\xeb\x96\xbc\x11\xda\x0c\x9a\x09\x5d\xde\xac\x3f\x3c\xea\xdc\x0f\xed\xa8\x08\x9a\x3f\xd9\x80\x9f\x45\x8c\x98\x7c\x8d\x48\x72\x23\x7c\xff\x71\xf8\xcf\x60\xd5\xc2\x13\x02\x92\xe1\x3f\x9c\xbc\x43\xd7\xa8\x2d\x05\x5c\x11\xf4\x8b\x73\xd7\xe5\xf4\x28\xf4\x29\x1d\x98\x7d\x86\xe6\x74\xe0\x99\x06\x31\x2c\x45\xd7\x7f\x53\xf5\x39\x20\xeb\x1e\xd9\xd3\x48\x95\x0f\xa7\xb8\xab\x7a\x0e\xbd\x8a\xf1\xc9\xa7\xc6\xfa\xeb\xf7\x88\x6a\xa5\xcd\xd6\xbf\x0e\x5c\x24\x13\x73\xab\xa6\x2b\x6e\x3c\x3e\xbf\xf6\x2d\x6c\x5e\xca\x5b\xa1\xbb\xa4\x84\x89\x90\xfc\xc2\xd9\x18\x20\xd9\xf4\xde\xd4\x1d\x7e\x70\x8f\x51\xea\xfb\x9e\xc7\xac\x81\x98\xa3\xcf\xcf\x7c\x38\xc1\xa4\x76\x11\x73\xb8\x47\x3d\x11\x2f\xad\xda\x79\x7e\xf8\x13\x00\x00\xff\xff\x8c\x9a\x9e\x97\x62\x02\x00\x00")

func bootstrapReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapReadmeMd,
		"bootstrap/README.md",
	)
}

func bootstrapReadmeMd() (*asset, error) {
	bytes, err := bootstrapReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/README.md", size: 610, mode: os.FileMode(493), modTime: time.Unix(1502556412, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapAmazon_k8s_centos_7_masterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x6f\x6f\x1b\x37\x0f\x7f\x7f\x9f\x82\x68\x02\xb8\x79\x50\x9d\x9a\x3c\x45\x37\x04\xf5\x80\xb5\x75\x81\xac\x5d\x13\xa4\xe9\x36\x60\x7f\x0a\x9d\x44\xdf\x29\xa7\x93\x54\x89\x8a\x73\x48\xf2\xdd\x07\xc9\x67\x37\x1e\xba\xbd\x58\x07\xd4\x6f\x2e\xa4\xc8\x1f\xc9\x1f\x45\x2a\x7b\xc0\xbe\xd2\xaf\xda\x83\x9f\x11\x44\x40\xc0\x6b\x6f\xb4\xd4\x64\x46\xb0\x8e\x20\x45\x6d\x5b\x10\x40\x38\x78\x23\x28\x0b\x46\xd8\x36\x89\x16\x81\x1c\x68\x7b\x89\x92\x80\x3a\x84\x2b\x61\x12\x46\x10\x31\xeb\xd1\x4a\x97\x42\x31\xea\x10\x52\xc4\x90\xb5\x46\x0f\xba\x18\xeb\x50\xed\x65\x2d\xb8\xe5\x0e\xb2\x6b\xb5\x04\x6d\xb3\x49\x44\x58\x6a\x83\xb1\x86\xe7\x23\x28\x8c\xba\xb5\x20\x8c\x99\x22\xa2\xda\xc4\x8b\x9d\x4b\x46\x41\x83\x20\x1a\x53\x72\x6a\x10\x22\x12\x08\x82\x90\x2c\xe9\x01\x1f\x55\x7b\x20\xac\x2a\xa9\xc4\x0e\x8d\x81\x28\x83\xf6\x04\x01\x85\x81\x95\x0b\x7d\x0d\x27\x4b\x18\x5d\x02\x8b\xa8\x40\x3a\xab\x34\x69\x67\x85\x59\xa7\xf4\x08\x56\x41\x13\x82\xa6\x9c\x5c\x23\x62\x07\x2e\xc0\x20\x7a\x04\x61\x1d\x75\x18\x76\x70\xeb\xea\x2b\x36\xb2\xda\x83\x97\x3a\x8a\xc6\x64\x42\xdf\x2d\xde\x68\x9b\xae\x41\xc7\xd2\xcc\x80\xd2\x0d\x03\x5a\x85\xaa\x10\xb2\xd2\xc6\x64\xba\x96\xfa\x1a\x15\x18\x41\x18\xea\x2a\x26\xe5\x20\xa2\x02\xa6\x61\x16\xf9\x1f\xef\x16\x6f\x4e\xde\xbe\xff\x65\x5e\xff\x8f\x6f\xfe\x54\x25\x00\x2a\xde\xce\x80\x23\x49\x1e\xc7\x28\x9d\x5d\xea\x96\x47\x34\x39\xe2\x06\x85\xd0\x2e\x5d\x90\x08\x8f\xab\xb5\x2a\xf8\x01\x18\xd3\x83\x77\x81\xa0\x23\xf2\xf1\x98\x73\x2f\x64\x2f\x5a\x8c\xb5\x34\x2e\xa9\xba\x75\xae\x35\x58\x4b\x37\xf0\x31\x0d\x5c\x39\x99\xbf\xac\xc7\xb1\x6e\x7d\xfb\x45\x38\xc1\x0f\x6c\xb2\xda\xe2\x4d\xb9\x76\xc0\x24\xcc\xa4\x20\x78\xf6\x6c\x71\xfa\x0a\xbe\x5b\x97\x36\xa6\xa1\x0e\xe8\x5d\xac\x15\xef\x53\x83\xc1\x22\x61\x2c\xaa\xea\xd7\x4f\x8a\xdf\x2b\x2b\x06\x9c\xbf\xde\x2a\xaa\x46\x44\x4c\xc1\xcc\x73\x72\xc7\xbc\xe0\xdc\xf3\xd7\x8e\x17\xd4\x7b\x98\x0c\xcd\x37\xec\xfa\xdb\xa7\x1f\x9e\x3e\xa9\xd0\x16\x82\xe7\x87\x55\xeb\x5b\xd9\xa1\xec\xe7\x87\x55\x76\xf8\x70\x4f\x6e\x7d\xdb\xe3\x38\xff\x77\x2c\xc2\xfa\xf7\x65\xd4\x2d\x4e\x5f\xcd\x26\xfe\xc6\x34\x94\x89\x90\x42\x76\x08\x6c\xfc\xa4\xd5\x36\x52\x9e\x5c\x36\xc2\x6f\xeb\xb0\xca\xc9\x1e\xc3\x46\x8a\x2e\x93\x3e\x09\xd8\x50\xae\x3c\x6e\xe4\x4c\x8f\x41\xba\x2f\x0a\x35\x6c\xc4\x92\x2c\x4b\xa4\xcd\xd6\x01\x3d\x1a\x16\xd0\xa0\x88\x98\x87\xe1\xf2\x63\x19\xea\x08\x9a\x22\xb8\x95\x85\xe8\x51\x6a\x61\x76\x52\x13\xf9\x18\x14\x7a\xb4\x2a\x82\xb3\xbb\x28\x9f\xab\xe4\xf2\xe3\xe6\xde\x8c\x91\x70\x90\x64\x60\xdd\xb3\xa9\xb8\xbf\x39\x9c\xca\xa9\x23\x86\x2b\x2d\xf1\xaf\x56\x91\x44\xa0\x0d\x42\x75\xf6\xfe\xf9\x9b\x93\x17\x27\x67\xf3\xfd\x87\x28\x8f\x06\x24\xa1\x04\x09\x60\xcc\xa7\xc6\x68\xc9\xb4\xbf\x7a\x02\xb7\x20\x13\x01\x53\xf0\x00\x1e\x00\x5b\xc2\xd1\x41\x75\x76\x7e\xf2\xd3\xf7\x17\x8b\xe2\xa8\x3d\x08\xa5\xf2\x7e\x72\x2b\x50\x78\x05\x48\xdd\x63\xb8\x05\xb1\xea\x61\xc6\xb5\x45\x02\x0e\x37\x3e\x68\x4b\xb0\x7f\x74\x37\xdb\xe2\x3d\xe0\x19\xee\xf0\xa0\xba\x38\x7d\xbd\x78\x3b\xdf\x7f\x98\x9b\x54\x26\xa2\x4f\x8d\x96\x2e\x58\x2e\x4d\x8a\x79\x65\x5c\x46\x67\xe1\x36\x33\xcd\x02\xcc\xea\xf5\x62\xae\x35\xe1\xf0\xa3\xf0\xf5\xc9\xdb\x1f\x16\x2f\x2e\x16\x2f\x0b\xce\xec\xa0\x3a\x3b\x3d\xbf\xf8\x0f\xe0\x32\x0c\xdc\x02\x39\x9b\x86\x06\xc3\xec\x20\x37\xfb\x1c\x3f\x26\x1d\x50\x41\x33\x6e\xae\xca\x96\xe2\xcc\x2f\x5b\x81\x45\xaa\x9b\xa0\x55\x8b\xd3\x87\xd9\x25\x93\xc2\x18\xa6\xfd\xfa\xea\xcd\x0f\x77\x7d\x7c\x55\x6d\xae\x5d\xc0\x88\xb4\x95\xb4\xd5\x04\x8c\x09\xaf\x73\x3b\x31\xb0\x46\x5b\xc5\xca\x46\xda\xbf\xc9\xf9\xdd\x01\x63\xe4\x7a\xb4\xb0\x7f\x53\xca\xbf\x83\x1d\x7b\xa1\xae\x30\x90\x8e\xc8\x72\x8f\x30\xc6\xec\x37\x35\xfd\x6e\xc7\x52\x62\x20\x86\xd7\x14\x04\x8b\xc2\xee\xda\xed\xdf\x6c\x1b\x7e\x97\x49\xb8\xe8\x84\xed\x23\xbc\x46\x13\x71\x84\xe3\x83\x92\x6f\xae\x44\x78\x6f\xd6\x33\xc8\x96\x30\xad\x25\xe5\x64\xac\x7d\x70\xf9\x51\x95\xc2\x68\xe9\x6a\x17\x5a\x7e\x75\x54\xff\x9f\xb7\x48\xf9\x59\x66\xe5\x56\xe2\xfd\xf5\xc7\xa7\x49\x10\xf9\x95\xe4\x9d\x8b\x9b\x63\xa1\x06\x7e\x58\x3f\xe5\x13\xd4\x28\x06\xb3\x0e\xc8\x4a\x12\xe5\x8d\xd8\xb6\x7d\x03\x26\xd4\xa0\x6d\x9d\x0f\xcb\xeb\x85\x4b\x91\x0c\x81\x44\x4b\x2e\x96\xff\x1d\xaa\xa1\x57\x3a\x00\xf3\xc0\x3b\x37\x20\x5f\x1f\xf1\xb2\x4f\x2b\xe9\xff\x01\xf0\x33\x0e\x7c\x9d\x45\x25\xbb\xbc\x0d\xd8\xf9\x14\xe8\x78\x8a\xf7\x99\x08\xd5\x9f\x01\x00\x00\xff\xff\xab\xca\xcd\x0d\x98\x09\x00\x00")

func bootstrapAmazon_k8s_centos_7_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapAmazon_k8s_centos_7_masterSh,
		"bootstrap/amazon_k8s_centos_7_master.sh",
	)
}

func bootstrapAmazon_k8s_centos_7_masterSh() (*asset, error) {
	bytes, err := bootstrapAmazon_k8s_centos_7_masterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/amazon_k8s_centos_7_master.sh", size: 2456, mode: os.FileMode(493), modTime: time.Unix(1505848458, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapAmazon_k8s_centos_7_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xef\x8b\xdc\x36\x10\xfd\xae\xbf\x62\x60\x0f\xb6\x29\x91\xdd\x83\x92\x96\x90\x2d\xb4\x3d\x07\xae\x49\xee\x20\x77\xa5\x85\xfe\x08\xb2\x34\x6b\xcf\x5a\x96\x7c\x1a\xa9\x7b\x26\xcd\xff\x5e\x64\xaf\x37\x7b\xa5\xfd\xd0\x26\x90\xfd\xe2\x9d\xa7\xd1\xd3\x9b\x37\x23\xad\x40\x7e\xa2\x9f\x58\xc1\x4f\x08\x2a\x20\xe0\xfd\x60\x49\x53\xb4\x23\x38\x1f\x21\x31\xb9\x06\x14\x44\xec\x07\xab\x62\x0e\xac\x72\x4d\x52\x0d\x42\xf4\x40\x6e\x87\x3a\x42\x6c\x11\xfe\x50\x36\x21\x83\xe2\x8c\xa3\xd3\x3e\x85\x29\xa9\x45\x48\x8c\x21\xa3\x96\x7a\x9a\x92\x29\x88\x55\x46\xc1\x6f\x1f\x30\xfb\x86\x34\x90\xcb\x29\x8c\xb0\x25\x8b\x5c\xc0\x77\x23\x18\x64\x6a\x1c\x28\x6b\x0f\x27\xa2\x59\xce\xe3\xd6\x27\x6b\xa0\x46\x50\xb5\x9d\x34\xd5\x08\x8c\x11\x54\x84\x90\x5c\xa4\x1e\x1f\x8b\x15\x28\x67\x26\x29\xdc\xa2\xb5\xc0\x3a\xd0\x10\x21\xa0\xb2\xb0\xf7\xa1\x2b\xe0\x72\x0b\xa3\x4f\xe0\x10\x0d\x68\xef\x0c\x45\xf2\x4e\xd9\x59\xd2\x63\xd8\x07\x8a\x08\x14\xb3\xb8\x5a\x71\x0b\x3e\x40\xaf\x3a\x04\xe5\x7c\x6c\x31\x3c\xe0\x2d\xc4\x27\x6c\xa4\x10\x2b\xb8\x20\x56\xb5\xcd\x8e\xde\x54\x2f\xc9\xa5\x7b\x20\x9e\xba\x19\x50\xfb\xbe\x47\x67\xd0\x4c\x8e\xec\xc9\xda\xec\xd7\x96\xee\xd1\x80\x55\x11\x43\x21\x38\x19\x0f\x8c\x06\x24\xc1\x9a\xcb\xdf\x6f\xaa\x97\x97\x57\x3f\xfe\xbc\x29\x3e\x2f\x97\xbf\x66\x3a\x00\x4d\xd9\xac\xa1\xc4\xa8\x4b\x1e\x59\x7b\xb7\xa5\xa6\x64\xb4\xf9\xc4\x85\x25\xa2\xdb\xfa\xa0\x11\xbe\x10\x33\x14\x86\x1e\xa4\xa4\x7e\xf0\x21\x42\x1b\xe3\xc0\x4f\xcb\x72\x50\xba\x53\x0d\x72\xa1\xad\x4f\xa6\x68\xbc\x6f\x2c\x16\xda\xf7\xe5\x98\xfa\xd2\x78\x9d\xbf\xb2\xc3\xb1\x68\x86\xe6\x83\x78\xc2\xd0\xcb\x43\xd6\x91\xef\xa0\xb5\x05\xa9\x61\xad\x55\x84\x67\xcf\xaa\xeb\xe7\xf0\xcd\x5c\xda\x98\xfa\x22\xe0\xe0\xb9\x30\x65\x97\x6a\x0c\x0e\x23\xf2\x04\x89\x5f\xde\x03\xbf\x09\xa7\x7a\xdc\xbc\x38\x02\xa2\x56\x8c\x29\xd8\x4d\x16\xf7\xb4\x9c\x78\x4e\xf6\x93\x2f\x27\xd6\x13\x4e\x89\xf6\x2b\x79\xff\xf5\x93\x37\x4f\xbe\x14\xe8\x26\x83\x37\xe7\xa2\x19\x1a\xdd\xa2\xee\x36\xe7\x22\x6f\x78\x73\x12\x37\x43\xd3\xe1\xb8\xf9\x7f\x2e\xc2\xfc\xfb\x30\xeb\xaa\xeb\xe7\xeb\x3c\x71\x27\x73\xb6\xcc\x46\xbe\x2a\x17\xd7\x05\xdc\xb6\xc4\xff\x69\xfe\xe6\x76\x8c\xa9\x9f\x6e\x98\x56\xba\x45\x90\xe3\x7b\x94\x1c\xc7\xfc\x12\xc8\x11\x7e\x9d\xab\x30\x5e\x77\x18\x96\x88\x7d\xee\xe1\x21\xc0\x3a\x66\x35\xbc\xc4\xd9\x6d\x8b\xf1\x34\x54\xa6\x3f\x66\x0f\x68\x65\x40\x8b\x8a\x31\x97\xb5\xbb\x9b\x5e\x04\x06\x8a\x0c\x7e\xef\x80\x07\xd4\xa4\xec\x03\x1d\x2a\x2f\x83\xc1\x01\x9d\x61\xf0\xee\x21\xcb\x3f\xc9\xde\xdd\x2d\x33\x37\x72\xc4\x5e\x47\x0b\x73\xbf\x0f\x95\xfc\xcb\xe2\x41\xfb\xdf\x57\x39\xaa\x10\x97\x9d\x62\x05\xaf\xf1\x2e\x51\x40\x03\xf5\xb8\xd4\x27\xf2\xfd\x8c\x16\xe4\x1e\x1c\xc6\xa2\x0e\x64\x1a\x3c\x7c\xa4\xdb\x4a\xad\xac\x95\x34\xcc\x56\x6d\xce\x8f\xe9\x83\x10\xb7\xd7\x2f\xaa\xab\xcd\xd9\x67\xd9\xd3\xe9\x3e\x74\xa9\x26\xed\x83\x2b\xb5\x4d\x9c\x1b\xb6\x63\xef\xe0\xcf\xec\x95\x0c\xb0\x2e\xe6\x77\xb9\xa0\x88\xfd\x2b\x35\x14\x97\x57\x3f\x54\xdf\xdf\x56\x17\x13\xcf\xfa\x91\x78\xf5\xed\xcd\x6d\xf5\xfa\x23\x10\xce\x44\xeb\x47\x07\x2b\x65\x75\x6c\x66\x40\x5e\x5c\x3a\x41\x77\x9e\x1c\x48\x19\x7d\x87\x0e\xce\xde\x4e\x7a\xde\xc1\xd9\xdb\x99\xe7\x9d\xf8\x2b\x00\x00\xff\xff\xd8\xe4\x0a\x39\x7d\x07\x00\x00")

func bootstrapAmazon_k8s_centos_7_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapAmazon_k8s_centos_7_nodeSh,
		"bootstrap/amazon_k8s_centos_7_node.sh",
	)
}

func bootstrapAmazon_k8s_centos_7_nodeSh() (*asset, error) {
	bytes, err := bootstrapAmazon_k8s_centos_7_nodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/amazon_k8s_centos_7_node.sh", size: 1917, mode: os.FileMode(493), modTime: time.Unix(1505848458, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapAmazon_k8s_ubuntu_1604_masterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xc1\x4e\x24\x37\x10\xbd\xfb\x2b\x9e\x00\x89\x45\x5a\x77\xef\x6e\xa2\x44\x42\x22\x52\x76\xc3\x81\x6c\xb2\x8b\x10\x49\x2e\xb9\x54\xdb\x35\xdd\x66\xdc\x76\xaf\x5d\x06\x46\xc0\xbf\x47\xee\xe9\x21\x20\x91\x28\x87\x48\x3b\x97\x9e\x7a\x7e\xf5\xea\xc9\x55\xe5\x7d\xe8\xaf\xf4\x53\xfb\xf8\x83\x41\x89\xc1\xb7\x93\x77\xc6\x89\xdf\x20\x44\x41\xc9\x2e\xf4\x20\x08\x8f\x93\x27\xa9\x81\xa7\xd0\x17\xea\x19\x12\xe1\xc2\x15\x1b\x81\x0c\x8c\x6b\xf2\x85\x33\x28\x57\x9c\x83\x89\x25\xcd\xa4\x81\x51\x32\xa7\x8a\x7a\x37\xba\x99\xec\x92\xda\xaf\x28\xe2\xea\x99\x72\xec\x9d\x81\x0b\x95\x92\x19\x2b\xe7\x39\x37\x78\xbf\x81\xe5\xec\xfa\x00\xf2\x7e\xa9\xc8\x76\x57\x2f\x0f\xb1\x78\x8b\x8e\x41\x9d\x9f\x3d\x75\x8c\xcc\x02\x12\xa4\x12\xc4\x8d\xfc\x5a\xed\x83\x82\x9d\xad\xe4\x81\xbd\x47\x36\xc9\x4d\x82\xc4\xe4\x71\x13\xd3\xba\xc1\xd9\x0a\x9b\x58\x10\x98\x2d\x4c\x0c\xd6\x89\x8b\x81\xfc\xd6\xd2\x6b\xdc\x24\x27\x0c\x27\xd5\x5c\x47\x79\x40\x4c\x18\x69\xcd\xa0\x10\x65\xe0\xf4\x4c\xb7\x51\x5f\xb1\x91\xca\x94\xe4\xa1\x33\x06\x91\x29\x1f\xb7\xed\x44\x66\x4d\x3d\xe7\xc6\xf8\x58\x6c\xd3\xc7\xd8\x7b\x6e\x4c\x1c\x5b\x9a\xa4\xb5\xd1\xd4\xaf\x5e\xf3\xa6\xe9\xa7\x1e\xf7\xc8\xc5\x46\x2c\x10\xc8\x5a\x68\x25\xb1\x98\x01\x2d\xcb\xcc\x6d\x73\x2c\xc9\x70\x6e\xbc\xcb\xd2\xd8\x76\x5d\x3a\x4e\x81\x65\x41\x54\x1e\xa0\x0d\x0e\xd9\x0c\x11\x7b\x96\xbb\xd9\xc9\x71\x5b\x53\x9b\x27\x5c\x17\x5b\xfc\x1d\xea\x5b\x0e\x8e\x3c\x46\x72\x61\x0f\x3f\xfc\xd7\x62\x87\x4a\x55\xab\x3d\x0b\xca\x64\x49\x18\x7a\xf3\x88\xb8\x90\xa5\x8e\x8c\xde\xe0\x4f\x05\x00\x39\x1a\x92\xe5\x3f\x77\x52\x07\x26\x2f\xa1\x8d\x66\xcd\xa9\x71\x71\x89\xab\x86\x24\x0a\x79\x8a\x49\xf4\x7c\x97\xcb\x49\x75\xe0\x59\x9e\x44\x64\xc7\x93\xb7\xcd\xf7\xcd\x1b\xfd\xe6\xcd\x02\xcf\x77\xad\x8b\x38\xbf\x4b\xbb\xfa\xa2\x94\xca\x9b\x2c\x3c\x1a\xf1\xe0\x30\x8f\xeb\xb6\xec\x13\x3c\x0b\x25\xd9\xc1\xea\xfc\xb7\xf7\xbf\x9c\x7d\x38\x3b\x3f\x39\x78\xc5\xe6\xdd\xc8\x42\x96\x84\xa0\xf5\x54\x3a\xef\x8c\x76\xd3\xf5\xb7\xb8\x87\x29\x02\x6d\xb1\x87\x3d\xe8\x15\xde\x1d\xa9\xf3\x8b\xb3\xdf\x7f\xbc\x3c\x7d\x21\xd1\x47\x43\xfe\x1f\xf3\x2e\x3f\x7f\x3c\xfd\x74\x72\xf0\xaa\x5e\xd3\xdc\x81\x75\xe9\x9c\x89\x29\xb4\xc6\x97\x2c\x9c\x9a\xab\x1c\x03\xee\x71\xf5\x05\x3a\xe1\xb0\xd9\x2e\x61\xe3\x84\xc7\x5f\x69\x6a\xce\x3e\xfd\x7c\xfa\xe1\xf2\xf4\xa7\x59\xe7\xf0\x48\x9d\x7f\xbe\xb8\xfc\x1f\xe4\xaa\x0c\xee\x21\x31\x94\xb1\xe3\x74\x78\xa4\xd4\x72\xef\x48\x9c\x59\x1e\x23\x17\x9c\x40\x6b\x9a\x5c\xe6\x74\xcd\x49\x77\x2e\x58\x5d\x5b\x88\x83\xbb\xaa\xf2\x00\xad\x25\xae\x39\xe0\xe0\x6e\x36\xf9\x80\x67\x7c\xb2\xd7\x9c\xc4\x65\xd6\x64\x6d\xe2\x9c\x6b\xde\xd2\x84\x87\x67\x4c\xc3\x49\x34\xdf\x4a\x22\x9d\x29\x3c\xe7\x1d\xdc\x3d\x36\xe0\x41\xa9\x7d\x5c\x0e\x14\xd6\x19\x1f\xd9\x67\xde\xe0\xf8\x68\xf6\x5b\xbb\x4d\xd3\xe4\xb7\xc3\xa9\x57\xbb\x35\xb1\xd1\xe4\x66\x4a\xb1\x3e\x73\x86\xbc\x33\xb1\x89\xa9\x6f\xaf\xdf\x35\xdf\xb4\x3d\x4b\x7d\x28\xf5\x3c\x25\xfc\x74\x1b\xda\x65\xd8\xa9\xbe\x5b\xed\x10\xf3\xee\x98\xec\xd8\xbe\x6d\xbe\x6b\x17\xa9\x0d\x8d\x7e\x5b\x50\xcf\x26\x62\x58\xb9\xfe\xb1\x39\x3b\x31\xb2\xa3\x0b\x4d\x3d\x54\x6a\x5c\x5b\x97\xa0\x27\xb4\x43\x1c\xb9\x2d\x5d\x09\x52\xda\x79\x93\x95\x99\xfe\x25\xf5\x85\x84\x76\x5b\x4f\x99\x21\xde\x04\xe8\x0b\x6c\x0f\x8f\xb7\x9f\x97\x2a\xfc\x15\x00\x00\xff\xff\x50\x7d\x39\xdb\x13\x07\x00\x00")

func bootstrapAmazon_k8s_ubuntu_1604_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapAmazon_k8s_ubuntu_1604_masterSh,
		"bootstrap/amazon_k8s_ubuntu_16.04_master.sh",
	)
}

func bootstrapAmazon_k8s_ubuntu_1604_masterSh() (*asset, error) {
	bytes, err := bootstrapAmazon_k8s_ubuntu_1604_masterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/amazon_k8s_ubuntu_16.04_master.sh", size: 1811, mode: os.FileMode(493), modTime: time.Unix(1505848458, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapAmazon_k8s_ubuntu_1604_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x53\x4d\x4f\xdd\x3a\x14\xdc\xfb\x57\x8c\xb8\x48\xf7\x21\x11\x87\xb7\x7a\x12\x12\x4f\xea\xc7\x5d\xd0\x0a\x2a\xb5\x48\xdd\x74\xe3\xd8\x87\xc4\x37\x8e\x1d\x7c\x8e\x0b\x57\xc0\x7f\xaf\x92\x1b\x28\xec\xba\xa8\x44\x36\xc9\x4c\xc6\x33\xe3\xe4\x78\x85\xea\x8d\x2e\xb5\xc2\x77\x82\xc9\x04\xba\x1b\x83\xb7\x5e\xc2\x0e\x31\x09\x0a\xfb\xd8\xc2\x40\x68\x18\x83\x91\x09\x04\x13\xdb\x62\x5a\x82\x24\xf8\xb8\x25\x2b\x90\x8e\xf0\xd3\x84\x42\x0c\xc3\x13\x4f\xd1\xa6\x92\x67\x51\x47\x28\x4c\x79\x62\x83\x1f\xfc\x2c\xf6\x59\xad\x26\x16\xe9\xfa\x95\x73\x6a\xbd\x85\x8f\x93\x84\x09\xd7\x3e\x10\x6b\xbc\xdf\xc1\x11\xfb\x36\xc2\x84\xb0\x24\x92\x7b\xca\xe3\x2e\x95\xe0\xd0\x10\x4c\x13\xe6\x4e\x0d\x81\x49\x60\x04\xb9\x44\xf1\x03\x1d\xab\x15\x4c\x74\x73\x15\xee\x28\x04\xb0\xcd\x7e\x14\x64\x32\x01\xb7\x29\xf7\x1a\xe7\xd7\xd8\xa5\x82\x48\xe4\x60\x53\x74\x5e\x7c\x8a\x26\xec\x2b\x1d\xe3\x36\x7b\x21\x78\x99\xca\x35\x86\x3b\xa4\x8c\xc1\xf4\x04\x13\x93\x74\x94\x5f\xf9\x6a\xf5\x86\x3f\x52\xd9\x92\x03\x2a\x46\x27\x32\xf2\x69\x5d\x8f\xc6\xf6\xa6\x25\xd6\x36\xa4\xe2\x74\x9b\x52\x1b\x48\xdb\x34\xd4\x66\x94\xda\x25\x3b\xdd\xab\x9e\x76\xba\x1d\x5b\x3c\x80\x8b\x4b\x58\x28\x18\xe7\x50\x29\x49\xc5\x76\xa8\x49\x66\x6d\xcd\xa9\x64\x4b\xac\x83\x67\xd1\xae\xee\x4b\x43\x39\x92\x2c\x8c\xe2\x0e\x95\xc5\x9a\x6c\x97\x70\xe0\xa8\x99\x9b\x9c\xd6\xd3\x52\xfd\x42\xeb\x53\x8d\xdf\xb0\xba\xa3\xe8\x4d\xc0\x60\x7c\x3c\xc0\xff\x7f\x1a\xb6\x56\x6a\xaa\xda\x92\xa0\x8c\xce\x08\xa1\xda\x3d\x33\x3e\xb2\x4c\x23\x53\xed\xf0\x43\x01\x00\x27\x6b\x64\x79\xa6\x46\xa6\x81\xe1\x05\xba\x64\x7b\xca\xda\xa7\x05\x4f\x1e\x92\x4d\xe4\x31\x65\xa9\xe6\x6f\xb9\xbc\x99\x1a\x04\x92\x17\xc8\xb8\xe1\xec\x5f\xfd\x9f\x3e\xa9\x4e\x4e\x16\x7a\x7b\xa3\x14\xef\x58\x68\xb0\x12\x40\x71\x9e\xcd\x7d\xc6\x0b\x9e\xc5\x64\x79\xa2\x95\xba\xfa\xf2\x79\x73\x79\x76\xf8\xcf\x54\x72\xde\x7f\x5f\x1a\x6f\x53\x8e\xb5\x0d\x85\x85\xb2\xde\x72\x8a\x78\xc0\xf6\x06\x55\xc6\x5a\xef\x8f\x80\xf6\x42\xc3\x85\x19\xf5\xf9\xe5\xa7\xcd\x87\xab\xcd\xc7\xd9\x67\x7d\xa4\x2e\xde\x7d\xbb\xda\x7c\xfd\x0b\x86\x7b\xa3\xf5\x91\x52\xcb\x76\x91\x89\x49\x9e\xd1\x36\xf9\x88\xaa\x92\xd4\x53\xc4\xe1\xfd\x9c\xff\x88\xc3\xfb\xfd\xba\xc7\x5f\x01\x00\x00\xff\xff\xcc\xb2\x8a\xbe\xd7\x04\x00\x00")

func bootstrapAmazon_k8s_ubuntu_1604_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapAmazon_k8s_ubuntu_1604_nodeSh,
		"bootstrap/amazon_k8s_ubuntu_16.04_node.sh",
	)
}

func bootstrapAmazon_k8s_ubuntu_1604_nodeSh() (*asset, error) {
	bytes, err := bootstrapAmazon_k8s_ubuntu_1604_nodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/amazon_k8s_ubuntu_16.04_node.sh", size: 1239, mode: os.FileMode(493), modTime: time.Unix(1505848458, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapBootstrap_initSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x4e\xc4\x30\x0c\x45\xf7\x39\xc5\x67\xb2\xa5\xea\x69\x38\x40\x9a\xfc\x49\x83\x8a\x5d\xd9\x6e\xd1\x6c\x38\x3b\xea\x68\x4e\x00\x5e\xda\x7e\x7a\xd2\xcb\x6f\xf3\xe1\x36\x2f\x43\x66\xca\x89\xa5\xf8\x9a\x52\x9e\xfe\x3c\x29\xe3\xc3\xd9\xa0\xb2\x3d\x10\x0a\x67\xc0\x57\x2e\x45\x3a\x8a\x34\x68\xac\x34\x50\xce\x61\x2a\x5f\x94\x78\x20\xd6\x21\xdd\x53\x7e\xde\x87\xa3\xb4\xc6\x76\xb1\xb1\x12\x0b\xfb\x10\x19\xd2\xa1\xf7\x17\xbc\xa8\x86\x87\x95\x1d\x5e\x6d\xec\xe1\xef\x29\x63\x48\xdd\x8e\x76\xfd\x5d\x54\xa7\xd0\x4a\xb0\xe1\xf6\x6d\x23\xf8\x5c\xd6\xed\xf0\xa0\xa1\x38\x3e\x5d\xe5\x06\x15\xa6\x7c\x89\xaa\xb1\x04\x51\xe0\x43\xfa\x46\x1c\x4e\x9b\x5a\x89\xf2\x32\xe0\xae\x86\xba\xe9\xd1\xb0\x9b\x9e\xa3\xd1\xfc\x5f\x91\xae\x2a\x13\x53\x6d\xf8\x49\xbf\x01\x00\x00\xff\xff\x21\xee\xd3\xad\x82\x01\x00\x00")

func bootstrapBootstrap_initShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapBootstrap_initSh,
		"bootstrap/bootstrap_init.sh",
	)
}

func bootstrapBootstrap_initSh() (*asset, error) {
	bytes, err := bootstrapBootstrap_initShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/bootstrap_init.sh", size: 386, mode: os.FileMode(493), modTime: time.Unix(1505848458, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_centos_7_masterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x41\x6f\x1b\x37\x13\xbd\xf3\x57\xcc\x67\x19\xf0\x17\x20\x5c\xd6\x69\x91\x16\x41\x54\xa0\x49\x14\xc0\x4d\x10\x1b\xa9\xdb\x1e\xda\x22\xa0\xc8\xd1\xee\x54\x5c\x92\x25\x67\x25\x0b\x8e\xf3\xdb\x0b\x72\x57\xb2\x8c\x02\x3d\x34\x87\xec\x65\x31\xc3\xc7\xc7\xe1\xbc\x99\xe1\xec\x7f\x6a\xc8\x49\x2d\xc9\x2b\xf4\x1b\x58\xea\xdc\x89\x8c\x0c\x12\x85\xb1\xf0\x49\x88\x19\xc8\x2f\xf4\x89\x19\x5c\x77\x98\x11\x36\xda\x0d\x98\x41\x27\x04\xf2\x7f\xa2\x61\xb4\x40\x9e\x03\x70\x87\x90\x4d\xa2\xc8\x0d\xfc\x8a\x15\x80\x37\xd1\x91\x21\x76\x3b\xf0\x81\x61\xc8\xe4\x5b\xd0\xc0\xd8\x47\xa7\xb9\x18\x4e\xfb\x76\xd0\x2d\x02\x87\x89\xae\xf2\x8c\x87\x88\x19\xe8\x5c\x56\xd0\x9b\x30\xa4\x0a\xeb\x10\x86\x8c\xa9\x78\x1d\xf5\x54\xe1\x94\x8a\x0f\xc2\xea\x01\x73\x68\xc9\x00\xf9\x02\xc8\x08\x2b\x72\x98\x1b\x78\xb1\x03\x8b\x99\x5a\x0f\xda\xb9\xfb\x0b\x4c\x97\xca\x5d\x18\x9c\x15\x33\x58\x22\xe8\xa5\xab\x51\x2d\x11\x8a\x04\x9a\x21\x0d\x9e\xa9\xc7\xc7\xa0\xbd\x1d\x6f\xdb\xa1\x73\xd3\x9d\x21\xa1\x76\xb0\x0d\x69\xdd\xc0\xc5\x0a\x76\x61\x00\x8f\x68\xc1\x04\x6f\x89\x29\x78\xed\xc6\x90\x1e\xc3\x36\x11\x23\x10\x97\xe0\xaa\xc4\x33\x08\x09\x7a\xbd\x46\xd0\x3e\x70\x87\xe9\x01\x73\x23\x66\x62\x26\xae\x2f\xdf\x2c\xde\xcd\x4f\x2e\xde\xfd\xb8\x78\x79\xbd\x78\x55\xcd\x13\x71\x75\xf9\xfe\xfa\xde\x59\xac\x93\x8a\xfe\x82\x75\x22\xf2\x60\x03\xa4\xd8\x83\x94\xd4\xc7\x90\x18\x3a\xe6\x98\x9f\x29\x15\xb5\x59\xeb\x16\x73\x63\x5c\x18\x6c\xd3\x86\xd0\x3a\x6c\x4c\xe8\xd5\x6e\xe8\x95\x0d\xa6\xfc\xe5\x1a\x77\x4d\x1b\xdb\xcf\xe2\x49\xb1\x97\x13\xea\xc0\x37\x12\xe6\x0e\xa4\x81\x33\xa3\x19\x9e\x3f\x5f\x5c\xbe\x86\xef\x41\x21\xd7\x93\x9b\x84\x31\xe4\xc6\xaa\xf5\xb0\xc4\xe4\x91\x31\x57\x97\xf8\xed\xde\xf1\x87\xf0\xba\xc7\xf9\x9b\x83\x43\x2c\x75\xc6\x21\xb9\x79\x09\xee\x99\xaa\x3c\x47\xfb\x29\xa8\xca\x7a\xc4\x29\xd1\x7d\x2b\x6f\xbe\x7b\xfa\xe1\xe9\x37\x02\x7d\x29\x33\x3b\x3f\x17\x6d\x6c\x4d\x87\x66\x3d\x3f\x17\x65\xc3\x87\x23\xbb\x8d\xed\x1a\x77\xf3\xff\x96\x45\x18\xbf\xcf\x4b\xdd\xe2\xf2\xf5\x59\x19\x3e\x3f\x2d\xde\x92\x1f\x6e\x80\x32\x58\xca\x35\x74\x58\x96\x8e\x5a\xe9\xc1\xd5\x7a\x7e\x75\xd9\xc0\x75\x47\xb9\x40\x4a\xcb\x27\x34\xa1\xef\xd1\x5b\xb4\xb5\x6d\xb6\xe4\x5c\x69\xa9\x15\xdd\xa0\x05\xa7\x19\x53\x33\x29\xb3\x1b\xfa\xda\x04\x46\x9b\x0e\x41\xee\x26\xbd\xf6\x4b\xe4\x33\x97\x9e\x95\x3b\xf8\x7d\xbc\x95\x0d\x66\x8d\x69\x6f\xe5\x50\x34\x9d\x0c\x5c\x72\x89\x2e\xef\xed\x92\x7d\x87\x7c\x6c\x6a\xdb\xef\xcd\x9a\x0b\x39\x30\xb9\x2c\x44\xde\x65\xc6\xde\xb0\x83\x51\x9c\xe9\x98\x7f\xfa\x27\xce\x26\x63\xda\x90\xc1\x23\x40\x66\x9d\x78\xbf\x4f\x5c\xfd\xfc\xe2\xed\xc5\xcb\x8b\xab\xf9\xe9\xff\xcd\x90\x1c\xd0\xca\x04\xbf\xa2\xb6\xe9\xf1\x91\xb8\x7a\x7f\xf1\xcb\x0f\xd7\x8b\xba\x4a\x11\xb4\xb5\xa5\xf9\xc3\x16\x2c\x6e\x80\x07\xff\x15\x7c\x04\xbd\x5d\xc3\x99\x22\x8f\x0c\x0a\x6e\x63\x22\xcf\x70\xfa\xe4\xee\x0c\x3e\x82\x19\x18\xa4\x3d\x51\x27\x20\x57\xe7\x8f\x04\x9a\x2e\xc0\xe9\x81\xb3\xd4\x36\xf7\x51\x35\x14\x8b\x7a\xef\xf1\xaf\x81\xd2\x28\xd9\x94\x81\x12\x74\x89\x58\x6e\xc1\x23\x37\xcb\x44\xb6\xc5\xe9\x27\xfd\x4a\x1a\xed\x9c\xa4\x38\x26\x73\x7e\x7e\x80\x47\x21\xf6\x39\x4c\x98\x91\x0f\x16\x79\x62\x90\x52\x47\x2a\x69\xc1\x24\x97\xe4\xad\xac\xdd\x7b\x7a\x5b\xe6\xd3\x1d\x48\xc9\x61\x8d\x1e\x4e\x6f\xeb\x10\xbb\x83\x07\x78\x6d\x37\x98\x98\x32\xca\x92\x0b\xcc\xb9\xec\x9b\x32\x78\xf7\x00\x69\x30\xb1\xc4\x1b\x4e\x5a\x66\xed\x1f\xe2\x4e\x6f\x0f\x49\xb8\x1b\x43\x2d\x61\xeb\x18\xdd\x58\x3d\x72\x05\x53\xbf\xda\x60\x72\x13\x53\x28\x0f\x81\xd1\x8e\x4c\x68\x42\x6a\xd5\xe6\x49\xf3\xb5\x6a\x91\xcb\x53\x22\xab\x9e\x78\x3c\x17\xd4\x54\x8d\xba\x4c\x76\xd5\x85\xbc\x5f\xd6\xb6\x57\xe7\xcd\x53\x35\x51\xed\x74\xef\xc6\x03\x65\x0d\xa2\x0a\x3f\x0e\x9c\x23\x32\x6d\x7b\xf2\x4d\x59\xac\x32\x85\xc0\xa2\x5f\x5b\x4a\x20\x23\x7c\x52\x75\x9c\x08\x13\xff\x65\xdb\x1e\xa5\xc6\x03\xc4\xdf\x01\x00\x00\xff\xff\x83\xab\x9a\xf4\x48\x08\x00\x00")

func bootstrapDigitalocean_k8s_centos_7_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_centos_7_masterSh,
		"bootstrap/digitalocean_k8s_centos_7_master.sh",
	)
}

func bootstrapDigitalocean_k8s_centos_7_masterSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_centos_7_masterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_centos_7_master.sh", size: 2120, mode: os.FileMode(493), modTime: time.Unix(1504818366, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_centos_7_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xd1\xaa\xdc\x36\x10\x7d\xd7\x57\x9c\x5e\x07\xf2\x12\xd9\x5c\x28\x69\x09\xd9\x42\xdb\x6c\x20\x4d\x9b\x0b\xc9\x42\x1f\xda\x12\x64\x69\xd6\x56\x2c\x4b\xae\x34\xca\xbd\x26\xa4\xdf\x5e\x64\x7b\xf7\x6e\x0a\x7d\x49\x1e\xe2\x17\x73\x8e\x46\x47\x67\x34\x33\xaa\xbe\x69\x72\x8a\x4d\x6b\x7d\x43\xfe\x3d\x5a\x95\x7a\x91\x88\x21\x49\x68\x83\x7f\x84\xa8\x20\xbf\xd2\x27\x2a\x1c\x7a\x4a\x84\xf7\xca\x65\x4a\x50\x91\x60\xfd\x3b\xd2\x4c\x06\xd6\x73\x00\xf7\x84\xa4\xa3\x9d\xb8\xc6\xef\xb4\x04\xd0\xdd\xe4\xac\xb6\xec\x66\xf8\xc0\xc8\xc9\xfa\x0e\x0a\x4c\xe3\xe4\x14\x17\xe0\x94\xef\xb2\xea\x08\x1c\x36\xb9\x45\x67\x3d\x44\x54\x50\xa9\xac\x90\xd7\x21\xc7\x25\xac\x27\xe4\x44\xb1\xb0\xce\x8e\x76\x09\xb7\xb1\x70\x08\xc7\x4f\x94\x43\x67\x35\xac\x2f\x01\x89\x70\xb4\x8e\x52\x8d\x9f\x66\x18\x4a\xb6\xf3\x50\xce\xdd\x27\xb0\x25\x95\xfa\x90\x9d\x11\x15\x5a\x82\x6a\xdd\xe2\xaa\x25\x94\x12\x28\x46\xcc\x9e\xed\x48\x8f\xa0\xbc\x59\xb3\xed\xc9\xb9\x2d\x67\x44\x52\x0e\xb7\x21\x0e\x35\x5e\x1c\x31\x87\x0c\x4f\x64\xa0\x83\x37\x96\x6d\xf0\xca\xad\x96\x1e\xe1\x36\x5a\x26\x58\x2e\xe6\x96\x12\x57\x08\x11\xa3\x1a\x08\xca\x07\xee\x29\x7e\xa2\x5c\x8b\x4a\x54\xe2\x70\xf3\x72\xff\x6a\x77\xf5\xe2\xd5\x2f\xfb\x9f\x0f\xfb\x67\x0b\xbc\x12\xbf\xfd\xf8\xe6\xb0\x7f\x7d\x4f\xaf\xf8\xea\x6b\xf6\x89\x48\xd9\x04\xc4\x69\x84\x94\x76\x9c\x42\x64\xf4\xcc\x53\x7a\xd2\x34\x93\xd2\x83\xea\x28\xd5\xda\x85\x6c\xea\x2e\x84\xce\x51\xad\xc3\xd8\xcc\x79\x6c\x4c\xd0\xe5\x2f\x07\x9a\xeb\x6e\xea\xbe\x48\x27\x4e\xa3\xdc\xa2\xce\x7a\xab\x60\xea\x21\x35\x1e\x6a\xc5\x78\xfa\x74\x7f\xf3\x1c\x3f\xa0\x21\x5e\x4e\xae\x23\x4d\x21\xd5\xa6\x19\x72\x4b\xd1\x13\x53\x5a\x28\xf1\xc7\x3d\xf1\x97\xf0\x6a\xa4\xdd\xcb\x33\x21\x5a\x95\x28\x47\xb7\x2b\xe6\x9e\x34\x8b\xce\xc5\x7e\x1b\x9a\x45\xf5\x42\x53\x92\xfb\x4e\xde\x7d\xff\xf8\xed\xe3\x6f\x05\xf9\xd2\x66\x66\x77\x2d\xba\xa9\xd3\x3d\xe9\x61\x77\x2d\xca\x86\xb7\x17\xb8\x9b\xba\x81\xe6\xdd\xe7\xdd\x22\xd6\xef\xcb\xae\x6e\x7f\xf3\xfc\x61\x79\x7c\xde\xec\x7f\xb5\x3e\xdf\xc1\x26\x18\x9b\x16\xeb\xa5\x89\x9f\xdd\xd4\x38\xf4\x36\x15\xbe\xcc\x79\x24\x1d\xc6\x91\xbc\x21\xb3\xcc\xca\xad\x75\xae\xcc\xd1\xd1\xde\x91\x81\x53\x4c\xb1\xde\xca\x31\xe7\x71\xe9\x7c\xad\x74\x4f\x90\xf3\x56\xa4\xd3\x92\xf5\x89\xcb\xa0\xca\x19\x7f\xae\xa9\x98\xa0\x07\x8a\x27\x94\x42\x29\xe4\x06\xa8\xe5\x62\x29\x9d\x70\xb9\x72\x47\x7c\x09\x95\x19\x4f\x7d\x30\x27\xa6\x51\xb3\xc3\x5a\x83\x4d\xf8\x7f\x16\x37\xa9\xff\xae\x26\x56\x91\x4f\x3b\x45\x85\xd7\xf4\x77\xb6\x91\x0c\xda\xf9\x7c\x5c\x9a\x53\x09\x95\xb7\xf0\xc4\x75\x1b\xad\xe9\x68\xfb\x49\x7f\x94\x5a\x39\x27\xed\xb4\x3a\xdf\x5d\x9f\xc3\xa7\xcd\xa7\xdc\x9f\x94\x10\x29\x9d\x2c\x5c\xb0\xef\x82\xf5\x90\x92\xc3\x40\x1e\x0f\x3e\x2c\x0f\xc3\x47\x3c\xf8\xb0\x3e\x05\x1f\xc5\xbf\x01\x00\x00\xff\xff\x06\x55\x6b\x88\x54\x06\x00\x00")

func bootstrapDigitalocean_k8s_centos_7_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_centos_7_nodeSh,
		"bootstrap/digitalocean_k8s_centos_7_node.sh",
	)
}

func bootstrapDigitalocean_k8s_centos_7_nodeSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_centos_7_nodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_centos_7_node.sh", size: 1620, mode: os.FileMode(493), modTime: time.Unix(1503262845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_coreos_masterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x51\x6f\xdb\x36\x10\x7e\xe7\xaf\xb8\xd5\x06\xba\x62\xa5\xd8\xc4\x41\xd3\x04\xf0\x80\x75\xc8\x00\xa3\x45\x12\x38\x59\xf7\x32\x60\xa0\xc8\x93\xc4\x99\xe2\x09\xe4\xc9\x8e\xe1\x79\xbf\x7d\xa0\x6c\x67\xf6\x02\xec\xb1\xd5\x0b\xa5\xfb\xbe\xbb\xef\x8e\x77\xa4\x46\xdf\xa9\x3e\x45\x55\xba\xa0\x30\x2c\xa1\xd4\xa9\x11\x09\x19\x24\x0a\x63\xe1\x6f\x21\x46\x20\xbf\xd1\x23\x46\xf0\xd8\x60\x42\x58\x6a\xdf\x63\x02\x1d\x11\x5c\xf8\x13\x0d\xa3\x05\x17\x98\x80\x1b\x84\x64\xa2\xeb\xb8\x80\xdf\x70\x20\xe0\x53\xe7\x9d\x71\xec\xd7\x10\x88\xa1\x4f\x2e\xd4\xa0\x81\xb1\xed\xbc\xe6\xfc\xe1\x75\xa8\x7b\x5d\x23\x30\xed\xc3\x0d\x71\x76\x22\x62\x04\x3a\x65\x04\x83\xa1\x3e\x0e\xb4\x06\xa1\x4f\x18\xb3\xd5\xbb\xd6\x0d\x74\x17\xb3\x0d\xa8\x3a\x89\x4c\xb5\x33\xe0\x42\x26\x24\x84\xca\x79\x4c\x05\x7c\x5c\x83\xc5\xe4\xea\x00\xda\xfb\x7f\x0b\xd8\x17\x95\x1a\xea\xbd\x15\x23\x28\x11\x74\xe9\x87\xac\x4a\x84\xdc\x02\xcd\x10\xfb\xc0\xae\xc5\xb7\xa0\x83\xdd\x55\xdb\xa0\xf7\xfb\x9a\x21\xa2\xf6\xb0\xa2\xb8\x28\x60\x56\xc1\x9a\x7a\x08\x88\x16\x0c\x05\xeb\xd8\x51\xd0\x7e\x97\xd2\x5b\x58\x45\xc7\x08\x8e\x73\x72\x43\x8b\x47\x40\x11\x5a\xbd\x40\xd0\x81\xb8\xc1\x78\x12\xb9\x10\x23\x31\x12\x8f\x77\x9f\x6e\x6e\xa7\x93\x0a\xab\xab\x8b\xe2\xfc\xf2\xec\x6a\x32\xb9\x2a\x4b\x5d\x7e\xb8\x34\xa6\x14\xf7\x77\xf3\xc7\xe9\xc5\xc5\x64\xa0\x7e\xc3\x21\x11\x9f\x3e\x3c\xfc\xf1\xe5\x66\xfe\x30\xbb\xbb\x9d\x2e\xcf\x8a\xcb\xe2\x9d\x10\xed\xc2\xba\x08\xb2\x03\x45\x1d\x2b\x13\xdc\xee\xa5\x74\x41\x98\x3e\x7a\x90\xe9\xe1\x33\x34\xcc\x5d\xba\x56\x2a\x31\xe5\x46\x17\x35\x51\xed\x51\x77\x2e\x15\x86\x5a\xb5\xe8\x4b\x8c\x01\x19\x93\x8c\xe8\x51\x27\x54\x87\x75\xbc\x39\x12\xdd\x0e\x87\xc7\xbb\xd0\x3f\x29\xdd\xda\xf7\x17\x83\xa7\x61\x0f\x3f\x3e\xab\x1e\x4c\x5f\x4b\x5d\xdb\xf6\xbf\xea\xda\xb6\xc2\x34\x2d\x59\xf8\xe1\xe9\x45\x5e\x2f\xa9\x22\xad\x13\x63\x9b\x31\x0c\xc3\x60\x5a\x32\x0b\x8c\x47\xf6\xc4\x3a\xf2\xc1\x2c\xee\x7f\xfd\xf8\x79\xf6\xf3\xec\x7e\x3a\xfe\x7e\x28\xd2\x55\x86\x42\xe5\xea\xa2\xc5\x37\xe2\x7e\x3e\xfb\xf2\xd3\xe3\xcd\x80\xba\x0e\xb4\xb5\x79\xe0\x68\x05\x16\x97\x80\xdc\xbc\x83\xbf\x40\xaf\x16\xf0\x5a\xb9\x80\x0c\x0a\x36\x5d\x74\x81\x61\x7c\xbe\x7d\x7d\x80\x7e\xb9\x9d\xc3\x74\x0a\xe7\x7b\x6c\x00\x4c\xcf\x20\xed\x2b\xf5\x0a\x64\x75\xf6\x46\xa0\x69\x08\xc6\xcf\x62\x79\x0b\xb8\xed\x54\xe1\x3a\x21\x44\xea\x2d\xc1\x61\x73\x22\x26\xe4\x53\x93\x0b\x8e\x41\xca\xdc\x01\x8c\x4b\x8c\xb2\x74\xc1\xca\x8e\x22\xc3\x78\x93\xa7\x7d\x0b\x52\x32\x2d\x30\xc0\x78\x33\x9c\x8d\x2d\x9c\xf0\xb5\x5d\x62\x64\x97\x50\xe6\xfa\x30\xa5\xec\xb7\xdf\x95\xed\x09\xd3\x60\x64\x89\x4f\x1c\xb5\x4c\x3a\x9c\xf2\xc6\x9b\xe7\xfc\xb7\x42\x88\x43\x83\x74\xd7\xf9\x35\xfc\x2e\x00\x64\x35\xcc\xce\xb5\x52\x96\x4c\x2a\xba\x48\xf9\x46\x31\xda\x3b\x43\x05\xc5\x5a\x2d\xcf\x8b\x89\xaa\x91\xf3\x9d\x24\x87\x26\xa1\x3d\x9a\x27\xe5\x42\x62\xed\xf3\x9d\x45\x41\x35\x94\x0e\xb0\xb6\xad\x3a\x2b\xde\xab\x7d\xa8\xb5\x6e\xfd\x4e\x50\x0e\x49\x0c\xdd\x04\x85\x6c\x8e\x83\x69\xdb\xba\x50\x64\x30\xff\x2a\xe6\x44\x7c\x74\xf8\x1a\x6a\x51\x19\x8a\xa8\x8a\xec\x22\x4c\xf7\x3f\xfe\x2f\xe8\x6a\x27\x29\x4c\x43\xab\x00\x72\x0e\x7d\xd9\x07\xee\xaf\x77\xcb\xcb\xe8\xff\x04\x00\x00\xff\xff\x6e\xdd\xf4\x44\xcb\x06\x00\x00")

func bootstrapDigitalocean_k8s_coreos_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_coreos_masterSh,
		"bootstrap/digitalocean_k8s_coreos_master.sh",
	)
}

func bootstrapDigitalocean_k8s_coreos_masterSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_coreos_masterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_coreos_master.sh", size: 1739, mode: os.FileMode(493), modTime: time.Unix(1505852147, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_coreos_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x53\x4d\x6f\xd4\x30\x10\xbd\xfb\x57\x3c\x9a\x1e\x9b\x04\x24\x04\x08\xa9\x48\x7c\xe4\x50\x0a\xad\xd4\x5d\xc1\x11\x39\xf1\x34\x71\xd7\xb1\x23\xcf\xb8\xed\xaa\x2a\xbf\x1d\xc5\xd9\x55\x69\xb9\xd3\x5c\xa2\x79\x6f\xf2\x66\x9e\xe6\xa5\x78\x51\x27\x8e\x75\x6b\x7d\x4d\xfe\x1a\xad\xe6\x41\x31\x09\x4a\x52\x9d\xc1\x6f\xa5\x0a\x94\xcf\xf4\xa8\x02\xeb\x81\x98\x70\xad\x5d\x22\x86\x8e\x04\xeb\xaf\xa8\x13\x32\xb0\x5e\x02\x64\x20\x70\x17\xed\x24\x15\x7e\x52\x6e\xa0\xdb\xc9\xd9\xce\x8a\xdb\xc2\x07\x41\x62\xeb\x7b\x68\x08\x8d\x93\xd3\x32\x17\x4e\xfb\x3e\xe9\x9e\x20\x61\x27\x97\x75\x96\x21\xaa\x80\xe6\x99\x21\xdf\x85\x14\x73\xdb\x40\x48\x4c\x71\x46\x9d\x1d\x6d\x6e\xb7\x71\xc6\x10\x2e\x1f\x29\x87\xde\x76\xb0\x7e\x6e\x60\xc2\xa5\x75\xc4\x15\x3e\x6d\x61\x88\x6d\xef\xa1\x9d\x7b\x30\xb0\x33\xc5\x43\x48\xce\xa8\x02\x2d\x41\xb7\x2e\x6f\xd5\x12\xe6\x13\x68\x41\x4c\x5e\xec\x48\x47\xd0\xde\x2c\x6e\x07\x72\x6e\xe7\x19\x91\xb4\xc3\x4d\x88\x9b\x0a\x27\x97\xd8\x86\x04\x4f\x64\xd0\x05\x6f\xac\xd8\xe0\xb5\x5b\x56\x3a\xc2\x4d\xb4\x42\xb0\x32\x2f\x97\x4f\x5c\x20\x44\x8c\x7a\x43\xd0\x3e\xc8\x40\xf1\x91\x72\xa5\x0a\x55\xa8\xf5\xf9\x69\x73\x76\x7c\x70\x72\xf6\xb5\xf9\xbc\x6e\xbe\xe4\xf2\x40\x7d\xff\xb8\x5a\x37\x17\x0f\xf0\x52\x1f\x3c\x67\x4e\xd4\xe9\xbb\xd5\xaf\x1f\xcd\xc5\xea\xe4\xfc\xec\xf8\xfa\x55\xf5\xb6\x7a\xa9\x54\x97\xa2\x43\xc9\xab\x6f\x18\x44\x26\x7e\x5f\xd7\x2c\x61\x3e\x68\xd5\x87\xd0\x3b\xd2\x93\xe5\xaa\x0b\x63\xbd\x49\x2d\x45\x4f\x42\x5c\x46\x72\xa4\x99\xea\xfd\xfb\xf0\xee\x2f\xe5\xfb\xfc\x93\x38\xeb\xd3\x6d\xad\x47\xf3\xe6\x75\xfe\xb2\x13\x87\x0f\xa8\xc3\x24\x99\xde\x41\xff\x6b\xba\x36\xe3\xd3\xe9\xda\x8c\x4a\x71\x32\x01\xbc\x65\xa1\x71\x5e\x90\x7c\x8e\x96\x09\xdd\x86\xe2\x53\x92\x45\x47\xd9\x73\x0b\x59\x36\xd8\xab\x47\x62\x92\x7f\xd0\xab\x60\x3d\xca\x52\xc2\x86\x3c\x0e\xef\x72\x34\xee\x71\x78\xb7\x84\xe1\x5e\xfd\x09\x00\x00\xff\xff\xaf\xc3\xe8\x41\x56\x04\x00\x00")

func bootstrapDigitalocean_k8s_coreos_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_coreos_nodeSh,
		"bootstrap/digitalocean_k8s_coreos_node.sh",
	)
}

func bootstrapDigitalocean_k8s_coreos_nodeSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_coreos_nodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_coreos_node.sh", size: 1110, mode: os.FileMode(493), modTime: time.Unix(1505765322, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_ubuntu_1604_masterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x41\x6f\x1b\x37\x13\xbd\xf3\x57\xbc\x4f\x12\xe0\x2f\x40\xb8\xb4\x5d\xa0\x05\x0c\xb8\x40\x92\xfa\xe0\xb6\x48\x0c\xc3\x6d\x2f\xbd\x50\xe4\x68\x97\x15\x97\x5c\x90\xb3\xb2\x05\xdb\xf9\xed\x05\xa9\x95\x2c\x5d\x8a\x02\x3d\x44\x17\x69\x1e\x1f\x67\xde\x90\x6f\x28\x31\xff\x9f\x1a\x73\x52\x4b\x17\x14\x85\x0d\x96\x3a\x77\x22\x13\x43\x92\x30\x16\x5f\x85\x98\x43\x7e\xa3\x8f\x98\xe3\xa1\xa3\x4c\xd8\x68\x3f\x52\x86\x4e\x04\x17\xfe\x22\xc3\x64\xe1\x02\x47\x70\x47\xc8\x26\xb9\x81\x1b\xfc\x41\x95\x40\x4f\x83\x77\xc6\xb1\xdf\x22\x44\xc6\x98\x5d\x68\xa1\xc1\xd4\x0f\x5e\x73\x09\xbc\x0e\xed\xa8\x5b\x02\xc7\x29\x5d\xcd\xb3\x2b\x22\xe6\xd0\xb9\xac\x50\x30\x71\x4c\x95\xd6\x11\xc6\x4c\xa9\xa0\xde\xf5\xae\xd2\x5d\x2a\x18\xe2\xea\x24\x73\x6c\x9d\x81\x0b\x85\x90\x09\x2b\xe7\x29\x37\xf8\xb8\x85\xa5\xec\xda\x00\xed\xfd\x5b\x03\x53\x53\xb9\x8b\xa3\xb7\x62\x8e\x25\x41\x2f\x7d\x55\xb5\x24\x94\x2b\xd0\x8c\x34\x06\x76\x3d\xbd\x87\x0e\x76\xd7\x6d\x47\xde\x4f\x3d\x23\x91\xf6\x78\x8c\x69\xdd\xe0\x76\x85\x6d\x1c\x11\x88\x2c\x4c\x0c\xd6\xb1\x8b\x41\xfb\x9d\xa4\xf7\x78\x4c\x8e\x09\x8e\x8b\xb8\x7a\xc5\x73\xc4\x84\x5e\xaf\x09\x3a\x44\xee\x28\x9d\x64\x6e\xc4\x5c\xcc\xc5\xc3\x97\x5f\x6e\x3e\x5f\xcf\x6e\x3f\xff\x7c\xf3\xe9\xe1\xe6\xa7\x1a\xce\xc4\xdd\x97\xfb\x87\x37\xb0\x44\xb3\xca\xfe\x86\x3e\x11\x77\xf7\xb7\xbf\x7f\x78\xb8\xb9\xbd\xbb\x5e\xfc\xdf\xad\x4c\x0c\x2b\xd7\xe2\x05\x6d\xa2\x01\xf2\x03\x2e\x30\xe3\x31\x9c\xcf\xf6\x90\x0b\xc4\xc0\x0b\xcc\xc8\x90\x16\xb3\xab\x19\xe4\x0a\x97\x47\x08\x2a\x72\xf1\x4e\x90\xe9\x22\x16\x87\xfc\xf8\x11\x8a\xfb\x41\x35\x6e\x10\x77\xbf\x7d\xfc\xf5\xf6\x53\xad\x69\xc6\xe4\xb1\x2f\xdc\xf4\xf4\x4e\x88\x0a\xc9\x8c\x8e\x79\xc8\x57\x4a\x0d\xda\xac\x75\x4b\xb9\x31\x3e\x8e\xb6\x69\x63\x6c\x3d\x35\x26\xf6\x4a\x0f\xac\x6c\x34\xe5\x5b\xae\x69\xdb\xb4\x43\xd1\x9e\x47\x1b\x31\x41\xd0\xd6\x42\x0a\x8e\xa3\xe9\xa0\x88\x2b\x57\xe5\x38\x26\x43\xb9\xf1\x2e\x73\x63\xd5\x7a\x5c\x52\x0a\xc4\x13\x22\x72\x07\x69\x70\x56\x1b\x98\x59\x5a\x56\x25\x57\xaa\x6c\x6d\x8e\xb8\x2e\x2a\xbc\x85\xf2\x89\x82\xd3\x1e\xbd\x76\x61\x56\x9a\xfd\x77\xc5\xce\x84\x28\x52\x5b\x62\x8c\x83\xd5\x4c\x90\xdb\x03\xe2\x42\xe6\xe2\x7c\xb9\xc5\x9f\x02\x00\x72\x34\x9a\xa7\xdf\xb4\xe4\xe2\xfa\x3c\x85\x36\x9a\x35\xa5\xc6\xc5\x29\x2e\x39\x38\xe9\x90\x87\x98\x58\xd6\xb3\x9c\x56\x8a\x02\x4f\x7c\x14\x69\xdb\x5f\x5f\x34\x3f\x34\xe7\xf2\xfc\x7c\x82\xeb\x59\xcb\x91\x9d\xcf\x42\x88\xbc\xcd\x4c\xbd\x61\x0f\x0a\x75\xd4\x76\xd5\x8e\xf0\xcc\x3a\xf1\x1e\x3e\x75\xd5\x50\x2e\xa1\x4c\x49\x7c\x84\xa5\x0d\x8a\xa1\xf0\x02\xfd\xb8\xc6\x99\xaa\x86\x52\x78\x1e\x92\x0b\x8c\xc5\xe5\xeb\xd9\xc1\x4b\x33\x55\xac\xf4\x5f\x9c\x34\xf5\x86\x44\x99\xf8\x10\xb9\xe0\x18\x52\xea\xc1\x65\x4a\x1b\x4a\x72\xe9\x82\x95\xe5\x98\xb0\x78\x2e\x53\xf9\x0a\x29\x39\xae\x29\x60\xf1\x5c\x47\xf7\x15\x27\x7c\x6d\x37\x94\xd8\x65\x92\xa5\x31\xca\xb9\xec\x9b\x84\xbc\x9e\x30\x0d\x25\x96\xf4\xc4\x49\xcb\xac\xc3\x29\x6f\xf1\x7c\xe8\xe8\x55\xec\xb4\x96\x83\xd4\xc3\xe0\x77\xd7\x2d\x57\x7b\xe3\xd9\x68\x72\x33\xa4\x58\xde\x3f\xa3\xbd\x33\xb1\x89\xa9\x55\x9b\xcb\xe6\x3b\xd5\x12\x97\x17\x54\xd6\x0b\xa0\x63\x7f\xa9\xc9\x3e\xba\x3c\x68\xaa\x8b\x79\xbf\xac\x6d\xaf\x2e\x9a\xef\xd5\x94\x6a\xab\x7b\xbf\x2b\x28\xab\x88\xdd\x1b\x50\xfd\x7b\x94\x4c\xdb\xde\x85\xa6\x2c\x96\x3f\xb6\xfb\x18\x59\xf4\x6b\xeb\x12\xe4\x80\xaf\xaa\xce\x85\x30\xc3\x3f\x6c\xdb\xb3\xd4\xae\x80\x10\x7f\x07\x00\x00\xff\xff\x70\x8f\xcc\x07\x41\x07\x00\x00")

func bootstrapDigitalocean_k8s_ubuntu_1604_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_ubuntu_1604_masterSh,
		"bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh",
	)
}

func bootstrapDigitalocean_k8s_ubuntu_1604_masterSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_ubuntu_1604_masterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh", size: 1857, mode: os.FileMode(493), modTime: time.Unix(1503262845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x52\x4d\x4f\xdc\x4a\x10\xbc\xfb\x57\xd4\x5b\x23\x71\xc1\x36\xef\xf4\x24\x24\x9e\x94\x8f\x3d\x90\x28\x44\x4a\x56\xca\x25\x97\xf1\x4c\x63\x0f\x3b\x9e\xb6\xa6\x7b\x80\x15\x21\xbf\x3d\xf2\x07\x02\x92\x4b\x6e\xf8\x62\x57\x75\x77\x4d\xb5\xa7\x8a\xf2\x9f\x26\x4b\x6a\x5a\x1f\x1b\x8a\x37\x68\x8d\xf4\x85\x90\xa2\xa2\xc2\x3a\xfc\x2c\x8a\x12\xd5\x2b\x3d\x45\x89\x5d\x4f\x42\xb8\x31\x21\x93\xc0\x24\x82\x8f\xd7\x64\x95\x1c\x7c\x54\x86\xf6\x04\xb1\xc9\x8f\x5a\xe3\x1b\xcd\x0d\x74\x37\x06\x6f\xbd\x86\x03\x22\x2b\xb2\xf8\xd8\xc1\x40\x69\x18\x83\xd1\x09\x04\x13\xbb\x6c\x3a\x82\xf2\x2a\x37\xeb\x2c\x87\x14\x25\x8c\x4c\x15\x8a\x96\x73\x9a\xdb\x7a\x42\x16\x4a\x13\x1b\xfc\xe0\xe7\x76\x9f\x26\x0e\x7c\xf5\x42\x99\x3b\x6f\xe1\xe3\xd4\x20\x84\x2b\x1f\x48\x6a\xbc\x3d\xc0\x91\xf8\x2e\xc2\x84\xf0\xb4\xc0\xba\x94\xf4\x9c\x83\x2b\x4a\xb4\x04\xd3\x86\xd9\x55\x4b\x98\xae\xc0\x28\x52\x8e\xea\x07\x3a\x81\x89\x6e\xd9\xb6\xa7\x10\xd6\x9d\x91\xc8\x04\xdc\x72\xda\xd7\xb8\xb8\xc2\x81\x33\x22\x91\x83\xe5\xe8\xbc\x7a\x8e\x26\x2c\x96\x4e\x70\x9b\xbc\x12\xbc\x4e\xe6\xe6\x2b\x2e\xc1\x09\x83\xd9\x13\x4c\x64\xed\x29\xbd\x50\xae\x8b\xb2\x28\x8b\xdd\xe7\x8f\xdb\xcb\xf3\xcd\xc5\xe5\x87\xed\xbb\xdd\xf6\xfd\x0c\x37\xc5\xa7\x37\x5f\x77\xdb\x2f\x4f\xf4\x82\x37\xaf\x99\x93\x42\xb2\x63\xd8\x9c\x02\x2a\x41\xaf\x3a\xca\x59\xd3\x8c\xc6\xee\x4d\x47\x52\xdb\xc0\xd9\xd5\x1d\x73\x17\xa8\xb6\x3c\x34\x66\xd4\xc6\xb1\x9d\xde\xd5\x9e\x0e\x75\x37\x76\xf8\x81\x59\x64\xa5\x60\x9c\x43\xb5\xe8\x2a\x67\xdb\xa3\x21\x9d\x07\x1a\xe1\x9c\x2c\x49\x1d\xbc\x68\xed\x9a\x7d\x6e\x29\x45\xd2\x95\x59\x46\xa4\x47\x65\x71\x4c\xb6\x67\x6c\x1c\xb5\xb3\xa7\xb3\x66\x9a\xaf\x9f\x0d\x78\x6e\xf0\x04\xab\x3b\x8a\xde\x04\x0c\xc6\xc7\x0d\xfe\xff\xdb\x13\x8f\xd7\xf5\x27\xe7\x1d\x29\xf2\xe8\x8c\x12\xaa\xc3\x4b\xda\x47\xd1\x29\x7f\xd5\x01\xdf\x0b\x00\x10\xb6\x46\xd7\x6f\x6a\x75\xca\x9e\xac\xd0\xb1\xdd\x53\xaa\x3d\xaf\x78\xd2\xd0\x64\xa2\x8c\x9c\xb4\x9a\xff\xef\x5a\x99\xbc\x04\xd2\x67\xc8\xb8\xe1\xfc\xdf\xfa\xbf\xfa\xb4\x3a\x3d\x5d\x9d\xc9\x41\x94\x06\xab\x01\x14\xe7\x88\x2f\xfa\xbf\x17\x45\x4d\xd2\xc7\xda\x52\xac\xb6\x8f\x9a\x48\x24\xa4\x7f\xb0\xd7\xec\x23\xaa\x4a\x79\x4f\x11\x47\xf7\x73\x44\x1f\x70\x74\xbf\x84\xf2\xa1\xf8\x15\x00\x00\xff\xff\x4c\xd3\xf9\xfb\xdf\x04\x00\x00")

func bootstrapDigitalocean_k8s_ubuntu_1604_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh,
		"bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh",
	)
}

func bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_ubuntu_1604_nodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh", size: 1247, mode: os.FileMode(493), modTime: time.Unix(1503262845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x4b\x6f\x24\x35\x10\xbe\xfb\x57\x14\x33\x91\xf6\xb2\x6e\x67\x41\x80\x14\x29\x48\xec\x12\x20\x3c\x76\xa3\x28\xc0\x85\xc3\xd6\xd8\x35\xdd\x66\xdc\x76\xcb\x55\x9e\x64\x14\xc2\x6f\x47\x76\x77\x5e\xd2\x0a\x71\x4b\x2e\x9d\xfa\xea\x73\xd5\xe7\x7a\x78\xd6\x9f\x99\xc2\xd9\x6c\x7c\x34\x14\xf7\xb0\x41\x1e\x14\x93\x80\x26\x65\x1d\xfc\xa3\xd4\x1a\xf4\x0b\xfd\xa9\x35\x5c\x0d\xc4\x04\x7b\x0c\x85\x18\x30\x13\xf8\xf8\x17\x59\x21\x07\x3e\x4a\x02\x19\x08\xd8\x66\x3f\x49\x07\x7f\x50\x23\xd0\xcd\x14\xbc\xf5\x12\x0e\x10\x93\x40\x61\x1f\x7b\x40\x10\x1a\xa7\x80\x52\x8d\x80\xb1\x2f\xd8\x13\x48\x5a\xc2\xb5\x38\x73\x12\xb5\x06\xe4\xea\xa1\x68\x53\xc9\x8d\x36\x10\x14\xa6\x5c\xd1\xe0\x47\xdf\xe8\x3e\x57\x0c\xd2\xf6\x59\xe4\xd4\x7b\x0b\x3e\x56\x02\x13\x6c\x7d\x20\xee\xe0\xed\x01\x1c\xb1\xef\x23\x60\x08\x8f\x17\x58\x2e\xc5\x43\x2a\xc1\xa9\x35\x6c\x08\x70\x13\x9a\xaa\x0d\x41\x6d\x01\x0a\xe4\x12\xc5\x8f\xf4\x1a\x30\xba\xf9\xb6\x03\x85\xb0\xdc\x19\x32\x61\x80\xeb\x94\x77\x1d\x9c\x6f\xe1\x90\x0a\x44\x22\x07\x36\x45\xe7\xc5\xa7\x88\x61\x96\xf4\x1a\xae\xb3\x17\x02\x2f\x55\x5c\x6b\xf1\x1a\x52\x86\x11\x77\x04\x18\x93\x0c\x94\x9f\x45\xee\xd4\x5a\xad\xd5\xd5\x87\x9f\xcf\xde\x9f\xae\xce\xdf\xff\x74\xf6\xee\xea\xec\xbb\x66\xae\xd4\xc5\x87\xcb\xab\x47\xb0\x5a\xab\xc6\x7e\xc1\x39\x51\xb6\xe4\x00\x9a\x61\x10\x99\xf8\xc4\x98\x09\xed\x0e\x7b\xe2\xce\x86\x54\x5c\xd7\xa7\xd4\x07\xea\x6c\x1a\x0d\x4e\x62\x5c\xb2\xf5\xab\x77\x74\xe8\xfa\xa9\x87\xbf\x81\x8b\x4b\xb0\x40\x80\xce\x81\x56\x92\x8a\x1d\xc0\x90\x34\xae\xe1\x54\xb2\x25\xee\x82\x67\xe9\x9c\xd9\x95\x0d\xe5\x48\xb2\x20\x8a\x07\xd0\x16\x5e\x91\x1d\x12\xac\x1c\x6d\x9a\x92\x13\x53\x8f\x76\x4f\xb8\x3e\x19\x78\x34\xf5\x0d\x45\x8f\x01\x46\xf4\x71\x05\xdf\xfc\xdf\x64\xaf\x94\xaa\x52\x7b\x12\x28\x93\x43\x21\xd0\x87\x07\xc4\x47\x96\x3a\x66\xfa\x00\x7f\x2a\x00\x00\x4e\x16\x65\xf9\x9f\x36\x52\x47\x8c\x17\xd3\x25\xbb\xa3\xdc\xf9\xb4\xd8\x35\x86\x64\x8c\x3c\xa5\x2c\xba\xd5\x72\xf1\x54\x05\x81\xe4\x89\x85\x6e\x3c\x7d\xd3\x7d\xdd\x1d\xeb\xe3\xe3\x05\x6e\xb5\xd6\x45\x7c\x60\xa5\x14\x1f\x58\x68\xb4\x12\x80\x62\x9b\xeb\x39\xdb\x13\x9c\x05\xb3\xdc\xc3\xea\xe2\xf2\xfc\xf7\x6f\xaf\xce\xce\x2f\x4e\x3f\xce\xdd\xd4\x99\x24\x1f\xe0\x4b\xd0\xbc\xfd\x11\x56\xbf\x92\xa0\x43\x41\xfd\x7d\xc0\x7d\xca\x27\xf0\x43\x6b\xea\x0a\x56\x4b\xa9\xc7\x85\x60\x6c\x1a\xa7\x22\x74\x7f\xc0\xec\xdf\x98\x56\x95\x68\xc9\x44\x92\xba\x2f\xda\x47\xa1\xbc\x45\x4b\x6c\x8e\x8d\x9f\x56\x1f\x55\x6b\xdd\xd1\x83\x8a\xda\x0e\x19\x27\xd3\xf9\x49\x5d\xfc\xf6\xf6\x97\xf3\x77\x2f\xa1\x0c\xad\x25\x66\x6d\x53\xdc\xfa\xbe\x02\x74\x23\x94\x23\x06\xdd\x34\xab\xa5\x13\x90\x89\x49\x1e\x2c\x1f\xbd\x80\xd6\x38\x79\xa6\xbc\xa7\xac\x37\x3e\x3a\x5d\x9b\x0a\x47\xb7\x75\x61\xef\x40\x6b\x49\x3b\x8a\x70\x74\xdb\xb6\xfa\x0e\x9e\xf1\xd1\xed\x29\x8b\x67\xd2\xe8\x5c\x26\xe6\x7a\x6e\x29\xc2\xdd\x33\xa6\xa5\x2c\x9a\x6e\x24\xa3\x66\x8c\xcf\x79\x47\xb7\x0f\xd5\xbc\x53\xb3\xd6\xda\x76\x9c\xa6\x30\x0f\xa7\xde\xde\xaf\x89\x4b\x96\xbb\x29\xa7\xfa\x34\x5a\x0c\xde\xa6\x2e\xe5\xde\xec\x3f\xef\xbe\x30\x3d\x49\x7d\x5c\x75\x1b\x17\x7a\xba\x0d\x66\x19\x76\xac\x6f\x9d\x19\x12\xdf\xbb\xd1\x8d\xe6\x4d\xf7\x95\x59\x42\x1d\x70\x0c\x73\x42\xdd\x44\xb4\x6a\xce\xdb\xf6\x24\x18\xba\xd1\xc7\xae\x3a\xeb\x6f\xde\x65\x4a\xa2\xc6\x9d\xf3\x19\xf4\x04\x66\x48\x23\x99\xb2\x29\x51\x8a\x69\x0b\xad\xec\xf4\x1f\x11\x3e\x71\xc0\xcc\x69\x95\x1d\xd2\x75\x04\x7d\x09\xb3\xf3\x64\xfe\x7c\x2a\xc3\xbf\x01\x00\x00\xff\xff\xb8\x02\x30\xbc\x9a\x07\x00\x00")

func bootstrapGoogle_compute_k8s_ubuntu_1604_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh,
		"bootstrap/google_compute_k8s_ubuntu_16.04_master.sh",
	)
}

func bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh() (*asset, error) {
	bytes, err := bootstrapGoogle_compute_k8s_ubuntu_1604_masterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/google_compute_k8s_ubuntu_16.04_master.sh", size: 1946, mode: os.FileMode(493), modTime: time.Unix(1503262845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x52\x4d\x4f\xdc\x4a\x10\xbc\xfb\x57\xd4\x5b\x23\x71\xc1\x36\xef\xf4\x24\x24\x9e\x94\x8f\x3d\x90\x28\x44\x4a\x56\xca\x25\x97\xf1\x4c\x63\x0f\x3b\x9e\xb6\xa6\x7b\x80\x15\x21\xbf\x3d\xf2\x07\x02\x92\x4b\x6e\xf8\x62\x57\x75\x77\x4d\xb5\xa7\xca\x7f\x9a\x2c\xa9\x69\x7d\x6c\x28\xde\xa0\x35\xd2\x17\x42\x8a\x8a\x0a\xeb\xf0\xb3\x28\x4a\x54\xaf\xf4\x14\x25\x76\x3d\x09\xe1\xc6\x84\x4c\x02\x93\x08\x3e\x5e\x93\x55\x72\xf0\x51\x19\xda\x13\xc4\x26\x3f\x6a\x8d\x6f\x34\x37\xd0\xdd\x18\xbc\xf5\x1a\x0e\x88\xac\xc8\xe2\x63\x07\x03\xa5\x61\x0c\x46\x27\x10\x4c\xec\xb2\xe9\x08\xca\xab\xdc\xac\xb3\x1c\x52\x94\x30\x32\x55\x28\x5a\xce\x69\x6e\xeb\x09\x59\x28\x4d\x6c\xf0\x83\x9f\xdb\x7d\x9a\x38\xf0\xd5\x0b\x65\xee\xbc\x85\x8f\x53\x83\x10\xae\x7c\x20\xa9\xf1\xf6\x00\x47\xe2\xbb\x08\x13\xc2\xd3\x02\xeb\x52\xd2\x73\x0e\xae\x28\xd1\x12\x4c\x1b\x66\x57\x2d\x61\xba\x02\xa3\x48\x39\xaa\x1f\xe8\x04\x26\xba\x65\xdb\x9e\x42\x58\x77\x46\x22\x13\x70\xcb\x69\x5f\xe3\xe2\x0a\x07\xce\x88\x44\x0e\x96\xa3\xf3\xea\x39\x9a\xb0\x58\x3a\xc1\x6d\xf2\x4a\xf0\x3a\x99\x9b\xaf\xb8\x04\x27\x0c\x66\x4f\x30\x91\xb5\xa7\xf4\x42\xb9\x2e\xca\xa2\x2c\x76\x9f\x3f\x6e\x2f\xcf\x37\x17\x97\x1f\xb6\xef\x76\xdb\xf7\x33\xdc\x14\x9f\xde\x7c\xdd\x6d\xbf\x3c\xd1\x0b\xde\xbc\x66\x4e\x0a\xc9\x8e\x61\x73\x0a\xa8\x04\xbd\xea\x28\x67\x4d\x33\x1a\xbb\x37\x1d\x49\x6d\x03\x67\x57\x77\xcc\x5d\xa0\xda\xf2\xd0\x98\x51\x1b\xc7\x76\x7a\x57\x7b\x3a\xd4\xdd\xd8\xe1\x07\x66\x91\x95\x82\x71\x0e\xd5\xa2\xab\x9c\x6d\x8f\x86\x74\x1e\x68\x84\x73\xb2\x24\x75\xf0\xa2\xb5\x6b\xf6\xb9\xa5\x14\x49\x57\x66\x19\x91\x1e\x95\xc5\x31\xd9\x9e\xb1\x71\xd4\xce\x9e\xce\x9a\x69\xbe\x7e\x36\xe0\xb9\xc1\x13\xac\xee\x28\x7a\x13\x30\x18\x1f\x37\xf8\xff\x6f\x4f\x3c\x5e\xd7\x9f\x9c\x77\xa4\xc8\xa3\x33\x4a\xa8\x0e\x2f\x69\x1f\x45\xa7\xfc\x55\x07\x7c\x2f\x00\x40\xd8\x1a\x5d\xbf\xa9\xd5\x29\x7b\xb2\x42\xc7\x76\x4f\xa9\xf6\xbc\xe2\x49\x43\x93\x89\x32\x72\xd2\x6a\xfe\xbf\x6b\x65\xf2\x12\x48\x9f\x21\xe3\x86\xf3\x7f\xeb\xff\xea\xd3\xea\xf4\x74\x75\x26\x07\x51\x1a\xac\x06\x50\x9c\x23\xbe\xe8\xff\x5e\x14\x35\x49\x1f\x6b\x4b\xb1\xda\x3e\x6a\x22\x91\x90\xfe\xc1\x5e\xb3\x8f\xa8\x2a\xe5\x3d\x45\x1c\xdd\xcf\x11\x7d\xc0\xd1\xfd\x12\xca\x87\xe2\x57\x00\x00\x00\xff\xff\x5d\x1a\x39\xc2\xde\x04\x00\x00")

func bootstrapGoogle_compute_k8s_ubuntu_1604_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh,
		"bootstrap/google_compute_k8s_ubuntu_16.04_node.sh",
	)
}

func bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh() (*asset, error) {
	bytes, err := bootstrapGoogle_compute_k8s_ubuntu_1604_nodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/google_compute_k8s_ubuntu_16.04_node.sh", size: 1246, mode: os.FileMode(493), modTime: time.Unix(1503262845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapInjectGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xd1\x6a\xdb\x30\x18\x85\xaf\xa3\xa7\x38\xe4\x2a\x01\xcf\x6e\x7b\x33\xe8\xd8\x85\xd7\x76\xcc\xb4\x24\x10\xa7\x2b\xa5\xf4\x42\x96\xff\xd8\x5a\x1d\x49\x93\x7e\xd7\x0d\xa5\x0f\xb4\xd7\xd8\x93\x0d\x25\xce\x58\x99\x6f\x0c\xfa\xcf\xf9\x74\xce\xaf\x2c\xc3\x85\x75\x3b\xaf\x9b\x96\xf1\xfb\x17\xce\x4e\x4e\x3f\x62\xdd\x12\xae\xfb\x4a\x2b\xeb\x0d\xf2\x9e\x5b\xeb\x83\xc8\x32\x91\x65\xb8\xd1\x8a\x4c\xa0\x1a\xbd\xa9\xc9\x83\x5b\x42\xee\xa4\x6a\xe9\x38\x49\xf0\x9d\x7c\xd0\xd6\xe0\x2c\x3d\xc1\x2c\x0a\xa6\xe3\x68\x3a\xff\x14\x11\x3b\xdb\x63\x2b\x77\x30\x96\xd1\x07\x02\xb7\x3a\x60\xa3\x3b\x02\xbd\x28\x72\x0c\x6d\xa0\xec\xd6\x75\x5a\x1a\x45\x18\x34\xb7\xfb\x7b\x46\x4a\x1a\x19\xf7\x23\xc3\x56\x2c\xb5\x81\x84\xb2\x6e\x07\xbb\xf9\x57\x08\xc9\x63\xe8\xf8\xb5\xcc\xee\x3c\xcb\x86\x61\x48\xe5\x3e\x70\x6a\x7d\x93\x75\x07\x69\xc8\x6e\x8a\x8b\xab\x45\x79\xf5\xe1\x2c\x3d\x19\x4d\xb7\xa6\xa3\x10\xe0\xe9\x67\xaf\x3d\xd5\xa8\x76\x90\xce\x75\x5a\xc9\xaa\x23\x74\x72\x80\xf5\x90\x8d\x27\xaa\xc1\x36\x86\x1e\xbc\x66\x6d\x9a\x04\xc1\x6e\x78\x90\x9e\x22\xa6\xd6\x81\xbd\xae\x7a\x7e\xb7\xb3\x63\x44\x1d\xde\x09\xac\x81\x34\x98\xe6\x25\x8a\x72\x8a\x2f\x79\x59\x94\x49\x84\xdc\x15\xeb\x6f\xcb\xdb\x35\xee\xf2\xd5\x2a\x5f\xac\x8b\xab\x12\xcb\x15\x2e\x96\x8b\xcb\x62\x5d\x2c\x17\x25\x96\x5f\x91\x2f\xee\x71\x5d\x2c\x2e\x13\x90\xe6\x96\x3c\xe8\xc5\xf9\xd8\xc0\x7a\xe8\xb8\x4d\xaa\xf7\xab\x2b\x89\xde\x45\xd8\xd8\x43\xa4\xe0\x48\xe9\x8d\x56\xe8\xa4\x69\x7a\xd9\x10\x1a\xfb\x4c\xde\x68\xd3\xc0\x91\xdf\xea\x10\x5f\x35\x40\x9a\x3a\x62\x3a\xbd\xd5\x2c\x79\x7f\xf4\x5f\xaf\x54\x08\x27\xd5\x53\x84\x54\xd6\x72\x60\x2f\x9d\x10\x7a\xeb\xac\x67\x4c\x63\x5f\xd3\x84\xa9\x10\x9b\xde\x28\x14\xe6\x07\x29\x9e\xd5\x92\x25\x1e\x1e\xab\x1d\x53\x82\x67\xd9\xf5\x14\xb0\x95\xee\xe1\xa0\x7e\x3c\xfc\xe6\x98\x1d\x25\xe4\xbd\xf5\x73\xbc\x8a\x49\x60\x7f\x19\xcd\xe7\x9f\x71\x50\xed\x59\x73\x31\x89\xd5\x9e\x12\x3c\xc7\x89\x97\xa6\xa1\x23\xf7\x55\x4c\xfe\xba\x8e\xa6\x90\xae\xc8\x75\x52\xd1\x6c\x9c\x24\x7b\x6f\x82\xd3\xb9\x98\xbc\x89\x89\x27\xee\xbd\x19\x13\x1e\x35\xf3\x04\x46\x77\xe2\x4d\xfc\x09\x00\x00\xff\xff\xbc\x34\x80\x62\x48\x03\x00\x00")

func bootstrapInjectGoBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapInjectGo,
		"bootstrap/inject.go",
	)
}

func bootstrapInjectGo() (*asset, error) {
	bytes, err := bootstrapInjectGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/inject.go", size: 840, mode: os.FileMode(493), modTime: time.Unix(1502556412, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnMeshbirdmasterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x3d\x4b\xc4\x40\x10\xc6\xf1\x7e\x3e\xc5\xe3\xdd\x71\x68\x91\x4c\x65\x23\x68\x21\x1e\x28\x12\x11\x05\xc1\x4a\x92\xcd\xe8\xae\x6e\x76\xc3\xce\xc4\x17\x08\x7e\x76\x11\x14\x63\x39\xfc\x99\x1f\xcf\x7a\x8f\x27\x2d\xdc\x85\xc4\x92\x5e\xd1\xb5\xea\x49\xc5\x50\x09\xb9\x1e\x9f\x44\x6b\xdc\x5d\x5f\xa1\x11\xf5\xe4\xa6\x12\xe1\xcd\xc6\x23\xe6\x41\xd4\x77\xa1\xf4\xb5\xcb\x03\x87\xa4\xd6\xc6\x58\xab\xc7\x0c\xf5\xf4\x1b\x91\xe4\x0d\xdb\x13\xb0\x0d\x23\xc7\xfc\xf4\x22\x1f\xd4\xec\x6e\xcf\x4f\x2f\x6e\xce\x1e\x2e\x77\xf7\xc7\x9b\x7d\xd7\xda\x32\x63\x86\x9b\x0c\x55\x8f\x15\x56\xa8\x1e\x71\x78\x40\xe2\x7c\xc6\x66\xf9\x87\x1f\xb2\xfe\x06\xe5\x7d\xcc\xc5\xf0\xdf\x5d\x5e\x7f\x73\x9e\x73\x48\xd8\xd2\x57\x00\x00\x00\xff\xff\xda\xd3\x92\x18\xf4\x00\x00\x00")

func bootstrapVpnMeshbirdmasterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnMeshbirdmasterSh,
		"bootstrap/vpn/meshbirdMaster.sh",
	)
}

func bootstrapVpnMeshbirdmasterSh() (*asset, error) {
	bytes, err := bootstrapVpnMeshbirdmasterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/vpn/meshbirdMaster.sh", size: 244, mode: os.FileMode(493), modTime: time.Unix(1502556264, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnMeshbirdnodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\x41\x6f\xd4\x30\x10\x85\xef\xfe\x15\x8f\x06\x71\x6a\x93\x3b\x12\x97\xd2\x95\x58\xaa\x56\x08\x2a\x50\x4f\xc8\x71\x66\xe3\x69\x9d\x71\xe4\x19\xb7\x5d\x09\xf1\xdb\x51\xb2\x8b\x60\x7f\x41\x73\x9b\x97\xe7\xe7\xf7\x69\xdc\xbc\xe9\xaa\x96\xae\x67\xe9\x48\x9e\xd0\x7b\x8d\x4e\xc9\x70\x41\x2e\x0c\xf8\xed\x5c\x83\x8b\x57\xfa\x5c\x83\xbb\x48\x4a\x78\xf2\xa9\x92\xc2\x17\x02\xcb\x03\x05\xa3\x01\x2c\x96\x61\x91\xa0\xa1\xf0\x6c\x2d\x7e\xd0\x6a\xa0\x97\x39\x71\x60\x4b\x7b\x48\x36\x54\x65\x19\xe1\x61\x34\xcd\xc9\xdb\x32\x24\x2f\x63\xf5\x23\xc1\xf2\x31\x6e\xcd\x39\x5c\xe2\x1a\x78\x5d\xfe\x90\x84\x5c\xcb\x6a\x8b\x84\xaa\x54\x16\x35\xf1\xc4\xab\x9d\xcb\xa2\x21\xef\x4e\x92\xf3\xc8\x01\x2c\x8b\x41\x09\x3b\x4e\xa4\x2d\x2e\xf7\x18\x48\x79\x14\xf8\x94\xfe\x01\x1c\xa1\x34\xe6\x9a\x06\xd7\xa0\x27\xf8\x3e\xad\xad\x7a\xc2\xb2\x02\x6f\x28\x55\x8c\x27\x3a\x87\x97\xe1\x40\x1b\x29\xa5\x23\x33\x0a\xf9\x84\xe7\x5c\x1e\x5b\x6c\x77\xd8\xe7\x0a\x21\x1a\x10\xb2\x0c\x6c\x9c\xc5\xa7\x43\xa5\x73\x3c\x17\x36\x02\xdb\x52\x6e\x5d\x71\x83\x5c\x30\xf9\x47\x82\x97\x6c\x91\xca\x49\x72\xeb\x1a\xd7\xb8\x9b\xcd\xb7\x4f\x97\xdb\xaf\x57\x3f\xaf\x37\xf7\x1f\xce\xb6\xb7\x9f\x37\x1f\xef\x36\x57\x8b\x7a\xbd\xb9\x3f\x7b\xcd\x87\xe1\x1a\x7c\xff\x72\x8b\x1b\xd2\xe8\x42\x2d\x09\xd1\x6c\x7e\xdf\x75\x13\x69\xec\xb9\x0c\x6d\xc8\x53\xc7\xa2\xe6\x53\x6a\x35\xe2\x17\x34\x3a\x7a\x99\x73\x31\x9c\x50\xbd\xfd\x7f\x72\x7f\x8f\xe3\x21\xb3\xe0\x9d\xfb\x13\x00\x00\xff\xff\x85\xc7\x28\xe5\x1c\x03\x00\x00")

func bootstrapVpnMeshbirdnodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnMeshbirdnodeSh,
		"bootstrap/vpn/meshbirdNode.sh",
	)
}

func bootstrapVpnMeshbirdnodeSh() (*asset, error) {
	bytes, err := bootstrapVpnMeshbirdnodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/vpn/meshbirdNode.sh", size: 796, mode: os.FileMode(493), modTime: time.Unix(1502556412, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnOpenvpnmasterCentosSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xe1\x6f\xe2\xc6\x12\xff\xee\xbf\x62\x9e\x89\xd4\x3b\x54\x7b\x43\x5e\xda\xd7\x5e\x43\x54\x8e\xf2\xf2\xd0\xf5\x02\x4a\xe0\xaa\x93\x90\xa2\x65\x3d\xe0\x2d\xf6\xae\xb5\xbb\x26\xb1\xa2\xf4\x6f\x7f\xda\xb5\x21\x18\x48\x02\xed\x87\xe3\x0b\xf6\xcc\xec\x6f\x7e\xb3\x3b\x33\x3b\x6e\xfc\x8b\xe4\x5a\x91\x29\x17\x04\xc5\x12\xa6\x54\xc7\x9e\x46\x03\x01\x7a\x2c\x82\xbf\x3c\xaf\x01\xc1\x37\xfa\x79\x0d\x18\xc5\xa8\x11\x96\x34\xc9\x51\x03\x55\x08\x5c\xfc\x89\xcc\x60\x04\x5c\x18\x09\x26\x46\xd0\x4c\xf1\xcc\x84\xf0\x07\x3a\x03\x7c\xc8\x12\xce\xb8\x49\x0a\x10\xd2\x40\xae\xb9\x98\x03\x05\x83\x69\x96\x50\x63\x5f\x12\x2a\xe6\x39\x9d\x23\x18\x59\xc1\x39\x9c\xd2\x89\xd7\x00\xaa\xad\x06\x05\x93\xb9\x72\x66\x31\x42\xae\x51\x59\x69\xc2\x53\xee\xcc\xb9\xb2\x32\x90\xb3\x1a\xb2\x9c\x73\x06\x5c\x58\x03\x8d\x30\xe3\x09\xea\x10\x3e\x16\x10\xa1\xe6\x73\x01\x34\x49\x9e\x03\xa8\x82\xd2\xb1\xcc\x93\xc8\x6b\xc0\x14\x81\x4e\x13\xc7\x6a\x8a\x60\x8f\x80\x1a\x50\xb9\x30\x3c\xc5\xef\x81\x8a\xa8\x8c\x36\xc6\x24\xa9\x62\x06\x85\x34\x81\x7b\xa9\x16\x21\xf4\x67\x50\xc8\x1c\x04\x62\x04\x4c\x8a\x88\x1b\x2e\x05\x4d\x4a\x4a\xdf\xc3\xbd\xe2\x06\x81\x1b\x4b\xce\x1d\x71\x03\xa4\x82\x94\x2e\x10\xa8\x90\x26\x46\x55\x43\x0e\xbd\x86\xd7\xf0\x06\xc3\xde\xf5\x97\xe1\xf5\xdd\xa7\xde\xd7\xee\x60\x7c\x3d\xba\xf9\xda\xf6\xc7\xb7\xfe\xa6\x7c\x78\x33\xf8\xd2\xbf\xee\xf6\xda\xfe\x1f\x9d\x9a\xa2\xdb\x1f\x7d\x6d\xfb\xb7\x48\x8d\x49\xb0\xa6\x19\xdc\x5c\xb5\xfd\x4f\xf9\x94\x33\xa9\x44\x4d\xd3\xfb\xdc\xe9\xff\xde\xf6\x95\x94\xe6\xd7\x44\x32\x9a\xc4\x52\x9b\xfa\xda\xf1\x0b\x4b\xaf\x3b\x9f\x7b\x6d\x5f\xa3\x5a\xa2\xf2\xbf\x65\xca\x7a\xc3\x9b\xfe\x97\xce\xa8\x77\xd7\x1f\xb6\x4f\xde\xb1\x5c\x25\x10\x1b\x93\x7d\x20\xa4\xf5\xe3\xcf\xe1\xd9\x0f\xe7\x61\xf5\x4f\x52\x34\x34\xa2\x86\x92\x65\x8b\x70\x61\x50\xcd\x28\x43\x4d\x32\xc5\x97\xd4\x20\x39\x25\x3c\x5b\x9e\x13\x1a\x45\x0a\xb5\x7e\x6f\xeb\x70\x90\xa1\xf8\x32\xbc\xf6\x8a\x3c\x05\x2e\xb4\xb1\xe9\x84\x19\x26\x81\xc2\x04\xa9\x46\x08\x8a\x9a\x4e\x66\x28\x96\x99\x00\xa4\xba\x08\x94\xa6\x56\xef\xa5\x8b\x88\x2b\xf8\x8b\x54\xca\x80\x51\x8f\x65\x10\xa8\x19\xb8\x3e\xa0\x63\xaa\x90\xac\x56\x90\xb3\xf0\x94\x34\x6b\xd6\xc4\xf3\x34\x46\x10\x70\x08\x10\x7c\x4d\xf0\x21\x93\xca\xc0\xa7\xde\xd7\xbb\x2a\x49\xc2\xe6\x1e\x61\x7b\xe2\x9f\x3c\xee\x26\xd4\xd3\xc4\x27\x7e\x1d\x7f\x49\x95\x7e\xd1\xc5\x2a\xdf\xea\x3e\xd6\x59\xb8\xe5\x64\x25\x3f\xd6\x8b\x4d\xde\xad\x28\x6c\x3a\x6f\x87\xd0\x1f\x1d\xcd\x7f\x70\x73\x55\x07\xb6\xd5\xb0\x85\x3b\xb8\xb9\x3a\x16\xd6\x55\x4e\x1d\xb8\x2c\xa6\x2d\x68\x27\x3c\x9a\xf3\x78\x8b\xf2\x78\x87\xf1\xf8\x58\x4c\x5b\xaf\x75\x54\x57\xc1\x5b\xb8\x56\xf6\x12\xb2\xd7\x68\xc0\x15\x0a\x54\xd4\xd8\x6e\x69\x0b\x1f\x18\x2a\xc3\x67\x9c\x51\x83\xda\xdd\x5e\x9b\x59\xae\x65\xae\x98\x6d\xf3\x4a\x7b\x21\x61\x09\x52\x11\xd0\x24\xf1\x42\x32\xcd\x79\x12\x05\x8c\x42\x10\x4c\xa9\x61\xf1\x5a\xb4\xc0\x22\xa8\xa0\x2b\x15\xec\xf2\x5b\x5b\x47\xb1\xb7\xaa\xb8\x20\x98\xa3\x58\x60\x01\x41\xa0\x91\x29\x34\xb0\xc0\x42\x13\x43\xc3\x05\x16\x75\xea\x2c\xe1\x28\x4c\x9d\xfa\x86\xff\xb5\xe3\xd2\x6e\x2b\xee\xaa\x23\xd8\x8e\x3f\xe3\xf3\x5c\x51\xdb\xf5\x6d\x3d\xd7\xf6\xcb\xf9\x66\x34\x64\xca\xec\x57\x58\x3f\xbb\x8a\xdd\x50\x1d\xc2\xc4\x03\x80\xc3\xcc\xf7\xe3\x9a\x97\x1c\x46\xf1\xd9\xe9\xf9\x4f\x61\x86\x29\x10\x34\x6c\xa5\xb7\xf1\x6c\xf4\xa6\x48\xae\x35\xc1\x59\x78\x1e\xfe\x9b\x68\x9a\x66\x09\x56\x7f\x41\xb9\x17\x81\xbb\x7c\x49\x79\x7a\xa1\x95\xd5\x30\xf7\x06\x27\xc5\xcc\x6e\x6f\x03\x3a\xd1\x9f\xb9\x36\x30\xfa\xfd\x76\x6b\x67\x6b\xe9\x3c\xf9\xc5\x24\x3a\xa0\xb9\x89\xa1\x0a\xe9\x34\x6c\x92\x1d\x19\xf1\x0f\xf3\xbc\x81\xbd\x07\x84\xda\x0c\x0a\x22\xae\x90\x59\x26\x70\x7a\x20\xaa\x8b\xa7\x27\xdc\x64\xd1\xe9\xdd\x06\xad\xb3\x9f\x82\xee\xc7\x2e\xb0\x98\x67\xb8\x5d\xa0\x93\x5f\x18\xcf\xec\x2c\xb0\x61\x19\x36\xc9\xae\xf0\xef\xc4\xb4\x07\x85\x82\x0b\xf2\xf6\x7f\x9d\xb3\x1f\x7e\x3c\x26\xa0\x5b\x34\xe5\x48\x66\xc7\xa2\xb9\x92\x79\xb6\x1d\x88\xd3\x0a\x39\x95\x51\x11\x36\xc9\xc6\xdb\xdf\xa0\x6e\xf1\x9c\x13\x10\xd2\xfd\x87\x4d\x52\x7b\x3f\x14\xd3\x71\x1f\x0d\x7e\x1b\xbc\x7b\x48\xf3\x48\x71\xfe\xfe\x03\xcc\xb8\x88\xe0\x9e\x16\x76\xee\x9b\xaf\xea\x5a\xe0\xbd\xeb\x08\x30\x93\x0a\x70\x89\xaa\xa8\xea\x7f\xf3\x38\xa3\xdc\x4e\xba\xae\x87\x6c\x36\x8f\x2d\xe2\x6b\xab\x80\x89\xb0\x49\x36\x5f\x8f\xa0\xbd\xf2\xd9\x1f\x5a\x4a\xf7\x54\x45\x5c\xcc\xb7\x5c\x35\x04\x9a\xd0\x0e\x2d\x21\xcf\xee\x2a\xab\xb0\x49\xf6\x48\xdb\xad\x95\x6b\x5d\x68\x66\x92\x6a\xc7\xdd\x33\x04\x99\x67\x1f\x0d\xa6\xf6\x4d\x1b\xaa\xcc\x6a\x92\xf9\x75\x4f\xf7\x7d\x36\xc5\x92\xe2\x2b\xb6\x7b\x1b\x6f\xad\xc0\xdd\xfe\x76\x15\x5a\x03\x3b\x6e\x97\x05\x27\x55\x01\xda\xa8\x9c\x99\x5c\xa1\xcb\x39\x8d\xcc\x3e\x72\x53\xcd\x53\x81\x6d\xb9\x25\x62\xd5\x80\x34\x71\x1d\xc8\x63\x71\x2a\x23\xf8\xcf\xe9\xe9\x4b\x06\xce\xe5\x33\x2b\xa7\x83\x99\x92\x29\xe0\x83\xeb\x68\xfa\x9f\x34\xc0\xd2\x65\xd9\x00\x77\x08\x4c\xa9\xc6\x5a\xdb\x8b\x40\x61\x2a\x8d\x3b\xe7\x6a\xf2\xac\x1f\x72\xa5\x4e\x57\xf7\x62\xd0\x82\x56\xeb\xe7\xf3\x95\xfc\xe4\xf1\x79\xfc\x7d\x2a\x35\xfe\x9b\x6e\x6d\x31\x97\xb5\xf9\xa1\xaa\x27\x5b\x0b\x2a\x17\xeb\x81\xf7\x88\xda\x7e\xc5\xd9\x91\x15\xfd\x16\xed\xcf\xf6\xe3\x89\x9b\xea\x2b\x13\x21\xc2\x19\xcd\x93\xda\x4d\x5e\x77\xc9\x28\x94\x97\x30\x99\x34\x9e\x9f\x0f\xa7\xec\x1a\xc2\xea\x3c\x4b\x94\x2d\xc9\xe1\x58\xf6\x52\xa9\x16\x2e\xb0\x20\x93\xc6\x96\xe0\xed\xf0\xbb\x55\xdd\xe0\x1b\x57\xc9\xc3\x4b\x17\xc8\x61\x54\x0f\xb8\x36\x0e\x48\xeb\xd5\xd7\xb0\x46\x63\x3f\xd4\xb5\x87\x2c\x96\xe0\xd7\xaf\xd4\x96\x0f\x97\x97\xaf\xa1\x95\x8b\xca\x2f\xe4\xc0\x75\x00\x6e\x0a\x38\x7b\x6b\x59\xad\xeb\xd8\x41\xc7\xb3\xf3\xee\x6f\xfd\x9b\xf6\xce\x08\xe4\x0d\xc6\xa3\xe1\x78\xe4\x94\xc4\xa4\x99\xf7\xb1\x73\xdb\xbb\xeb\x0e\xae\xff\xdb\xbf\x6a\xbf\xe6\x82\x51\x03\x27\x8f\x1b\xd6\x4f\xd5\x9c\x76\xf1\xce\xb1\x0e\x10\xbe\xbb\x60\xf4\xf2\xbb\xf7\x95\xfc\xe4\xb1\x22\xf1\xb4\x9a\x0c\x77\xed\x09\xa3\x97\x13\x71\x61\xb3\x6c\xff\xc2\x72\x24\x7d\x71\xb5\x5d\x37\x11\x17\x0b\x2c\x5e\x5d\x6e\x53\x6f\xcf\x72\xbb\x6c\x22\x2e\x56\xa3\xd0\x5e\x88\x6a\x3c\xda\xb3\x7a\x77\xd9\xa5\x9d\xdd\xd7\xdb\xbb\xc1\xde\x6d\xa0\xe7\xfd\x3f\x00\x00\xff\xff\x97\x34\x71\x33\x09\x13\x00\x00")

func bootstrapVpnOpenvpnmasterCentosShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnOpenvpnmasterCentosSh,
		"bootstrap/vpn/openvpnMaster-centos.sh",
	)
}

func bootstrapVpnOpenvpnmasterCentosSh() (*asset, error) {
	bytes, err := bootstrapVpnOpenvpnmasterCentosShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/vpn/openvpnMaster-centos.sh", size: 4873, mode: os.FileMode(493), modTime: time.Unix(1502632781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnOpenvpnmasterSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5f\x6f\xda\xc8\x16\x7f\xf7\xa7\x38\xd7\x44\xda\x36\x5a\x7b\x42\x94\xdd\xbb\xdb\x0d\xd1\x52\x4a\x73\x51\xdb\x80\x12\xc8\x55\x24\xa4\x68\x18\x1f\xf0\x14\x33\x63\xcd\x8c\x49\xdc\xdc\xf4\xb3\x5f\xcd\xd8\x10\x0c\x24\x81\xee\x43\xf3\x42\x7c\xfe\xfc\xce\x39\x33\xe7\xdf\xd4\xfe\x45\x32\xad\xc8\x88\x0b\x82\x62\x0e\x23\xaa\x63\x4f\xa3\x81\x00\x3d\x16\xc1\x77\xcf\xab\x41\xf0\x93\xfe\xbc\x1a\xf4\x63\xd4\x08\x73\x9a\x64\xa8\x81\x2a\x04\x2e\xbe\x22\x33\x18\x01\x17\x46\x82\x89\x11\x34\x53\x3c\x35\x21\xfc\x17\x9d\x00\xde\xa7\x09\x67\xdc\x24\x39\x08\x69\x20\xd3\x5c\x4c\x80\x82\xc1\x59\x9a\x50\x63\x3f\x12\x2a\x26\x19\x9d\x20\x18\x59\xc2\x39\x9c\xc2\x88\x57\x03\xaa\x2d\x07\x05\x93\x99\x72\x62\x31\x42\xa6\x51\x59\x6a\xc2\x67\xdc\x89\x73\x65\x69\x20\xc7\x15\x64\x39\xe1\x0c\xb8\xb0\x02\x1a\x61\xcc\x13\xd4\x21\xbc\xcf\x21\x42\xcd\x27\x02\x68\x92\x3c\x05\x50\x06\xa5\x63\x99\x25\x91\x57\x83\x11\x02\x1d\x25\xce\xab\x11\x82\xbd\x02\x6a\x40\x65\xc2\xf0\x19\xfe\x0a\x54\x44\x45\xb4\x31\x26\x49\x19\x33\x28\xa4\x09\xdc\x49\x35\x0d\xa1\x33\x86\x5c\x66\x20\x10\x23\x60\x52\x44\xdc\x70\x29\x68\x52\xb8\xf4\x2b\xdc\x29\x6e\x10\xb8\xb1\xce\xb9\x2b\xae\x81\x54\x30\xa3\x53\x04\x2a\xa4\x89\x51\x55\x90\x43\xaf\xe6\xd5\xbc\x6e\xaf\x7d\x71\xdd\xbb\xb8\xfd\xd4\xbe\x69\x75\x07\x17\xfd\xcb\x9b\x86\x3f\xb8\xf2\x57\xe9\xbd\xcb\xee\x75\xe7\xa2\xd5\x6e\xf8\xad\x66\x85\xd1\xea\xf4\x6f\x1a\xfe\x15\x15\x1f\x15\x15\x8c\x6b\x26\x2b\xec\xee\xe5\x79\xc3\xff\x94\x8d\x38\x93\x4a\x54\x38\xed\x2f\xcd\xce\xe7\x86\xaf\xa4\x34\x7f\x27\x92\xd1\x24\x96\xda\x54\x75\x07\xcf\xa8\x5e\x34\xbf\xb4\x1b\xbe\x46\x35\x47\xe5\xff\xcc\xbc\xf5\x7a\x97\x9d\xeb\x66\xbf\x7d\xdb\xe9\x35\x0e\xde\xb0\x4c\x25\x10\x1b\x93\xbe\x23\xa4\xfe\xfb\x9f\xe1\xf1\x6f\x27\x61\xf9\x4b\x66\x68\x68\x44\x0d\x25\xf3\x3a\xe1\xc2\xa0\x1a\x53\x86\x9a\xa4\x8a\xcf\xa9\x41\x72\x44\x78\x3a\x3f\x21\x34\x8a\x14\x6a\xfd\xd6\x16\x63\x37\x45\x71\xdd\xbb\xf0\x3c\x9a\x9a\x60\x82\x06\xb2\x34\xa2\x06\x97\x9f\x5c\x68\x63\xf3\x2c\xc8\x41\xa6\x28\xe6\xa9\x00\xa4\x3a\x0f\x94\xa6\x9e\x67\x2f\x3c\x60\x34\xe2\x0a\xbe\x93\x92\x1d\x30\xea\x79\x1a\x23\x08\x38\x04\x08\xbe\x26\x78\x9f\x4a\x65\xe0\x53\xfb\xe6\xb6\xbc\xf7\xf0\x70\x0b\xb1\x31\xf4\x0f\x1e\x36\x73\xe4\x71\xe8\x13\xbf\x02\x4f\xe6\x54\xe9\x67\x4d\x2c\x52\xa8\x6a\x63\x99\x58\x6b\x46\x16\xf4\x7d\xad\xd8\x7c\x5c\x8b\xc2\x66\xe8\x7a\x08\x9d\xfe\xde\xfe\x77\x2f\xcf\xab\xc0\x36\xb7\xd7\x70\xbb\x97\xe7\xfb\xc2\xba\x3a\xa8\x02\x17\xa5\xb1\x06\xed\x88\x7b\xfb\x3c\x58\x73\x79\xb0\xe1\xf1\x60\x5f\x4c\x5b\x7d\x55\x54\x57\x8f\x6b\xb8\x96\xf6\x1c\xb2\x57\xab\xc1\x39\x0a\x54\xd4\xd8\x06\x68\xcb\x18\x18\x2a\xc3\xc7\x9c\x51\x83\xda\x0d\xa4\xd5\xb4\xd5\x32\x53\xcc\x76\x6e\xa5\xbd\x90\xb0\x04\xa9\x08\x68\x92\x78\x21\x19\x65\x3c\x89\x02\x46\x21\x08\x46\xd4\xb0\x78\x49\x9a\x62\x1e\x94\xd0\x25\x0b\x36\xfd\x5b\x4a\x47\xb1\xb7\x28\xa2\x20\x98\xa0\x98\x62\x0e\x41\xa0\x91\x29\x34\x30\xc5\x5c\x13\x43\xc3\x29\xe6\x55\xd7\x59\xc2\x51\x98\xaa\xeb\x2b\xf6\x97\x86\x0b\xb9\xb5\xb8\xcb\xfa\xb6\x4d\x7c\xcc\x27\x99\xa2\xb6\x91\x7b\x2c\xad\x9e\x97\xb3\xcd\x68\xc8\x94\xd9\xce\xb0\x76\x36\x19\x9b\xa1\x3a\x84\xa1\x07\x00\xbb\x89\x6f\xc7\x35\xcf\x19\x8c\xe2\xe3\xa3\x93\x3f\xc2\x14\x67\x40\xd0\xb0\x05\xdf\x9b\x64\xe2\x1b\x4f\x21\x60\xe0\xb6\x0f\x1d\x53\x85\x24\x92\x4b\x01\x82\xf7\x74\x96\x26\xa8\x89\x76\xbf\x41\x71\x1c\x81\x1b\xa9\xa4\xb8\xc0\xd0\xd2\xc2\xc9\x37\xf8\x1f\x18\xc4\x0a\xfe\xd6\x40\xa5\x18\xdb\xa3\xae\x41\x33\xfa\x9a\x69\x03\xfd\xcf\x57\x6b\xa7\x5c\x49\xed\xe1\x5f\x26\xd1\x01\xcd\x4c\x0c\x65\x78\x47\xe1\x21\xd9\xa0\x11\x7f\x37\xcb\x2b\xd8\x5b\x40\xa8\xcd\xa6\x20\xe2\x0a\x99\xf5\x04\x8e\x76\x44\x75\xf1\xb4\x85\x5b\x1c\x9a\xed\xab\xa0\x7e\xfc\x47\xd0\x7a\xdf\x02\x16\xf3\x14\xd7\x8b\x75\xf8\x17\xe3\xa9\x1d\xf5\x2b\x92\xe1\x21\xd9\x24\xfe\x48\x4c\x5b\x50\x28\xb8\x20\xaf\xfe\xd3\x3c\xfe\xed\xf7\x7d\x02\xba\xb2\x63\xcd\x6e\x5c\x76\xeb\x99\x28\x99\xa5\xeb\x81\x38\xae\x90\x23\x19\xe5\xe1\x21\x59\xf9\xfa\x01\xd7\x2d\x9e\x33\x02\x42\xba\xdf\xf0\x90\x54\xbe\x77\xc5\x74\xbe\xf7\xbb\x1f\xba\x6f\xee\x67\x59\xa4\x38\x7f\xfb\x0e\xc6\x5c\x44\x70\x47\x73\xbb\xd6\x4d\x16\x35\x2e\xf0\xce\x75\x07\x18\x4b\x05\x38\x47\x95\x97\xbd\x60\xf5\x3a\xa3\xcc\x2e\xb2\xae\x9f\xac\x36\x92\x35\xc7\x97\x52\x01\x13\xe1\x21\x59\xfd\xdc\xc3\xed\x85\xcd\x4e\xcf\xba\x74\x47\x55\xc4\xc5\x64\xcd\x54\x4d\xa0\x09\xed\x3a\x12\xf2\xf4\xb6\x94\x0a\x0f\xc9\x16\x6a\xa3\xbe\x30\xad\x73\xcd\x4c\x52\x9a\xd1\xb9\x36\x38\x63\x26\x01\x6d\xa8\x32\x8b\xf5\xe4\xef\x2d\xfd\xf7\x49\x14\x0b\xc7\x5e\x90\xdd\xda\x7a\x2b\x65\xed\x4e\xb5\xa5\xd0\x0a\xd8\x1d\xba\x28\x33\xa9\x72\xd0\x46\x65\xcc\x64\x0a\x5d\xa6\x69\x64\xf6\x5f\x6e\xbc\xd9\xd4\xae\x48\x81\x6d\xba\x05\x62\xd9\x7f\x34\x71\x0d\xc8\x63\xf1\x4c\x46\xf0\xef\xa3\xa3\xe7\x04\x9c\xc9\x27\xaf\x1c\x0f\xc6\x4a\xce\x60\xd1\xd8\x6c\x4b\xff\x91\xde\x57\x98\x73\x47\xba\x69\x7c\x44\x35\x56\x1a\x5d\x04\x0a\x67\xd2\xb8\x9b\x2d\xb7\xc8\xea\xb5\x96\xec\xd9\x62\x2a\x06\x75\xa8\xd7\xff\x3c\x59\xd0\x0f\x1e\x9e\x56\xd9\xc7\x82\xe3\xbf\x6a\xd6\x96\x6f\x51\x8d\xef\xca\x0a\xb2\xd9\xaf\x32\xb1\x5c\x5e\xf7\xa8\xe6\x17\x8c\xed\x59\xc3\xaf\xb9\xfd\xc5\xbe\x86\xb8\x29\x9f\x8d\x08\x11\x8e\x69\x96\x54\xe6\x78\xd5\x24\xa3\x50\x8c\x60\x32\xac\x3d\xfd\xbf\xbb\xcb\xae\x05\x2c\xee\xb3\x40\x59\xa3\xec\x8e\x65\xc7\x48\xa9\x38\xc5\x9c\x0c\x6b\x6b\x84\xd7\xc3\x6f\x95\x35\x83\xaf\x0c\x8f\xfb\xe7\x46\xc6\x6e\xae\xee\x30\x28\x76\x48\xeb\xc5\xf3\x56\xa3\xb1\x2f\x6f\xed\x21\x8b\x25\xf8\xd5\x21\x5a\xf7\xe1\xec\xec\x25\xb4\x42\xa9\x78\xf2\x06\xae\xfa\xb9\xc9\xe1\x78\x37\xb5\x2c\xad\xb6\xd7\xe2\x1d\x16\x28\xd4\x32\x99\x3b\xad\xdd\x70\x22\x79\x27\xfe\x29\x52\xa5\x07\xda\xc5\xcb\xb3\xfb\xf7\x87\xce\x65\x63\x63\x25\xf3\xba\x83\x7e\x6f\xd0\x77\x4c\x62\x66\xa9\xf7\xbe\x79\xd5\xbe\x6d\x75\x2f\x3e\x76\xce\x1b\x2f\x99\x60\xd4\xc0\xc1\xc3\x8a\xf4\x63\xb9\x37\x9e\xbe\x71\x81\x04\x08\xbf\x9c\x32\x7a\xf6\xcb\xdb\x92\x7e\xf0\x50\x3a\xf1\xb8\xd8\x54\x37\xe5\x09\xa3\x67\x43\x71\x6a\xf3\x7e\xbb\x62\xb1\x22\x3f\xab\x6d\xf5\x86\xe2\x74\x8a\xf9\x8b\xea\xb6\x18\xb6\xa8\x5b\xb5\xa1\x38\x5d\xac\x63\x5b\x21\xca\x15\x6d\x8b\xf6\xa6\xda\x99\x7d\x4b\x2c\x8f\x77\xc5\x7b\x77\x80\xff\x0f\x00\x00\xff\xff\xbe\xfd\x4d\x1a\x6a\x13\x00\x00")

func bootstrapVpnOpenvpnmasterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnOpenvpnmasterSh,
		"bootstrap/vpn/openvpnMaster.sh",
	)
}

func bootstrapVpnOpenvpnmasterSh() (*asset, error) {
	bytes, err := bootstrapVpnOpenvpnmasterShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/vpn/openvpnMaster.sh", size: 4970, mode: os.FileMode(493), modTime: time.Unix(1502632781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnOpenvpnnodeCentosSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xd1\x6e\x13\x3d\x10\x85\xef\xfd\x14\xe7\xef\xf6\xe2\x47\x6a\xd6\x14\x15\x24\x90\x8a\x80\x12\xa4\x70\x91\x46\xa8\x2a\x97\x95\xe3\x3d\xc9\x9a\x7a\xc7\x2b\x7b\x36\x25\x42\xf0\xec\x68\xb7\x41\xb4\xbc\x40\x7d\x63\xcd\xcc\xa7\xe3\x39\x9e\xa9\xfe\xb3\x43\xc9\x76\x1d\xc4\x52\x76\x58\xbb\xd2\x9a\x42\xc5\x8c\xc6\x37\xf8\x65\x4c\x85\xd9\x13\x1d\x53\xe1\xaa\x65\x21\x76\x2e\x0e\x2c\x70\x99\x08\xf2\x8d\x5e\xd9\x20\x88\x26\x68\x4b\x14\x9f\x43\xaf\x35\xbe\x72\x02\xf8\xbd\x8f\xc1\x07\x8d\x7b\x48\x52\x0c\x25\xc8\x16\x0e\xca\xae\x8f\x4e\xc7\x20\x3a\xd9\x0e\x6e\x4b\x68\x3a\xc8\x4d\x3a\xf7\x8f\x98\x0a\xae\x8c\x15\x8a\x4f\x43\x9e\xb0\x96\x18\x0a\xf3\x98\x8d\xa1\x0b\x13\x1e\xf2\x98\x43\xda\x3c\x52\x4e\xdb\xe0\x11\x64\x04\x0a\xb1\x09\x91\xa5\xc6\x87\x3d\x1a\x96\xb0\x15\xb8\x18\xff\x1a\x38\x98\x2a\x6d\x1a\x62\x63\x2a\xac\x09\xb7\x8e\x53\x57\x6b\x62\x1c\x81\x53\xe4\x41\x34\x74\x3c\x81\x93\xe6\xde\x6d\xcb\x18\x0f\x9e\x91\xe9\x22\xee\x52\xbe\xad\xb1\xd8\x60\x9f\x06\x08\xd9\xc0\x27\x69\x82\x86\x24\x2e\xde\xb7\x74\x82\xbb\x1c\x94\x08\x3a\x36\x37\x8d\xb8\x42\xca\xe8\xdc\x2d\xe1\x24\x69\xcb\xfc\x48\xb9\x36\x95\xa9\xcc\xe5\x6a\xbe\xbc\x5e\x2d\x6f\x2e\x2e\x97\x9f\xce\x8f\x16\xcb\xcf\xf3\x8b\xab\xf9\xc7\x31\x3a\x7a\xca\xad\x30\xab\x2f\x8b\xeb\xf7\x57\xf3\x9b\xc5\xea\xfc\xf8\x7f\x3f\xe4\x88\x56\xb5\x7f\x63\xed\xe9\xab\xd7\xf5\x8b\x97\x67\xf5\xe1\xb6\x1d\xd5\x35\x4e\x9d\xdd\x9d\xda\x20\xca\xbc\x71\x9e\xc5\xf6\x39\xec\x9c\xd2\x3e\xb7\xa1\xdf\x9d\x59\xd7\x34\x99\xa5\x3c\x1b\x57\xfd\xb2\xa7\x5c\xaf\x96\x66\x3f\x74\x08\x52\x74\x9c\x18\x7b\xc6\x59\x66\xa4\x2b\xc4\x6c\xff\xa8\x96\x7a\xca\xae\x97\x31\x6d\xe8\xdb\x84\x19\x71\xfc\xe3\xe1\xc7\xfd\xc4\x5b\x58\xaa\xb7\x07\xd4\xfa\x18\x28\x5a\x6a\x9f\x64\x63\x4c\xd9\x17\x65\xe7\x35\xa2\xa8\xcb\xfa\x47\xf0\xdd\x81\x7a\x50\xa7\x4c\xeb\xf1\x2f\x60\x8c\xf9\x1d\x00\x00\xff\xff\x93\x56\x16\xd4\xc3\x03\x00\x00")

func bootstrapVpnOpenvpnnodeCentosShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnOpenvpnnodeCentosSh,
		"bootstrap/vpn/openvpnNode-centos.sh",
	)
}

func bootstrapVpnOpenvpnnodeCentosSh() (*asset, error) {
	bytes, err := bootstrapVpnOpenvpnnodeCentosShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/vpn/openvpnNode-centos.sh", size: 963, mode: os.FileMode(493), modTime: time.Unix(1502632781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnOpenvpnnodeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xc1\x6e\x13\x31\x10\x86\xef\x7e\x8a\x9f\x6e\x0f\x20\x35\x6b\x8a\x0a\x12\x48\x45\x40\x09\x52\x38\xa4\x11\xaa\xca\xb1\x9a\x78\x27\xd9\xa1\xce\x78\x65\xcf\xa6\x44\x08\x9e\x1d\xed\x26\x40\xcb\x0b\xd4\x17\x6b\x66\x3e\xfd\x9e\xdf\x33\xd5\x13\xdf\x97\xec\x97\xa2\x9e\x75\x8b\x25\x95\xd6\x15\x36\x4c\xd8\x85\x06\xbf\x9c\xab\x30\x79\xa4\xe3\x2a\x5c\xb5\x5c\x18\x5b\x8a\x3d\x17\x50\x66\x88\x7e\xe3\x60\xdc\x40\xd4\x12\xac\x65\x94\x90\xa5\xb3\x1a\x5f\x79\x04\xf8\x7b\x17\x25\x88\xc5\x1d\x34\x19\xfa\x22\xba\x06\xc1\x78\xd3\x45\xb2\x21\x88\xa4\xeb\x9e\xd6\x0c\x4b\x07\xb9\x51\x67\xff\x88\xab\x40\x65\xa8\xb0\x86\xd4\xe7\x11\x6b\x19\x7d\xe1\x3c\x64\xa3\x6c\x64\xc4\x25\x0f\x39\xa4\xd5\x03\xe5\xb4\x96\x00\xd1\x01\x28\x8c\x95\x44\x2e\x35\x3e\xec\xd0\x70\x91\xb5\x82\x62\xfc\x67\xe0\x60\xaa\xb4\xa9\x8f\x8d\xab\xb0\x64\xd0\x32\x8e\x5d\x2d\x19\xc3\x08\xc8\x90\x7b\x35\xd9\xf0\x09\x48\x9b\xbd\xdb\x96\x63\x3c\x78\x46\x66\x8a\xb8\x4b\xf9\xb6\xc6\x6c\x85\x5d\xea\xa1\xcc\x0d\x42\xd2\x46\x4c\x92\x52\xdc\xb7\x74\x82\xbb\x2c\xc6\x10\x1b\x9a\x1b\x47\x5c\x21\x65\x6c\xe8\x96\x41\x9a\xac\xe5\xfc\x40\xb9\x76\x95\xab\xdc\xe5\x62\x3a\xbf\x5e\xcc\x6f\x2e\x2e\xe7\x9f\xce\x8f\x66\xf3\xcf\xd3\x8b\xab\xe9\xc7\x21\x3a\x7a\xcc\xad\x70\x8b\x2f\xb3\xeb\xf7\x57\xd3\x9b\xd9\xe2\xfc\xf8\x69\xe8\x73\x44\x6b\xd6\xbd\xf1\xfe\xf4\xd5\xeb\xfa\xc5\xcb\xb3\xfa\x70\xfb\x0d\x1b\x35\x64\xe4\xb7\xa7\x5e\xd4\x38\xaf\x28\x70\xf1\x5d\x96\x2d\x19\xfb\xe7\x5e\xba\xed\x99\xa7\xa6\xc9\x5c\xca\xb3\x61\xd5\x2f\x3b\xd6\xeb\xc5\xdc\x39\xea\x6c\xb2\x66\x43\xdf\x35\x64\xfc\x37\x14\x2d\x36\x4c\x71\xb2\x43\xea\x58\xb7\x9d\x3a\xc7\xa1\x4d\x98\x30\x8e\x7f\xdc\xff\xb0\x9f\x78\x0b\xcf\x16\xfc\x81\xf3\x21\x0a\xab\x95\x3a\x24\x5d\x39\x57\x76\xc5\x78\x13\x2c\xa2\x18\x65\xfb\xa3\xf6\xee\x40\xdd\xab\xb3\x8e\x6b\xf1\x3f\xf0\x3b\x00\x00\xff\xff\x9c\xb9\xeb\xe7\xb8\x03\x00\x00")

func bootstrapVpnOpenvpnnodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnOpenvpnnodeSh,
		"bootstrap/vpn/openvpnNode.sh",
	)
}

func bootstrapVpnOpenvpnnodeSh() (*asset, error) {
	bytes, err := bootstrapVpnOpenvpnnodeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/vpn/openvpnNode.sh", size: 952, mode: os.FileMode(493), modTime: time.Unix(1502632781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"bootstrap/README.md": bootstrapReadmeMd,
	"bootstrap/amazon_k8s_centos_7_master.sh": bootstrapAmazon_k8s_centos_7_masterSh,
	"bootstrap/amazon_k8s_centos_7_node.sh": bootstrapAmazon_k8s_centos_7_nodeSh,
	"bootstrap/amazon_k8s_ubuntu_16.04_master.sh": bootstrapAmazon_k8s_ubuntu_1604_masterSh,
	"bootstrap/amazon_k8s_ubuntu_16.04_node.sh": bootstrapAmazon_k8s_ubuntu_1604_nodeSh,
	"bootstrap/bootstrap_init.sh": bootstrapBootstrap_initSh,
	"bootstrap/digitalocean_k8s_centos_7_master.sh": bootstrapDigitalocean_k8s_centos_7_masterSh,
	"bootstrap/digitalocean_k8s_centos_7_node.sh": bootstrapDigitalocean_k8s_centos_7_nodeSh,
	"bootstrap/digitalocean_k8s_coreos_master.sh": bootstrapDigitalocean_k8s_coreos_masterSh,
	"bootstrap/digitalocean_k8s_coreos_node.sh": bootstrapDigitalocean_k8s_coreos_nodeSh,
	"bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh": bootstrapDigitalocean_k8s_ubuntu_1604_masterSh,
	"bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh": bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh,
	"bootstrap/google_compute_k8s_ubuntu_16.04_master.sh": bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh,
	"bootstrap/google_compute_k8s_ubuntu_16.04_node.sh": bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh,
	"bootstrap/inject.go": bootstrapInjectGo,
	"bootstrap/vpn/meshbirdMaster.sh": bootstrapVpnMeshbirdmasterSh,
	"bootstrap/vpn/meshbirdNode.sh": bootstrapVpnMeshbirdnodeSh,
	"bootstrap/vpn/openvpnMaster-centos.sh": bootstrapVpnOpenvpnmasterCentosSh,
	"bootstrap/vpn/openvpnMaster.sh": bootstrapVpnOpenvpnmasterSh,
	"bootstrap/vpn/openvpnNode-centos.sh": bootstrapVpnOpenvpnnodeCentosSh,
	"bootstrap/vpn/openvpnNode.sh": bootstrapVpnOpenvpnnodeSh,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"bootstrap": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{bootstrapReadmeMd, map[string]*bintree{}},
		"amazon_k8s_centos_7_master.sh": &bintree{bootstrapAmazon_k8s_centos_7_masterSh, map[string]*bintree{}},
		"amazon_k8s_centos_7_node.sh": &bintree{bootstrapAmazon_k8s_centos_7_nodeSh, map[string]*bintree{}},
		"amazon_k8s_ubuntu_16.04_master.sh": &bintree{bootstrapAmazon_k8s_ubuntu_1604_masterSh, map[string]*bintree{}},
		"amazon_k8s_ubuntu_16.04_node.sh": &bintree{bootstrapAmazon_k8s_ubuntu_1604_nodeSh, map[string]*bintree{}},
		"bootstrap_init.sh": &bintree{bootstrapBootstrap_initSh, map[string]*bintree{}},
		"digitalocean_k8s_centos_7_master.sh": &bintree{bootstrapDigitalocean_k8s_centos_7_masterSh, map[string]*bintree{}},
		"digitalocean_k8s_centos_7_node.sh": &bintree{bootstrapDigitalocean_k8s_centos_7_nodeSh, map[string]*bintree{}},
		"digitalocean_k8s_coreos_master.sh": &bintree{bootstrapDigitalocean_k8s_coreos_masterSh, map[string]*bintree{}},
		"digitalocean_k8s_coreos_node.sh": &bintree{bootstrapDigitalocean_k8s_coreos_nodeSh, map[string]*bintree{}},
		"digitalocean_k8s_ubuntu_16.04_master.sh": &bintree{bootstrapDigitalocean_k8s_ubuntu_1604_masterSh, map[string]*bintree{}},
		"digitalocean_k8s_ubuntu_16.04_node.sh": &bintree{bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh, map[string]*bintree{}},
		"google_compute_k8s_ubuntu_16.04_master.sh": &bintree{bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh, map[string]*bintree{}},
		"google_compute_k8s_ubuntu_16.04_node.sh": &bintree{bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh, map[string]*bintree{}},
		"inject.go": &bintree{bootstrapInjectGo, map[string]*bintree{}},
		"vpn": &bintree{nil, map[string]*bintree{
			"meshbirdMaster.sh": &bintree{bootstrapVpnMeshbirdmasterSh, map[string]*bintree{}},
			"meshbirdNode.sh": &bintree{bootstrapVpnMeshbirdnodeSh, map[string]*bintree{}},
			"openvpnMaster-centos.sh": &bintree{bootstrapVpnOpenvpnmasterCentosSh, map[string]*bintree{}},
			"openvpnMaster.sh": &bintree{bootstrapVpnOpenvpnmasterSh, map[string]*bintree{}},
			"openvpnNode-centos.sh": &bintree{bootstrapVpnOpenvpnnodeCentosSh, map[string]*bintree{}},
			"openvpnNode.sh": &bintree{bootstrapVpnOpenvpnnodeSh, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

